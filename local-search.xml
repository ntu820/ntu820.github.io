<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NFS服务搭建</title>
    <link href="/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="Centos7安装及配置-NFS-服务器"><a href="#Centos7安装及配置-NFS-服务器" class="headerlink" title="Centos7安装及配置 NFS 服务器"></a>Centos7安装及配置 NFS 服务器</h2><h3 id="步骤-1：安装-NFS-服务器-NFS-kernel-server"><a href="#步骤-1：安装-NFS-服务器-NFS-kernel-server" class="headerlink" title="步骤 1：安装 NFS 服务器 (NFS kernel server)"></a>步骤 1：安装 NFS 服务器 (NFS kernel server)</h3><p>若要设置服务器机器，就必须在机器上安装 NFS 服务器。</p><ol><li>安装 NFS 服务器。<div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum -y install nfs-utils rpcbind<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="步骤-2：创建输出目录"><a href="#步骤-2：创建输出目录" class="headerlink" title="步骤 2：创建输出目录"></a>步骤 2：创建输出目录</h3><p>NFS 客户端将在服务器机器上挂载一个目录，该目录已由 NFS 服务器输出。</p><ol><li>运行以下命令来指定挂载文件夹名称<div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;home&#x2F;zjnfschmod -R a+w &#x2F;home&#x2F;zjnfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="步骤-3：授予客户端机器访问-NFS-服务器的权限"><a href="#步骤-3：授予客户端机器访问-NFS-服务器的权限" class="headerlink" title="步骤 3：授予客户端机器访问 NFS 服务器的权限"></a>步骤 3：授予客户端机器访问 NFS 服务器的权限</h3><ol><li><p>运行以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;exports<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>将客户端信息添加到文件中。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">&#x2F;home&#x2F;zjnfs *(rw,sync,no_root_squash)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="步骤4：启动服务"><a href="#步骤4：启动服务" class="headerlink" title="步骤4：启动服务"></a>步骤4：启动服务</h3><ol><li><p>启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl start rpcbindsystemctl start nfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="步骤-4：应用配置"><a href="#步骤-4：应用配置" class="headerlink" title="步骤 4：应用配置"></a>步骤 4：应用配置</h3><ol><li><p>运行以下命令输出共享目录。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">exportfs -arv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="使用showmount命令测试NFS输出目录状态"><a href="#使用showmount命令测试NFS输出目录状态" class="headerlink" title="使用showmount命令测试NFS输出目录状态"></a>使用showmount命令测试NFS输出目录状态</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">showmount -e# 客户端测试showmount -e [NFS服务器IP]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>NFS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NFS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>maven常用操作</title>
    <link href="/2022/05/07/maven%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/07/maven%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="maven安装、配置"><a href="#maven安装、配置" class="headerlink" title="maven安装、配置"></a>maven安装、配置</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置MAVEN-HOME"><a href="#配置MAVEN-HOME" class="headerlink" title="配置MAVEN_HOME"></a>配置MAVEN_HOME</h4><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E9%85%8D%E7%BD%AE.png" alt="mvn配置"></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">C:\Users\Administrator&gt;mvn -vApache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-05T03:00:29+08:00)Maven home: D:\develop\apache-maven-3.6.1\bin\..Java version: 1.8.0_152, vendor: Oracle Corporation, runtime: D:\Java\jdk1.8.0_152\jreDefault locale: zh_CN, platform encoding: GBKOS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>看到此字样，即为成功。</p><h4 id="配置settings-conf，一般在maven根目录下的conf文件下"><a href="#配置settings-conf，一般在maven根目录下的conf文件下" class="headerlink" title="配置settings.conf，一般在maven根目录下的conf文件下"></a>配置settings.conf，一般在maven根目录下的conf文件下</h4><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/SETTINGS/1.0.0<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置jar包本地下载地址 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>D:\my_maven\repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroups</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>org.pentaho.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>com.pentaho.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>com.github.spotbugs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroups</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>devreaduser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>&#123;zIMyJWfHKfoHiBJAVsAgW4E5BcJzR+nhTtgPy0J+/rs=&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置私服认证 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>[username]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>[password]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置阿里仓库，加快下载 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>alimaven in central RELEASE.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun Maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>xxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://ip/repository/maven-ztgt/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Pentaho Public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Pentaho Public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="maven常用操作"><a href="#maven常用操作" class="headerlink" title="maven常用操作"></a>maven常用操作</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><code>mvn -Dmaven.test.skip=true clean package</code></p><p>-Dmaven.test.skip=true：跳过测试</p><p>clean：先进行清理</p><h3 id="安装jar"><a href="#安装jar" class="headerlink" title="安装jar"></a>安装jar</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mvn install:install-file \ # 操作    -Dfile&#x3D;[XXX.jar] \ # jar包名称    -DgroupId&#x3D;[com.hmifo] \ # groupid    -DartifactId&#x3D;[hm-core-tool] \ # artifactid    -Dversion&#x3D;[1.0.0.RELEASE] \ # 版本    -Dpackaging&#x3D;jar # 格式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>需要和当前jar在同一级目录下执行</p><h3 id="上传jar到私服"><a href="#上传jar到私服" class="headerlink" title="上传jar到私服"></a>上传jar到私服</h3><ol><li>配置上传目标</li></ol><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distributionManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 这里和私服配置的id必须一致 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://ip/repository/maven-ztgt/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distributionManagement</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="2"><li>上传</li></ol><ul><li>命令上传</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mvn deploy:deploy-file \ # 上传操作    -DgroupId&#x3D;[com.zhenai.dakehu] \ # groupid    -DartifactId&#x3D;[dakehu-commons] \ # artifactid    -Dversion&#x3D;[1.0.0-SNAPSHOT] \ # 版本    -Dpacckaging&#x3D;jar \ # 格式    -Dfile&#x3D;[dakehu-commons-1.0.0-SNAPSHOT.jar] \ # 文件名称    -DrepositoryId&#x3D;[aven-snapshots] \ # 仓库id，和私服配置的必须一致    -Durl&#x3D;p[ttp:&#x2F;&#x2F;112.124.33.150:8081&#x2F;repository&#x2F;maven-snapshots&#x2F; # 私服地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>idea上传</li></ul><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E4%B8%8A%E4%BC%A0.png" alt="mvn上传"></p><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ol><li><p>更新版本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 更新版本号 -DgenerateBackupPoms&#x3D;false  不生成备份文件mvn versions:set -DnewVersion&#x3D;[1.0.2-SNAPSHOT]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>更新子模块版本</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn -N versions:update-child-modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>版本回退</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 版本回滚，提交后就无法回滚了mvn versions:revert<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>版本提交</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn versions:commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h2 id="maven制作archetype"><a href="#maven制作archetype" class="headerlink" title="maven制作archetype"></a>maven制作archetype</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Archetype是Maven工程的模板工具包。使用Archetype提供的方法可以快速的构建和组织一致化的工程，解决在工作过程中创建一个新项目时需一堆繁琐的配置工作等。</p><h3 id="基于maven项目制作archetype"><a href="#基于maven项目制作archetype" class="headerlink" title="基于maven项目制作archetype"></a>基于maven项目制作archetype</h3><ol><li><p>准备好maven项目，将无关代码全部删除，只保留最基础的项目和结构</p></li><li><p>在项目的根目录下的pom中添加依赖</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>进入项目根目录，执行<code>mvn archetype:create-from-project</code>进行模板生成</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvncreatearchetype.png" alt="mvncreatearchetype"></p></li><li><p>进入项目的<font style="font-weight:bold;">/target/generated-sources/archetype</font>目录，执行<code>mvn clean install</code></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvninstallarchetypr.png" alt="mvninstallarchetypr"></p></li><li><p>idea使用自定义archetype</p><ol><li><p>建立自己的项目模板</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype.png" alt="createproformarchetype"></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype2.png" alt="createproformarchetype2"></p><blockquote><p>1.<font style="background:#EFDAA2">archetype-catalog.xml</font>一般在<font style="background:#EFDAA2">.m2</font>的目录下，默认为用户家目录</p><p>2.如果修改过maven的仓库保存路径的，一般就在修改过的目录下，可以找到a<font style="background:#EFDAA2">rchetype-catalog.xml</font>文件</p><p>3.为了正确执行生成操作，建议在用户家目录下新建<font style="background:#EFDAA2">.m2</font>文件夹，然后把maven的<font style="background:#EFDAA2">settings.xml</font>和<font style="background:#EFDAA2">archetype-catlog.xml</font>放进去</p></blockquote></li><li><p>填写自己项目的信息，即可进行生成</p></li></ol></li><li><p>删除自定义的archetype</p><p>一般在<font style="background:#EFDAA2">C:\Users\Administrator\AppData\Local\JetBrains\IntelliJIdea2020.1\Maven\Indices</font>或者<font style="background:#EFDAA2">C:\Users\Administrator.idea\Maven\Indices</font>文件夹下，找到<font style="background:#EFDAA2">UserArchetypes.xml</font>文件，去除想要删除archetype模板，重启idea即可</p></li></ol><h3 id="maven的配置文件使用密文"><a href="#maven的配置文件使用密文" class="headerlink" title="maven的配置文件使用密文"></a>maven的配置文件使用密文</h3><blockquote><p>使用场景：如果把明文设置在 <code>settings.xml</code> 中，产生安全隐患，为此需要使用密文存储。</p></blockquote><ol><li><p>使用maven提供的加密功能</p><p>在 Maven Password Encryption中有两个概念，</p><ul><li>master password （加密其他密码的密码），一般配置在<code>settings-security.xml</code>文件中</li><li>实际使用密码，配置在<code>settings.xml</code>文件中</li></ul></li><li><p>具体步骤</p><ol><li><p>设置master密码</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn --encrypt-master-password [pwd]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>配置<code>$&#123;MAVEN_HOME&#125;\.m2\settings-security.xml</code>，如果不存在，则手动创建</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settingsSecurity</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>master</span><span class="token punctuation">></span></span>[上一步生成的密码]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>master</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settingsSecurity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>设置实际使用的密码</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn --encrpty-password [pwd] <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>配置<code>settings.xml</code>文件</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>[上一步生成的密钥]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>maven</category>
      
    </categories>
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下skywalking8.3实践，监控JAVA应用</title>
    <link href="/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/"/>
    <url>/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前提：需要提前配置JDK，至少在1.8版本以上。</p><p>skywalking8.3-es7版本，下载地址：<a href="https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz">https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz</a></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget https:&#x2F;&#x2F;archive.apache.org&#x2F;dist&#x2F;skywalking&#x2F;8.3.0&#x2F;apache-skywalking-apm-es7-8.3.0.tar.gztar -zxvf apache-skywalking-apm-es7-8.3.0.tar.gzmv apache-skywalking-apm-es7-bin &#x2F;usr&#x2F;local&#x2F;skwalking-es7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;usr&#x2F;local&#x2F;skywalking-es7vi webapp&#x2F;webapp.yml# 修改端口号，如果端口没被占用，可以不修改server:  port: 8080 # UI默认端口collector:  path: &#x2F;graphql  ribbon:    ReadTimeout: 10000    listOfServers: 172.16.214.41:12800 # 这里改成自己电脑的IP    vi config&#x2F;application.yml# 主要修改存储为es7storage:  selector: $&#123;SW_STORAGE:elasticsearch7&#125; # 修改后端存储  elasticsearch7:    nameSpace: $&#123;SW_NAMESPACE:&quot;skywalking&quot;&#125; # 修改es中索引的前缀    clusterNodes: $&#123;SW_STORAGE_ES_CLUSTER_NODES:172.16.214.107:9200&#125; # 配置es的地址    user: $&#123;SW_ES_USER:&quot;elastic&quot;&#125; # es登录用户名，如果没有则为空    password: $&#123;SW_ES_PASSWORD:&quot;ccc7711866&quot;&#125; # es登录密码，如果没有则为空<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">bin&#x2F;startup.shtail -f logs&#x2F;skywalking-oap-server.log # 可以看到启动情况netstat -nlp|grep java# 需要看到三个端口，8080为UI端口，11800为grpc通讯端口，12800为http通讯端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="监控JAVA应用"><a href="#监控JAVA应用" class="headerlink" title="监控JAVA应用"></a>监控JAVA应用</h3><h4 id="方式1，本地通过java的vm启动参数进行"><a href="#方式1，本地通过java的vm启动参数进行" class="headerlink" title="方式1，本地通过java的vm启动参数进行"></a>方式1，本地通过java的vm启动参数进行</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-Dskywalking.agent.service_name&#x3D;blade-user-local \ # swywalking监控显示应用名称-Dskywalking.collector.backend_service&#x3D;192.168.186.66:11800 \ # skywalking后端地址-jar XXXX.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-javavm.png" alt="sk-javavm"></p><h4 id="方式2，通过将skywalking-agent打入镜像包进行"><a href="#方式2，通过将skywalking-agent打入镜像包进行" class="headerlink" title="方式2，通过将skywalking-agent打入镜像包进行"></a>方式2，通过将skywalking-agent打入镜像包进行</h4><div class="code-wrapper"><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM alpine-java:openjdk8-openj9ENV LANG&#x3D;C.UTF-8RUN set -eux \&amp;&amp; mkdir &#x2F;biz \&amp;&amp; mkdir &#x2F;usr&#x2F;skywalking&#x2F;agentADD .&#x2F;*.jar .&#x2F;app.jarADD .&#x2F;skywalking-agent &#x2F;usr&#x2F;skywalking&#x2F;agentWORKDIR &#x2F;bizENTRYPOINT [&quot;java&quot;, &quot;-javaagent:&#x2F;usr&#x2F;skywalking&#x2F;agent&#x2F;skywalking-agent.jar&quot;, &quot;-Dskywalking.agent.service_name&#x3D;blade-user-linux&quot;, &quot;-Dskywalking.collector.backend_service&#x3D;[skywalking-oap服务的地址]:11800&quot;, &quot;-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom&quot;, &quot;-jar&quot;, &quot;app.jar&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="方式3，通过Kubernetes的sidecar模式进行（推荐）"><a href="#方式3，通过Kubernetes的sidecar模式进行（推荐）" class="headerlink" title="方式3，通过Kubernetes的sidecar模式进行（推荐）"></a>方式3，通过Kubernetes的sidecar模式进行（推荐）</h4><p>方式1，通过参数输入方式只能在本地和不进行容器化的时候使用，而且服务器上必须有skywalking-agent的包；方式2，通过制作镜像时将skywalking相关文件集成进去，制作的业务镜像大小变大，而且没办法动态修改监控内容。采用sidecar模式，本身不需要改变原有镜像的打包方式，其次，对于业务开发来说透明，开发人员无需关系skywalking内容。</p><h5 id="1-制作自己的skywalking-agengt镜像"><a href="#1-制作自己的skywalking-agengt镜像" class="headerlink" title="1. 制作自己的skywalking-agengt镜像"></a>1. 制作自己的skywalking-agengt镜像</h5><div class="code-wrapper"><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM busybox:latestENV LANG&#x3D;C.UTF-8RUN set -eux \&amp;&amp; mkdir -p &#x2F;usr&#x2F;skywalking&#x2F;agentadd .&#x2F;skywalking-agent &#x2F;usr&#x2F;skywalking&#x2F;agentWORKDIR &#x2F;usr&#x2F;skywalking&#x2F;agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h5 id="2-在yaml文件中，通过initContainer方式进行集成"><a href="#2-在yaml文件中，通过initContainer方式进行集成" class="headerlink" title="2.在yaml文件中，通过initContainer方式进行集成"></a>2.在yaml文件中，通过initContainer方式进行集成</h5><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>deploy  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent<span class="token punctuation">-</span>sidecar          <span class="token key atrule">image</span><span class="token punctuation">:</span> harbor.zt.net.cn/library/skywalking<span class="token punctuation">-</span>agent<span class="token punctuation">-</span>sidecar<span class="token punctuation">:</span>8.3.0 <span class="token comment"># 自己的agent镜像</span>          <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"sh"</span><span class="token punctuation">]</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">[</span>              <span class="token string">"-c"</span><span class="token punctuation">,</span>              <span class="token string">"mkdir -p /skywalking/agent &amp;&amp; cp -r /usr/skywalking/agent/* /skywalking/agent"</span>            <span class="token punctuation">]</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span> <span class="token comment"># 文件挂在点</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /skywalking/agent              <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo          <span class="token key atrule">image</span><span class="token punctuation">:</span> harbor.zt.net.cn/bladex/skywalking<span class="token punctuation">-</span>test<span class="token punctuation">-</span>demo<span class="token punctuation">:</span>v1          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> JAVA_TOOL_OPTIONS <span class="token comment"># 通过JAVA_TOOL_OPTIONS参数进行集成</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>javaagent<span class="token punctuation">:</span>/usr/skywalking/agent/skywalking<span class="token punctuation">-</span>agent.jar            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SW_AGENT_NAME <span class="token comment"># 应用在skywalking中的名称</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> skywalking<span class="token punctuation">-</span>demo            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SW_AGENT_COLLECTOR_BACKEND_SERVICES <span class="token comment"># skywalking的oap服务地址</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> 192.168.186.34<span class="token punctuation">:</span><span class="token number">11800</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> <span class="token string">"1000Mi"</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"500m"</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span> <span class="token comment"># 文件挂在点</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /usr/skywalking/agent      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent <span class="token comment"># 文件挂在点，这里给一个空文件</span>          <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> harbor<span class="token punctuation">-</span>secret<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo  <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>svc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-apm.png" alt="sk-apm"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-db.png" alt="sk-db"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-topology.png" alt="sk-topology"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>skywalking</category>
      
    </categories>
    
    
    <tags>
      
      <tag>skywalking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各种运维处理</title>
    <link href="/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/"/>
    <url>/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="kubectl操作"><a href="#kubectl操作" class="headerlink" title="kubectl操作"></a>kubectl操作</h3><ol><li>批量操作<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 批量删除kube-system空间下状态为“驱逐”的podkubectl get pod -n kube-system|grep Evicted|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div>批量操作说明，所有批量操作都可以采用此方案<br></li></ol><ul><li>使用命令查询出需要批量操作的内容</li><li>使用 <code>awk</code> 打印出内容的标识</li><li>使用 <code>xargs</code> 进行命令的拼接</li></ul><ol start="2"><li>产生集群管理员的密钥<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adm_account&#x3D;&quot;k8s-dash-admin&quot;# 产生sakubectl create serviceaccount $&#123;adm_account&#125; -n kube-system# 产生集群角色绑定kubectl create clusterrolebinding $&#123;adm_account&#125; --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:$&#123;adm_account&#125;# 查看密钥kubectl -n kube-system describe secrets $(kubectl -n kube-system get secret | grep $&#123;adm_account&#125; | awk &#39;&#123;print $1&#125;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="docker操作"><a href="#docker操作" class="headerlink" title="docker操作"></a>docker操作</h3><ol><li>解决overlay2空间越来越大问题<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 进入目录cd cd &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2# 查看文件大小du -h --max-depth&#x3D;1# 查看占用空间的pid，以及对应的容器名称docker ps -q | xargs docker inspect --format &#39;&#123;&#123;.State.Pid&#125;&#125;, &#123;&#123;.Name&#125;&#125;, &#123;&#123;.GraphDriver.Data.WorkDir&#125;&#125;&#39; | grep &quot;[overlay2的文件名称]&quot;# 解决方法（会删除对应的容器和对应镜像）docker stop [容器名称] &amp;&amp; docker rm [容器名称] &amp;&amp; docker rmi [镜像id]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="curl操作"><a href="#curl操作" class="headerlink" title="curl操作"></a>curl操作</h3><ol><li>发送get请求<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl [-X GET] &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;api&#x2F;ztgt-mdm&#x2F;getMdmInfo&#x2F;deptInfo&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li>发送post请求<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl -H &quot;Content-Type: application&#x2F;json&quot; -H &quot;serviceCode: 1052125D01&quot; -H &quot;sourceCode: 1052&quot; -H &quot;requestId: fc7deb67-6168-4d70-9c22-cbdd16a99f28&quot; -X POST -d &#39;&#123;&quot;COMPID&quot;:&quot;1339&quot;,&quot;PROJECTNO&quot;:&quot;NTGC20201015&quot;,&quot;AMT&quot;:0,&quot;TYPE&quot;:&quot;GC&quot;,&quot;PROJECTNAME&quot;:&quot;加油点（柴油）单元&quot;&#125;&#39; &quot;http:&#x2F;&#x2F;esb-pre.zt.net.cn:18080&#x2F;esb&#x2F;comm&#x2F;api&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="Linux防火墙操作"><a href="#Linux防火墙操作" class="headerlink" title="Linux防火墙操作"></a>Linux防火墙操作</h3><ol><li><p>firewalld的基本使用</p><table><thead><tr><th></th><th>操作</th><th align="left">命令</th></tr></thead><tbody><tr><td></td><td>启动</td><td align="left"><code>systemctl start firewalld</code></td></tr><tr><td></td><td>关闭</td><td align="left"><code>systemctl stop firewalld</code></td></tr><tr><td></td><td>查看状态</td><td align="left"><code>systemctl status firewalld</code></td></tr><tr><td></td><td>开机禁用</td><td align="left"><code>systemctl disable firewalld</code></td></tr><tr><td></td><td>开机启动</td><td align="left"><code>systemctl enable firewalld</code></td></tr></tbody></table></li><li><p>firewalld-cmd操作</p><table><thead><tr><th></th><th>操作</th><th>命令</th></tr></thead><tbody><tr><td></td><td>查看版本</td><td><code>firewall-cmd --version</code></td></tr><tr><td></td><td>显示状态</td><td><code>firewall-cmd --state</code></td></tr><tr><td></td><td>查看所有打开的端口</td><td><code>firewall-cmd --zone=public --list-ports</code></td></tr><tr><td></td><td>更新防火墙规则</td><td><code>firewall-cmd --reload</code></td></tr><tr><td></td><td>查看区域信息</td><td><code>firewall-cmd --get-active-zones</code></td></tr><tr><td></td><td>查看指定接口所属区域</td><td><code>firewall-cmd --get-zone-of-interface=eth0</code></td></tr><tr><td></td><td>拒绝所有包</td><td><code>firewall-cmd --panic-on</code></td></tr><tr><td></td><td>取消拒绝状态</td><td><code>firewall-cmd --panic-off</code></td></tr><tr><td></td><td>查看是否拒绝</td><td><code>firewall-cmd --query-panic</code></td></tr><tr><td></td><td>添加</td><td><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></td></tr><tr><td></td><td>删除</td><td><code>firewall-cmd --zone= public --remove-port=80/tcp --permanent</code></td></tr></tbody></table></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>kubectl</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装sonarqube-8.9.7</title>
    <link href="/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/"/>
    <url>/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/</url>
    
    <content type="html"><![CDATA[<h3 id="下载sonarqube"><a href="#下载sonarqube" class="headerlink" title="下载sonarqube"></a>下载sonarqube</h3><p>社区版下载：<a href="https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip">https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip</a></p><p>sonarqube从7.9开始已经不支持mysql了，所以需要提前安装jdk和pg。</p><p>本次环境前提：</p><table><thead><tr><th>序号</th><th>环境</th><th>版本</th></tr></thead><tbody><tr><td>1</td><td>jdk</td><td>14</td></tr><tr><td>2</td><td>postgresql</td><td>14</td></tr><tr><td>3</td><td>sonarqube</td><td>8.9.7</td></tr></tbody></table><h3 id="新建sqonarqube数据库"><a href="#新建sqonarqube数据库" class="headerlink" title="新建sqonarqube数据库"></a>新建sqonarqube数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#创建sonar数据库create database sonar;#创建sonar用户create user sonar;#设置sonar用户密码(否则会导致连不上数据库)alter user sonar with password &#39;postgres&#39;;#给sonar授权alter role sonar createdb;alter role sonar superuser;alter role sonar createrole;    #更改sonar数据库拥有者(这一步是必须的，否则会sonarqube会连接失败)alter database sonar owner to sonar；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="修改系统配置"><a href="#修改系统配置" class="headerlink" title="修改系统配置"></a>修改系统配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;sysctl.conf# 在文件末尾添加如下vm.max_map_count&#x3D;262144fs.file-max&#x3D;65536# 生效&#x2F;sbin&#x2F;sysctl -pvi &#x2F;etc&#x2F;profile# 在文件末尾添加如下ulimit -n 65536# 生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="创建sonar用户"><a href="#创建sonar用户" class="headerlink" title="创建sonar用户"></a>创建sonar用户</h3><p>因为sonarquber无法使用<code>root</code>用户启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 添加用户useradd sonar# 设置密码passwd sonar# 分配权限chown -R sonar:sonar &#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置数据库连接和ES"><a href="#配置数据库连接和ES" class="headerlink" title="配置数据库连接和ES"></a>配置数据库连接和ES</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7&#x2F;conf&#x2F;sonar.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonardb.png" alt="sonardb"></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarhost.png" alt="sonarhost"></p><p>默认情况下，Elasticsearch数据存储在$ SONARQUBE-HOME / data中，但不建议将其用于生产实例。相反，您应该将此数据存储在其他位置，最好是在具有快速I / O的专用卷中。除了保持可接受的性能外，这样做还可以简化SonarQube的升级</p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonares.png" alt="sonares"></p><h3 id="创建必要的目录、权限"><a href="#创建必要的目录、权限" class="headerlink" title="创建必要的目录、权限"></a>创建必要的目录、权限</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;sonarqube&#x2F;datamkdir -p &#x2F;data&#x2F;sonarqube&#x2F;tempchown -R sonar:sonar &#x2F;data&#x2F;sonarqube<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="安装sonar-scanner扫描器"><a href="#安装sonar-scanner扫描器" class="headerlink" title="安装sonar-scanner扫描器"></a>安装sonar-scanner扫描器</h3><p>下载地址：<a href="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip">https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip</a></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压，放到&#x2F;usr&#x2F;local下unzip sonar-scanner-cli-4.7.0.2747-linux.zipvi &#x2F;usr&#x2F;local&#x2F;sonar-scanner-4.7.0.2747-linux&#x2F;conf&#x2F;sonar-scanner.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarscanner.png" alt="sonarscanner"></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 创建软连接，将sonar-scanner改为全局即可使用ln -s &#x2F;usr&#x2F;local&#x2F;sonar-scanner-4.7.0.2747-linux&#x2F;bin&#x2F;sonar-scanner &#x2F;usr&#x2F;bin&#x2F;sonar-scanner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p><font color='red' size='12px'>sonarqube必须以非<code>root</code>用户权限</font></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">su - sonar&#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>登录<code>http://[IP]:9000</code>，看到登录页面即为成功。初始账密：<code>admin/admin</code></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarsucc.png" alt="登陆页面"></p>]]></content>
    
    
    <categories>
      
      <category>sonarqube</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>sonarqube</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9离线安装postgresql的14版本</title>
    <link href="/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/"/>
    <url>/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="下载必要安装包"><a href="#下载必要安装包" class="headerlink" title="下载必要安装包"></a>下载必要安装包</h3><table><thead><tr><th>序号</th><th>软件名称</th><th>下载地址</th></tr></thead><tbody><tr><td>1</td><td>libicu-50.2-4.el7_7.x86_64.rpm</td><td><a href="http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm">http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm</a></td></tr><tr><td>2</td><td>postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>3</td><td>postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>4</td><td>postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr></tbody></table><h3 id="安装postgresql并启动"><a href="#安装postgresql并启动" class="headerlink" title="安装postgresql并启动"></a>安装postgresql并启动</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rpm -ivh libicu-50.2-4.el7_7.x86_64.rpmrpm -ivh postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpmrpm -ivh postgresql14-14.2-1PGDG.rhel7.x86_64.rpmrpm -ivh postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm# 启动&#x2F;usr&#x2F;pgsql-14&#x2F;bin&#x2F;postgresql-14-setup initdb# 设置开机启动systemctl enable postgresql-14systemctl start postgresql-14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置postgresql"><a href="#配置postgresql" class="headerlink" title="配置postgresql"></a>配置postgresql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;14&#x2F;data&#x2F;postgresql.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgseting.png" alt="pgseting"></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;14&#x2F;data&#x2F;pg_hba.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pghba.png" alt="pghba"></p><h3 id="重启postgresql"><a href="#重启postgresql" class="headerlink" title="重启postgresql"></a>重启postgresql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl restart postgresql-14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>以上方式安装默认会创建<code>postgres</code>用户</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 切换用户su - postgrespsql# 创建数据库用户create user pg password &#39;pg&#39;;# 赋予账号权限alter user pg supperuser;# 新建数据库create database pg;exit# 重新登录su postgrespsql -U pg -h localhost -W# 输入密码 pg# 显示数据库\l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgdb.png" alt="pghba"></p><p>到此，数据库成功。</p>]]></content>
    
    
    <categories>
      
      <category>postgresql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>postgresql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装Mysql-5.7.21</title>
    <link href="/2022/03/31/mysql%E5%AE%89%E8%A3%85/"/>
    <url>/2022/03/31/mysql%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="解压到目录"><a href="#解压到目录" class="headerlink" title="解压到目录"></a>解压到目录</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压tar -zxvf mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz# 移动目录mv mysql-5.7.21-linux-glibc2.12-x86_64 &#x2F;usr&#x2F;local&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="新增用户、组和数据目录"><a href="#新增用户、组和数据目录" class="headerlink" title="新增用户、组和数据目录"></a>新增用户、组和数据目录</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 新增组groupadd mysql# 新增用户useradd -r -g mysql mysql# 创建目录mkdir -p &#x2F;data&#x2F;mysql# 分配权限chown mysql:mysql -R &#x2F;data&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置my-cnf"><a href="#配置my-cnf" class="headerlink" title="配置my.cnf"></a>配置my.cnf</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;my.cnf# 可以采用这个[mysqld]bind-address&#x3D;0.0.0.0port&#x3D;3306user&#x3D;mysqlbasedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysqldatadir&#x3D;&#x2F;data&#x2F;mysqlsocket&#x3D;&#x2F;tmp&#x2F;mysql.socklog-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.errpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.pid#character configcharacter_set_server&#x3D;utf8mb4symbolic-links&#x3D;0explicit_defaults_for_timestamp&#x3D;true# 也可以采用这个[mysql]# 设置mysql客户端默认字符集default-character-set&#x3D;utf8socket&#x3D;&#x2F;tmp&#x2F;mysql.sock[mysqld]#skip-name-resolve#skip-grant-tables#设置3306端口port&#x3D;3306socket&#x3D;&#x2F;tmp&#x2F;mysql.sock# 设置mysql的真正的安装目录 （看自己的是在哪里)basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql# 设置mysql数据库的数据的存放目录 （看自己的是在哪里)datadir&#x3D;&#x2F;data&#x2F;mysql# 允许最大连接数max_connections&#x3D;200# 服务端使用的字符集默认为8比特编码的latin1字符雿character-set-server&#x3D;utf8# 创建新表时将使用的默认存储引擿default-storage-engine&#x3D;INNODB#lower_case_table_name&#x3D;1max_allowed_packet&#x3D;16M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin.&#x2F;mysqld --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F; --user&#x3D;mysql --initialize# 成功以后，查看密码cat &#x2F;data&#x2F;mysql&#x2F;mysql.err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqlservice start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -p# 输入刚刚获得的密码# 修改密码SET PASSWORD &#x3D; PASSWORD(&#39;root&#39;);ALTER USER &#39;root&#39;@&#39;localhost&#39; PASSWORD EXPIRE NEVER;FLUSH PRIVILEGES;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="新增软连接"><a href="#新增软连接" class="headerlink" title="新增软连接"></a>新增软连接</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 不用每次都进入mysql目录运行命令ln -s  &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql    &#x2F;usr&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>调用ES的Rest Api</title>
    <link href="/2022/03/28/ES/"/>
    <url>/2022/03/28/ES/</url>
    
    <content type="html"><![CDATA[<h3 id="ES介绍"><a href="#ES介绍" class="headerlink" title="ES介绍"></a>ES介绍</h3><p><strong><a href="https://www.elastic.co/cn/elasticsearch/">Elasticsearch</a> 是一个分布式、高扩展、高实时的搜索与数据分析引擎。它能很方便的使大量数据具有搜索、分析和探索的能力。充分利用Elasticsearch的水平伸缩性，能使数据在生产环境变得更有价值。Elasticsearch 的实现原理主要分为以下几个步骤，首先用户将数据提交到Elasticsearch 数据库中，再通过分词控制器去将对应的语句分词，将其权重和分词结果一并存入数据，当用户搜索数据时候，再根据权重将结果排名，打分，再将返回结果呈现给用户。</strong></p><h3 id="Rest-Api使用"><a href="#Rest-Api使用" class="headerlink" title="Rest Api使用"></a>Rest Api使用</h3><ol><li><p>新建索引</p><p><strong>PUT</strong> <code>http://192.168.186.34:9200/[索引名称]?pretty</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"acknowledged"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"shards_acknowledged"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"index"</span><span class="token operator">:</span> <span class="token string">"esb01"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询所有[指定索引名称]索引</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/_cat/indices/[指定查看索引名称]?v</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">health status index          uuid                   pri rep docs.count docs.deleted store.size pri.store.sizeyellow open   esb01          YGAh5h_kRoCsPloXy-izxg   1   1          0            0       208b           208byellow open   esb1           oQKqdAQXShCJuMOzVdfs7A   1   1          2            0     11.6kb         11.6kbyellow open   esb            -b6_v24FRS2tp9y-ohdouw   1   1     156566            0     68.8mb         68.8mbyellow open   esb-2022-03-28 PSwgzv8rR3iZcPOxbZuPTw   1   1         88            0    205.9kb        205.9kbgreen  open   .kibana_1      UF0_tkz0QjChT-ToRowqUQ   1   0       1479           40    336.4kb        336.4kbyellow open   t1             uXd6GoLyQpK82YkagbO_ag   1   1          2            0     11.7kb         11.7kbyellow open   t2             tvbutoedSNWYxmy6TTFhTw   1   1          2            0     11.7kb         11.7kbyellow open   esb-2022-03-26 i8e4g_0fTzqFtn-OYN27pA   1   1       4762            0      2.6mb          2.6mbyellow open   esb-2022-03-27 wrm87nSJT-K-pRFG0oofXg   1   1        576            0    705.6kb        705.6kbyellow open   t3             -nBkF1RzRxWUOlYVExZhTw   1   1          1            0      5.9kb          5.9kb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询索引默认索引配置</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称]/_mapping?pretty</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"esb-2022-03-27"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"mappings"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"ACCTDATE"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token property">"requestId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>新增数据</p><p><strong>POST</strong> <code>http://192.168.186.34:9200/[索引名称]/[type，一般为json/doc]?pretty</code></p><p>请求Body：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"transTime"</span><span class="token operator">:</span> <span class="token number">1648373786067</span><span class="token punctuation">,</span><span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"pass"</span><span class="token operator">:</span> <span class="token string">"1111111111"</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"11111111"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token string">"1090109102"</span><span class="token punctuation">,</span><span class="token property">"requestId"</span><span class="token operator">:</span> <span class="token string">"aeb9adf2-618f-4c6b-a965-5bea4698e893"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>返回结果：（以json为例）</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"_index"</span><span class="token operator">:</span> <span class="token string">"esb-2022-03-27"</span><span class="token punctuation">,</span><span class="token property">"_type"</span><span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span><span class="token property">"_id"</span><span class="token operator">:</span> <span class="token string">"h_XCyn8Bthbf_40jLeF_"</span><span class="token punctuation">,</span><span class="token property">"_version"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"result"</span><span class="token operator">:</span> <span class="token string">"created"</span><span class="token punctuation">,</span><span class="token property">"_shards"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"total"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"successful"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"failed"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token number">535</span><span class="token punctuation">,</span><span class="token property">"_primary_term"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询数据</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称，支持通配符，可实现多个索引一起查询]/_search?pretty=true</code></p><p>请求Body：</p><ul><li>查询所有数据</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"query"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"match_all"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"from"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"size"</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>    <span class="token property">"sort"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"_seq_no"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"order"</span><span class="token operator">:</span><span class="token string">"desc"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>根据某个字段查询（精确）</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"match_phrase[match]"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"[serviceCode，查询的某个字段]"</span><span class="token operator">:</span><span class="token string">"test001"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>查询某个字段是否存在</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"exists"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"field"</span><span class="token operator">:</span><span class="token string">"[字段名称]"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>检索某个值</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"simple_query_string"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token string">"[具体值]"</span><span class="token punctuation">,</span><span class="token property">"default_operator"</span><span class="token operator">:</span> <span class="token string">"and"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>多条件查询</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"match_phrase"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token string">"1090109102"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"exists"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"field"</span><span class="token operator">:</span> <span class="token string">"data.name"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>范围查询</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"range"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"[transTime,范围字段]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"gte"</span><span class="token operator">:</span> <span class="token number">1648426657334</span><span class="token punctuation">,</span>        <span class="token property">"lte"</span><span class="token operator">:</span> <span class="token number">1648430679534</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="实际应用示例，以ESB消息检索为例"><a href="#实际应用示例，以ESB消息检索为例" class="headerlink" title="实际应用示例，以ESB消息检索为例"></a>实际应用示例，以ESB消息检索为例</h3><p><img src="/img/ES/es%E6%B6%88%E6%81%AF%E6%A3%80%E7%B4%A2.png" alt="es消息检索"></p><ul><li><p>查询所有消息</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><h3 id="ES报错处理"><a href="#ES报错处理" class="headerlink" title="ES报错处理"></a>ES报错处理</h3><ol><li><p><strong>==<font color="red">Limit of total fields [1000] has been exceeded</font>==</strong></p><p>原因：ES对mapping做了映射保护，防止mapping爆炸。</p><p>解决方法：<strong>index.mapping.total_fields.limit：</strong>本设置允许您限制可手动或动态创建的字段映射的数量，以防止错误的文档导致映射爆炸，索引中的最大字段数。默认值为1000。</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT http:&#x2F;&#x2F;192.168.186.34:9200&#x2F;[索引名称]&#x2F;_settings -d &#39;&#123;&quot;index.mapping.total_fields.limit&quot;: [mapping数量,50000]&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>Elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Http</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx常用配置</title>
    <link href="/2022/03/25/ngcfg/"/>
    <url>/2022/03/25/ngcfg/</url>
    
    <content type="html"><![CDATA[<h3 id="location匹配规则"><a href="#location匹配规则" class="headerlink" title="location匹配规则"></a>location匹配规则</h3><ol><li>= 表示精确匹配。只有请求的url路径与后面的字符串完全相等时，才会命中。</li><li>^~ 表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找。</li><li>~ 表示该规则是使用正则定义的，区分大小写。</li><li>~* 表示该规则是使用正则定义的，不区分大小写。<br>注意：nginx按照上面的顺序进行优先匹配，一旦匹配直接退出。</li></ol><p>剩下的匹配，会按照<strong>最长匹配长度优先级来匹配</strong>，就是谁匹配的多就用谁。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location &#x2F;document &#123;        return 701;    &#125;    location ~* ^&#x2F;docume.*$ &#123;        return 702;    &#125;    location ~* ^&#x2F;document$ &#123;        return 703;    &#125;&#125;curl -I  website.com:8080&#x2F;document 702# 匹配702 因为正则的优先级更高,而且正则是一旦匹配到就直接退出 所以不会再匹配703<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location ~* ^&#x2F;docume.*$ &#123;        return 701;    &#125;    location ^~ &#x2F;doc &#123;        return 702;    &#125;    location ~* ^&#x2F;document$ &#123;        return 703;    &#125;&#125;curl http:&#x2F;&#x2F;website.com&#x2F;documentHTTP&#x2F;1.1 702# 匹配702 因为 ^~精确匹配的优先级比正则高 也是匹配到之后支持退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location &#x2F;doc &#123;        return 702;    &#125;    location &#x2F;docu &#123;        return 701;    &#125;&#125;# 701 前缀匹配匹配是按照最长匹配，跟顺序无关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="history模式、跨域、缓存、反向代理"><a href="#history模式、跨域、缓存、反向代理" class="headerlink" title="history模式、跨域、缓存、反向代理"></a>history模式、跨域、缓存、反向代理</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># html设置history模式location &#x2F; &#123;    index index.html index.htm;    proxy_set_header Host $host;    # history模式最重要就是这里    try_files $uri $uri&#x2F; &#x2F;index.html;    # index.html文件不可以设置强缓存 设置协商缓存即可    add_header Cache-Control &#39;no-cache, must-revalidate, proxy-revalidate, max-age&#x3D;0&#39;;&#125;# 接口反向代理location ^~ &#x2F;api&#x2F; &#123;    # 跨域处理 设置头部域名    add_header Access-Control-Allow-Origin *;    # 跨域处理 设置头部方法    add_header Access-Control-Allow-Methods &#39;GET,POST,DELETE,OPTIONS,HEAD&#39;;    # 改写路径    rewrite ^&#x2F;api&#x2F;(.*)$ &#x2F;$1 break;    # 反向代理    proxy_pass http:&#x2F;&#x2F;static_env;    proxy_set_header Host $http_host;&#125;location ~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ &#123;    # 静态资源设置七天强缓存    expires 7d;    access_log off;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="以目录区分多个history单文件"><a href="#以目录区分多个history单文件" class="headerlink" title="以目录区分多个history单文件"></a>以目录区分多个history单文件</h3><p>因为不可能每一个项目开启一个域名，仅仅指向通过增加路径来划分多个网站，比如：</p><ol><li><strong>ntu820.top/abc/login</strong> 访问abc登录页</li><li><strong>ntu820.top/def/login</strong> 访问def登录页<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    listen 80;    server_name ntu820.top;    index index.html index.htm;    # 通过正则来匹配捕获 [abc|def]中间的这个路径    location ~ ^&#x2F;([^\&#x2F;]+)&#x2F;(.*)$ &#123;        try_files $uri $uri&#x2F; &#x2F;$1&#x2F;dist&#x2F;index.html &#x3D;404;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>基于upstream做负载均衡,中间会涉及一些相关的策略比如<strong>ip_hash、weight</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream backserver&#123;     # 哈希算法，自动定位到该服务器 保证唯一ip定位到同一部机器 用于解决session登录态的问题    ip_hash;     server 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)     server 127.0.0.1:8080 weight&#x3D;2; (weight 默认为1.weight越大，负载的权重就越大)     server 127.0.0.1:6060;     server 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器) &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="灰度部署"><a href="#灰度部署" class="headerlink" title="灰度部署"></a>灰度部署</h3><p>获取头部值，在nginx中可以通过$http_xxx来获取变量，然后根据header值来进行回复发布</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream stable &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60; &#125;upstream canara &#123;   server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;&#125;server &#123;    listen 80;    server_name  xxx;    # 设置默认    set $group &quot;stable&quot;;    # 根据cookie头部设置接入的服务    if ($http_cookie ~* &quot;tts_version_id&#x3D;canara&quot;)&#123;        set $group canara;    &#125;    if ($http_cookie ~* &quot;tts_version_id&#x3D;stable&quot;)&#123;        set $group stable;    &#125;    location &#x2F; &#123;        proxy_pass http:&#x2F;&#x2F;$group;        proxy_set_header   Host             $host;        proxy_set_header   X-Real-IP        $remote_addr;        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;        index  index.html index.htm;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="优雅降级"><a href="#优雅降级" class="headerlink" title="优雅降级"></a>优雅降级</h3><p>常用于ssr的node服务挂了返回500错误码然后降级到csr的cos桶或者nginx中，优雅降级主要用<strong>error_page</strong>参数来进行降级指向备用地址。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream ssr &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60; &#125;upstream csr &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;&#125;location ^~ &#x2F;ssr&#x2F; &#123;    proxy_pass http:&#x2F;&#x2F;ssr;    # 开启自定义错误捕获 如果这里不设置为on的话 会走向nginx处理的默认错误页面    proxy_intercept_errors on;    # 捕获500系列错误 如果500错误的话降级为下面的csr渲染    error_page 500 501 502 503 504 &#x3D; @csr_location    # error_page 500 501 502 503 504 &#x3D; 200 @csr_location    # 注意这上面的区别 等号前面没有200 表示 最终返回的状态码已 @csr_location为准 加了200的话表示不管@csr_location返回啥都返回200状态码&#125;location @csr_location &#123;    # 这时候地址还是带着&#x2F;ssr&#x2F;的要去除    rewrite ^&#x2F;ssr&#x2F;(.*)$ &#x2F;$1 break;    proxy_pass http:&#x2F;&#x2F;csr;    rewrite_log on;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="webp根据浏览器自动降级为png"><a href="#webp根据浏览器自动降级为png" class="headerlink" title="webp根据浏览器自动降级为png"></a>webp根据浏览器自动降级为png</h3><p>这套方案不像常见的由nginx把png转为webp的方案，而是先经由图床系统（node服务）上传两份图片:</p><ol><li>一份是原图png</li><li>一份是png压缩为webp的图片（使用的是imagemin-webp)</li></ol><p>然后通过nginx检测头部是否支持webp来返回webp图片，不支持的话就返回原图即可。这其中还做了错误拦截，如果cos桶丢失webp图片及时浏览器支持webp也要降级为png。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http &#123;  include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;  default_type  application&#x2F;octet-stream;  # 设置日志格式  log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;  &#39;&quot;$proxy_host&quot; &quot;$upstream_addr&quot;&#39;;  access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  main;  sendfile        on;  keepalive_timeout  65;  # 开启gzip  gzip on;  gzip_vary on;  gzip_proxied any;  gzip_comp_level 6;  gzip_types text&#x2F;plain text&#x2F;css text&#x2F;xml application&#x2F;json application&#x2F;javascript application&#x2F;rss+xml application&#x2F;atom+xml image&#x2F;svg+xml;  # 负载均衡 这里可以是多个cos桶地址即可  upstream static_env &#123;    server xxx;    server xxx;  &#125;  # map 设置变量映射 第一个变量指的是要通过映射的key值 Accpet 第二个值的是变量别名  map $http_accept $webp_suffix &#123;    # 默认为 空字符串    default   &quot;&quot;;    # 正则匹配如果Accep含有webp字段 设置为.webp值    &quot;~*webp&quot;  &quot;.webp&quot;;  &#125;  server &#123;    listen 8888;    absolute_redirect off;    #取消绝对路径的重定向    #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。    root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;    location &#x2F; &#123;      index index.html index.htm;      proxy_set_header Host $host;      try_files $uri $uri&#x2F; &#x2F;index.html;      add_header Cache-Control &#39;no-cache, max-age&#x3D;0&#39;;    &#125;    # favicon.ico    location &#x3D; &#x2F;favicon.ico &#123;      log_not_found off;      access_log off;    &#125;    # robots.txt    location &#x3D; &#x2F;robots.txt &#123;      log_not_found off;      access_log off;    &#125;    #     location ~* \.(png|jpe?g)$ &#123;      # Pass WebP support header to backend      # 如果header头部中支持webp      if ($webp_suffix ~* webp) &#123;        # 先尝试找是否有webp格式图片        rewrite ^&#x2F;(.*)\.(png|jpe?g)$ &#x2F;$1.webp break;        # 找不到的话 这里捕获404错误 返回原始错误 注意这里的&#x3D;号 代表最终返回的是@static_img的状态吗        error_page 404 &#x3D; @static_img;      &#125;      proxy_intercept_errors on;      add_header Vary Accept;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;      access_log off;    &#125;    location @static_img &#123;      #set $complete $schema $server_addr $request_uri;      rewrite ^&#x2F;.+$ $request_uri break;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;    &#125;    # assets, media    location ~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ &#123;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;      access_log off;    &#125;    error_page   500 502 503 504  &#x2F;50x.html;    location &#x3D; &#x2F;50x.html &#123;      root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>haproxy+keepalived实现高可用</title>
    <link href="/2022/01/30/keepha/"/>
    <url>/2022/01/30/keepha/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://www.keepalived.org/">Keepalived</a> 提供 VRPP 实现，并允许您配置 Linux 机器使负载均衡，预防单点故障。<a href="http://www.haproxy.org/">HAProxy</a> 提供可靠、高性能的负载均衡，能与 Keepalived 完美配合。</strong></p><p><img src="/img/keepha/%E6%9E%B6%E6%9E%84.jpg" alt="架构图"></p><p>安装规定组件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install keepalived haproxy psmisc -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="HAproxy"><a href="#HAproxy" class="headerlink" title="HAproxy"></a>HAproxy</h3><ol><li><p>编辑haproxy配置，（两台机器proxy配置一致）</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;haproxy&#x2F;haproxy.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>参考配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">global    log         &#x2F;dev&#x2F;log local0 warning    chroot      &#x2F;var&#x2F;lib&#x2F;haproxy    pidfile     &#x2F;var&#x2F;run&#x2F;haproxy.pid    maxconn     4000    user        haproxy    group       haproxy    daemon    stats socket &#x2F;var&#x2F;lib&#x2F;haproxy&#x2F;statsdefaults    log                     global    option                  httplog    option                  dontlognull    timeout connect         5000    timeout client          50000    timeout server          50000frontend kube-apiserver    bind                        *:6443    mode                        tcp    option                      tcplog    default_backend             kube-apiserverbackend kube-apiserver    mode        tcp    option      tcplog    option      tcp-check    balance     roundrobin    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100    server  kube-apiserver-1 172.16.214.21:6443 check    server  kube-apiserver-2 172.16.214.22:6443 check    server  kube-apiserver-3 172.16.214.23:6443 check<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h3><ol><li><p>两台机器都安装keepalived，但是配置略有不同</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>参考配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 主服务配置global_defs &#123;   notification_email &#123;   &#125;   router_id LVS_DEVEL01   vrrp_skip_check_adv_addr   vrrp_garp_interval 0   vrrp_gna_interval 0&#125;vrrp_script chk_haproxy &#123;   script &quot;killall -0 haproxy&quot;   interval 2   weight 2&#125;vrrp_instance haproxy-vip &#123;    state MASTER    interface eth0    virtual_router_id 60    priority 100    advert_int 1    authentication &#123;        auth_type PASS        auth_pass 1111    &#125;    unicast_src_ip 172.16.214.31    unicast_peer &#123;        172.16.214.32    &#125;    virtual_ipaddress &#123;        172.16.214.30&#x2F;24    &#125;    track_script &#123;        chk_haproxy    &#125;&#125;# 从服务配置global_defs &#123;   notification_email &#123;   &#125;   router_id LVS_DEVEL02   vrrp_skip_check_adv_addr   vrrp_garp_interval 0   vrrp_gna_interval 0&#125;vrrp_script chk_haproxy &#123;   script &quot;killall -0 haproxy&quot;   interval 2   weight 2&#125;vrrp_instance haproxy-vip &#123;    state BACKUP    interface eth0    virtual_router_id 60    priority 90    advert_int 1    authentication &#123;        auth_type PASS        auth_pass 1111    &#125;    unicast_src_ip 172.16.214.32    unicast_peer &#123;        172.16.214.31    &#125;    virtual_ipaddress &#123;        172.16.214.30&#x2F;24    &#125;    track_script &#123;        chk_haproxy    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ol><li><p>开启并开机启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl restart haproxy &amp;&amp; systemctl enable haproxysystemctl restart keepalived &amp;&amp; systemctl enable keepalived<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="验证高可用"><a href="#验证高可用" class="headerlink" title="验证高可用"></a>验证高可用</h3><ol><li>停止keepalived，查看vip是否会漂移。</li></ol>]]></content>
    
    
    <categories>
      
      <category>keepalived</category>
      
      <category>haproxy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>keepalived</tag>
      
      <tag>haproxy</tag>
      
      <tag>软负载</tag>
      
      <tag>高可用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>私有化部署yapi</title>
    <link href="/2022/01/30/yapi/"/>
    <url>/2022/01/30/yapi/</url>
    
    <content type="html"><![CDATA[<h4 id="安装nodejs环境"><a href="#安装nodejs环境" class="headerlink" title="安装nodejs环境"></a>安装nodejs环境</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v10.16.0&#x2F;node-v10.16.0-linux-x64.tar.xz# 解压tar -xvf node-v10.16.0-linux-x64.tar.xz#创建软连接ln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;nodeln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;npm# 验证node -vnpm -v# 配置淘宝源npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h4><p>在/etc/yum.repos.d/下，新建mongodb-org.repo，内容如下</p><p>[mongodb-org]<br>name=MongoDB Repository<br>baseurl=<a href="http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/">http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/</a><br>gpgcheck=0<br>enabled=1</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 安装yum install -y mongodb-org# 启动service mongod start# 配置，如果mongo只应用本地，则无需修改，否则修改&#x2F;etc&#x2F;mongod.conf的bindIp，并重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="安装yapi"><a href="#安装yapi" class="headerlink" title="安装yapi"></a>安装yapi</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir yapicd yapigit clone https:&#x2F;&#x2F;github.com&#x2F;YMFE&#x2F;yapi.git vendor# 或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 &#96;git clone --depth&#x3D;1 https:&#x2F;&#x2F;github.com&#x2F;YMFE&#x2F;yapi.git vendors&#96; 命令减少，大概 10+ M）cp vendors&#x2F;config_example.json .&#x2F;config.json # 复制完成后请修改相关配置# 需要把mongodb的用户名密码去除cd vendorsnpm install --production --registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm run install-server # 安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置node server&#x2F;app.js # 启动服务器后，请访问 127.0.0.1:&#123;config.json配置的端口&#125;，初次运行会有个编译的过程，请耐心等候# 初始化管理员账号成功,账号名：&quot;admin@admin.com&quot;，密码：&quot;ymfe.org&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="后台运行yapi"><a href="#后台运行yapi" class="headerlink" title="后台运行yapi"></a>后台运行yapi</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install -g pm2ln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;lib&#x2F;node_modules&#x2F;pm2&#x2F;bin&#x2F;pm2 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;pm2pm2 start server&#x2F;app.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>yapi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在windows上部署docker实战</title>
    <link href="/2022/01/30/windocker/"/>
    <url>/2022/01/30/windocker/</url>
    
    <content type="html"><![CDATA[<p>目前在windows上部署docker方式有两种。第一：采用虚拟机进行部署；第二：采用Hyper-V虚拟技术进行部署。微软自windows server2016开始将docker集成进系统。目前支持docker in windows部署方式的系统有：win10、windwos server2016/2019。本文采用Hyper-V方式进行docker部署。</p><h4 id="主板开启虚拟化，系统安装Hyper-V的windows更新。"><a href="#主板开启虚拟化，系统安装Hyper-V的windows更新。" class="headerlink" title="主板开启虚拟化，系统安装Hyper-V的windows更新。"></a>主板开启虚拟化，系统安装Hyper-V的windows更新。</h4><p>打开windows更新。将Hyper-V全部选中。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%871.png" alt="hyper"></p><h4 id="安装docker-desktop"><a href="#安装docker-desktop" class="headerlink" title="安装docker desktop"></a>安装docker desktop</h4><p>下载地址：<a href="https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe">https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe</a><br><img src="/img/windocker/%E5%9B%BE%E7%89%872.png" alt="dockerdesktop"></p><p>出现此图标，代表docker安装成功。</p><h4 id="切换windows镜像模式"><a href="#切换windows镜像模式" class="headerlink" title="切换windows镜像模式"></a>切换windows镜像模式</h4><p>由于我们需要安装运行基于windows的容器与镜像，所有在安装完后，右击图标，将docker的运行方式改位“windows containers”。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%873.png" alt="windocker"></p><h4 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h4><p>对docker进行一些配置，以达到更好的效果。【如果能科学上网，请忽略此步】</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%874.png" alt="配置"></p><h4 id="拉取windowsserver的镜像"><a href="#拉取windowsserver的镜像" class="headerlink" title="拉取windowsserver的镜像"></a>拉取windowsserver的镜像</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker pull mcr.microsoft.com&#x2F;windows&#x2F;servercore:ltsc2019docker pull mcr.microsoft.com&#x2F;windows&#x2F;nanoserver:1903<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>注意：windows的docker容器拉取镜像时，镜像的tag必须要osversion的版本必须与镜像版本对应。<br>查看系统版本信息：systeminfo</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%875.png" alt="系统版本"></p><p><img src="/img/windocker/%E5%9B%BE%E7%89%876.png" alt="找到对应镜像"></p><p>拉取的镜像比较大需要耐心等待。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%877.png" alt="拉取镜像"></p><h4 id="运行windows原生镜像"><a href="#运行windows原生镜像" class="headerlink" title="运行windows原生镜像"></a>运行windows原生镜像</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run -it mcr.microsoft.com&#x2F;windows&#x2F;nanoserver:1903 cmd.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>运行后会进入容器内部。盘符会进入C盘位置。退出后，使用docker ps会发现容器也退出了，此时，输入docker start 容器ID。重新启动容器，发现容器正常启动。</p><h4 id="测试镜像"><a href="#测试镜像" class="headerlink" title="测试镜像"></a>测试镜像</h4><p>在windwos容器中部署python环境</p><ul><li>首先停止windows容器，docker stop 容器ID</li><li>使用docker cp命令，将本地宿主机上的文件拷贝进windows容器中。由于容器中不包含GUI，所以这里直接将python的免安装文件复制进容器。<code>docker cp D:\develop\python37 容器ID:\C:\Users</code></li><li>docker start 容器ID</li><li>docker exec -it 容器ID cmd.exe 进入容器内部</li><li>进入C盘下面的Users文件夹。发现python文件夹已经拷贝进来。<img src="/img/windocker/%E5%9B%BE%E7%89%878.png" alt="python"></li><li>验证python环境，进入pyhon37文件夹，运行python命令，发现可以进入。<img src="/img/windocker/%E5%9B%BE%E7%89%879.png" alt="python"></li></ul>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>seata高可用部署</title>
    <link href="/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>部署nacos</li><li>部署mysql</li></ul><h4 id="部署server端"><a href="#部署server端" class="headerlink" title="部署server端"></a>部署server端</h4><ul><li><p>创建数据库（seata）及表,以mysql为例</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- -------------------------------- The script used when storeMode is 'db' --------------------------------</span><span class="token comment">-- the table to store GlobalSession data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>global_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>                       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span>            <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span>                    <span class="token keyword">TINYINT</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_id<span class="token punctuation">`</span></span>            <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_service_group<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_name<span class="token punctuation">`</span></span>          <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>timeout<span class="token punctuation">`</span></span>                   <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>begin_time<span class="token punctuation">`</span></span>                <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_data<span class="token punctuation">`</span></span>          <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>                <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>              <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_gmt_modified_status<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_transaction_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span class="token comment">-- the table to store BranchSession data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>branch_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>         <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>               <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span>    <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_group_id<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_id<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_type<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span>            <span class="token keyword">TINYINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>client_id<span class="token punctuation">`</span></span>         <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_data<span class="token punctuation">`</span></span>  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>        <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>      <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_xid<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span class="token comment">-- the table to store lock data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>lock_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>row_key<span class="token punctuation">`</span></span>        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>            <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>      <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_id<span class="token punctuation">`</span></span>    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>table_name<span class="token punctuation">`</span></span>     <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>pk<span class="token punctuation">`</span></span>             <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>     <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>   <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>row_key<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_branch_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>client端，业务数据库需要添加undo_log表，以mysql为例</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- for AT mode you must to init this sql for you business database. the seata server not need it.</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>undo_log<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>     <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'branch transaction id'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>           <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'global transaction id'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>context<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'undo_log context,such as serialization'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>rollback_info<span class="token punctuation">`</span></span> <span class="token keyword">LONGBLOB</span>     <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'rollback info'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_status<span class="token punctuation">`</span></span>    <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'0normal status,1defense status'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_created<span class="token punctuation">`</span></span>   <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'create datetime'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_modified<span class="token punctuation">`</span></span>  <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'modify datetime'</span><span class="token punctuation">,</span>    <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>ux_undo_log<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COMMENT</span> <span class="token operator">=</span><span class="token string">'AT transaction mode undo table'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>添加配置到nacos配置中心，使用官方的的脚本将默认的配置文件导入nacos</p></li><li><p>修改配置，主要是数据库的连接配置</p><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">store.mode=dbstore.db.datasource=druidstore.db.dbType=mysqlstore.db.driverClassName=com.mysql.jdbc.Driverstore.db.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=truestore.db.user=rootstore.db.password=123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h4 id="部署到K8S"><a href="#部署到K8S" class="headerlink" title="部署到K8S"></a>部署到K8S</h4><ul><li><p>seata-ha-deploy.yaml</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8091</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StatefulSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>harbor<span class="token punctuation">-</span>secret      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server          <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.182.187<span class="token punctuation">:</span>81/library/seata<span class="token punctuation">-</span>server<span class="token punctuation">:</span>1.4.2          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SEATA_CONFIG_NAME              <span class="token key atrule">value</span><span class="token punctuation">:</span> file<span class="token punctuation">:</span>/root/seata<span class="token punctuation">-</span>config/registry          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8091</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>config              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /root/seata<span class="token punctuation">-</span>config      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>config          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">registry.conf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    registry &#123;        type = "nacos"        nacos &#123;          application = "seata-server"          serverAddr = "192.168.186.79:8849"          group = "SEATA_GROUP"          namespace = "87eb1383-a697-439a-a40f-52a071b4cc6b"          cluster = "default"          username = "nacos"          password = "nacos"        &#125;    &#125;    config &#123;      type = "nacos"      nacos &#123;        serverAddr = "192.168.186.79:8849"        namespace = "87eb1383-a697-439a-a40f-52a071b4cc6b"        group = "SEATA_GROUP"        username = "nacos"        password = "nacos"      &#125;    &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查看部署情况</p><p>1、应该会有3个pod运行，查看日志，可以看到已经连接数据。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.586</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>Server</span>                   <span class="token operator">:</span> <span class="token class-name">The</span> server is running in container<span class="token punctuation">.</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.599</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>FileConfiguration</span>        <span class="token operator">:</span> <span class="token class-name">The</span> file name of the operation is file<span class="token operator">:</span><span class="token operator">/</span>root<span class="token operator">/</span>seata<span class="token operator">-</span>config<span class="token operator">/</span>registry<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.606</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>FileConfiguration</span>        <span class="token operator">:</span> <span class="token class-name">The</span> configuration file used is <span class="token operator">/</span>root<span class="token operator">/</span>seata<span class="token operator">-</span>config<span class="token operator">/</span>registry<span class="token punctuation">.</span>conf<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">27.127</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span>DruidDataSource</span>   <span class="token operator">:</span> <span class="token punctuation">&#123;</span>dataSource<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span> inited<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">27.367</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">i<span class="token punctuation">.</span>s<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rpc<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span>NettyServerBootstrap</span>  <span class="token operator">:</span> <span class="token class-name">Server</span> started<span class="token punctuation">,</span> listen port<span class="token operator">:</span> <span class="token number">8091</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>2、去nacos中查看，应该会有3个服务。</p><p><img src="/img/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/20210720193847.png" alt="seata"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>seata</category>
      
    </categories>
    
    
    <tags>
      
      <tag>seata</tag>
      
      <tag>分布式事务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nacos集群安装</title>
    <link href="/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="1-在线安装mysql5-7"><a href="#1-在线安装mysql5-7" class="headerlink" title="1. 在线安装mysql5.7"></a>1. 在线安装mysql5.7</h3><ul><li>安装步骤</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 获取mysql yum源yum install -y wget &amp;&amp; wget https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-9.noarch.rpm# 安装yum源rpm -ivh mysql57-community-release-el7-9.noarch.rpm# 安装mysqlyum install mysql-community-server mysql-community-libs-compat mysql-community-libs mysql-community-embedded-devel mysql-community-embedded-compat mysql-community-embedded mysql-community-devel mysql-community-common mysql-community-client -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 启动mysqlsystemctl start mysqld# 开机启动systemctl enable mysqld# 需要找到mysql初始化的密码，cat &#x2F;var&#x2F;log&#x2F;mysqld.log|grep root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>运行<code>mysql_secure_installation</code>进行一些初始化操作，主要是对更改密码、是否运行远程等</li></ul><h3 id="rpm包安装mysql5-7"><a href="#rpm包安装mysql5-7" class="headerlink" title="rpm包安装mysql5.7"></a>rpm包安装mysql5.7</h3><ul><li>下载rpm包</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-common-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-libs-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-client-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-server-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-devel-5.7.23-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>安装mysql</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载自带的mariadbyum remove mariadb mariadb-server mariadb-devel mariadb-libs# 安装rpm -ivh mysql-community-common-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.23-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>新建主库文件夹</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;data&#x2F;mysql&#x2F;&#123;data,log,pid,binary&#125;groupadd mysqluseradd -r -g mysql mysqlchown -R mysql.mysql  &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置主数据库，<code>vi /etc/my.cnf</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[mysqld]datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;datasocket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.logpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;pid&#x2F;mysqld.pid user&#x3D;mysqlserver-id&#x3D;1port&#x3D;3306 ##要给从机同步的库#binlog-do-db&#x3D; ##不给从机同步的库(多个写多行)binlog-ignore-db&#x3D;mysqlbinlog-ignore-db&#x3D;information_schemabinlog-ignore-db&#x3D;performance_schemabinlog-ignore-db&#x3D;sys ##开启二进制日志log-bin&#x3D;&#x2F;data&#x2F;mysql&#x2F;binary&#x2F;mysql1-bin ##自动清理 7 天前的log文件,可根据需要修改expire_logs_days&#x3D;7 [client]socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>新建从库文件夹</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;data&#x2F;mysql&#x2F;&#123;data,log,pid&#125;groupadd mysqluseradd -r -g mysql mysqlchown -R mysql.mysql  &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置从数据库</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[mysqld]datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;datasocket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock # Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links&#x3D;0 log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.logpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;pid&#x2F;mysqld.pid user&#x3D;mysqlserver-id&#x3D;2port&#x3D;3306 ##从库上的参数read_only &#x3D; 1master_info_repository&#x3D;TABLErelay_log_info_repository&#x3D;TABLE#relay_log_recovery&#x3D;1   #从机禁止写#super_read_only&#x3D;1      #从机禁止写 [client]socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动数据库并找出root密码</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl start mysqld# 查询密码cat &#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.log |grep root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>登录并修改密码</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -p# 修改密码mysql-&gt; ALTER USER root@localhost identified by &#39;admin123.X&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置主从"><a href="#配置主从" class="headerlink" title="配置主从"></a>配置主从</h3><ul><li>在主服务器上授权从服务器复制帐号</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -pmysql-&gt; grant replication slave on *.* to slave@&#39;192.168.%&#39; identified by &#39;admin123.X&#39;;mysql-&gt; show master status;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ul><li>到从服务配置主数据库连接</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -pmysql &gt; stop slave;mysql &gt; change master to master_host&#x3D;&#39;192.168.153.162&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;slave&#39;,master_password&#x3D;&#39;admin123.X&#39;,master_log_file&#x3D;&#39;mysql1-bin.000093&#39;,master_log_pos&#x3D;846;mysql &gt; start slave;mysql &gt; show slave status\G# 必须看到两个YES# Slave_IO_Running: Yes# Slave_SQL_Running: Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql &gt; CREATE DATABASE test_ab default charset utf8;mysql &gt; CREATE TABLE test_ab.a1(id int(2),name varchar(20));mysql &gt; INSERT INTO test_ab.a1(id,name) VALUES(1,&quot;测试1&quot;);mysql&gt; select * from test_ab.a1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-安装Nacos1-3"><a href="#2-安装Nacos1-3" class="headerlink" title="2. 安装Nacos1.3"></a>2. 安装Nacos1.3</h3><ul><li>配置JDK、Maven</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压缩tar -zxvf jdk-8u261-linux-x64.tar.gzmv jdk1.8.0_261 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;tar -zxvf apache-maven-3.6.3-bin.tar.gzmv apache-maven-3.6.3 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;# 配置环境变量vi &#x2F;etc&#x2F;profile# 在最后添加export MAVEN_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;apache-maven-3.6.3export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;jdk1.8.0_261export PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;binexport PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin# 配置生效source &#x2F;etc&#x2F;profile# 验证生效java -versionmvn -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>为nacos创建数据库连接用户</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">create user nacos identified by &#39;nacos123.X&#39;;grant all privileges on *.* to &#39;nacos&#39;@&#39;192.168.%&#39; identified by &#39;nacos123.X&#39; with grant option;flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>解压nacos，并移动到安装目录</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">tar -zxvf nacos-server-1.3.0.tar.gzmv nacos &#x2F;usr&#x2F;local&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><ul><li>初始化数据库脚本，找到 <code>nacos-mysql.sql</code> ，将其导入到数据库中</li><li>配置文件，<code>vi application.properties</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">spring.datasource.platform&#x3D;mysqldb.num&#x3D;1db.url.0&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.153.161:3306&#x2F;nacos_config?characterEncoding&#x3D;utf8&amp;connectTimeout&#x3D;1000&amp;socketTimeout&#x3D;3000&amp;autoReconnect&#x3D;truedb.user&#x3D;nacosdb.password&#x3D;nacos123.X<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>把<code>cluster.conf.example 改名成 cluster.conf</code> ，并修改配置<code>vi cluster.conf</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#it is ip10.0.0.1:884810.0.0.2:884810.0.0.3:8848<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>分别部署到服务器</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sh startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ul><li>验证，访问不同主机的地址，查看是否可以正常访问</li></ul><h3 id="3-配置nginx反向代理"><a href="#3-配置nginx反向代理" class="headerlink" title="3. 配置nginx反向代理"></a>3. 配置nginx反向代理</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载nginx安装包wget https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.18.0.tar.gz# 安装依赖yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel# 解压mkdir -p &#x2F;usr&#x2F;local&#x2F;nginxtar -zxvf nginx-1.18.0.tar.gzmv nginx-1.18.0 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;# 执行configurecd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;nginx-1.18.0.&#x2F;configuremakemake install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置nginx反向代理</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">upstream nacos &#123;        server  192.168.153.161:8848;        server  192.168.153.162:8848;        server  192.168.153.163:8848;    &#125;server &#123;        listen       80;        server_name  192.168.153.163;        location &#x2F;nacos&#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;nacos&#x2F;nacos&#x2F;;        &#125;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动nginx</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload# 如果出现报错：nginx: [error] open() ＂&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid＂ failed运行： &#96;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf&#96; 再次启动即可ps -ef | grep nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nacos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>nacos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker启动各种服务</title>
    <link href="/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="启动activemq"><a href="#启动activemq" class="headerlink" title="启动activemq"></a>启动activemq</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name&#x3D;&#39;activemq&#39; -d \-e &#39;ACTIVEMQ_CONFIG_NAME&#x3D;amqp-srv1&#39; \-e &#39;ACTIVEMQ_CONFIG_DEFAULTACCOUNT&#x3D;false&#39; \-e &#39;ACTIVEMQ_ADMIN_LOGIN&#x3D;admin&#39; -e &#39;ACTIVEMQ_ADMIN_PASSWORD&#x3D;your_password&#39; \-e &#39;ACTIVEMQ_USERS_myproducer&#x3D;producerpassword&#39; -e &#39;ACTIVEMQ_GROUPS_writes&#x3D;myproducer&#39; \-e &#39;ACTIVEMQ_USERS_myconsumer&#x3D;consumerpassword&#39; -e &#39;ACTIVEMQ_GROUPS_reads&#x3D;myconsumer&#39; \-e &#39;ACTIVEMQ_JMX_user1_role&#x3D;readwrite&#39; -e &#39;ACTIVEMQ_JMX_user1_password&#x3D;jmx_password&#39; \-e &#39;ACTIVEMQ_JMX_user2_role&#x3D;read&#39; -e &#39;ACTIVEMQ_JMX_user2_password&#x3D;jmx2_password&#39;-e &#39;ACTIVEMQ_CONFIG_TOPICS_topic1&#x3D;mytopic1&#39; -e &#39;ACTIVEMQ_CONFIG_TOPICS_topic2&#x3D;mytopic2&#39;  \-e &#39;ACTIVEMQ_CONFIG_QUEUES_queue1&#x3D;myqueue1&#39; -e &#39;ACTIVEMQ_CONFIG_QUEUES_queue2&#x3D;myqueue2&#39;  \-e &#39;ACTIVEMQ_CONFIG_MINMEMORY&#x3D;1024&#39; -e  &#39;ACTIVEMQ_CONFIG_MAXMEMORY&#x3D;4096&#39; \-e &#39;ACTIVEMQ_CONFIG_SCHEDULERENABLED&#x3D;true&#39; \-v &#x2F;data&#x2F;activemq:&#x2F;data \-v &#x2F;var&#x2F;log&#x2F;activemq:&#x2F;var&#x2F;log&#x2F;activemq \-p 8161:8161 \-p 61616:61616 \-p 61613:61613 \webcenter&#x2F;activemq:5.14.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>docker run --name activemq-5.14 -d -e ACTIVEMQ_ADMIN_LOGIN=admin -e ACTIVEMQ_ADMIN_PASSWORD=admin@mq -v /home/activemq/data:/data -v /home/activemq/log:/var/log/activemq -p 8161:8161 -p 61616:61616 -p 61613:61613 webcenter/activemq:5.14.3</code></p><hr><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 简单启动docker run -p 3306:3306 --name mysql -v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -v $PWD&#x2F;logs:&#x2F;logs -v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7.23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。<br>-v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。<br>-v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。<br>-v $PWD/data:/var/lib/mysql :将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。<br>-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。<br>-d 后台运行</p><hr><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name nginx-1.16.1 -v &#x2F;home&#x2F;nginxdata&#x2F;x-springboot-ui:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html -v &#x2F;home&#x2F;nginxdata&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf -v &#x2F;home&#x2F;nginxdata&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d -v &#x2F;home&#x2F;nginxdata&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx -p 80:80 -d nginx:1.16.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>1、配置nginx.conf，设置user为root用户<br>2、配置default.conf，开启目录浏览<br>        autoindex on; # 开启目录显示<br>        autoindex_exact_size off; # 显示出文件的确切大小.关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b<br>        autoindex_localtime on; # 显示的文件时间为文件的服务器时间<br>        charset utf-8,gbk; # 避免中文乱码</p><hr><h3 id="启动oracle-11g"><a href="#启动oracle-11g" class="headerlink" title="启动oracle 11g"></a>启动oracle 11g</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 一开始无法使用挂载，必须先启动后再使用1、docker run --name oracle_11g -v &#x2F;home&#x2F;oracle:&#x2F;home&#x2F;oracle -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g:latestdocker run --name oracle11g -v &#x2F;root&#x2F;oracle_data&#x2F;helowin:&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;helowin -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g:latest2、docker exec -it oracle_11g bash3、su root 【密码】：helowin4、vi &#x2F;etc&#x2F;profileexport ORACLE_HOME&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;dbhome_2export ORACLE_SID&#x3D;helowinexport PATH&#x3D;$ORACLE_HOME&#x2F;bin:$PATHsource &#x2F;etc&#x2F;profile --加载环境变量ln -s $ORACLE_HOME&#x2F;bin&#x2F;sqlplus &#x2F;usr&#x2F;bin -- 软连接5、su - oracle6、sqlplus &#x2F;nolog7、conn &#x2F;as sysdba8、alter user system identified by system; --修改system用户账号alter user sys identified by system; --修改sys用户账号create user db identified by dbzenith; --创建内部管理员账号，设备管理系统默认使用db用户grant connect,resource,dba to db; --将dba权限授权给内部管理员账号alter profile default limit password_life_time unlimited; --修改密码规则策略为密码永不过期alter system set processes&#x3D;1000 scope&#x3D;spfile; --修改数据库最大连接数据9、重启数据库exit 退出当前操作sqlplus &#x2F;nologconn &#x2F;as sysdbashutdown immediate; --关闭数据库startup; --启动数据库10、退出，查看具体实例lsnrctl status11、删除用户操作SELECT SID,SERIAL# FROM V$SESSION WHERE USERNAME&#x3D;&#39;DEVUSER&#39;;  -- 一定都要大写ALTER  SYSTEM  KILL SESSION &#39;137,41813&#39;;drop  user sstest cascade;# --删除oracle--rm -rf &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;flash_recovery_area&#x2F;helowin&#x2F;control02.ctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h3 id="启动portainer"><a href="#启动portainer" class="headerlink" title="启动portainer"></a>启动portainer</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name portainer -p 9000:9000 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock -d portainer&#x2F;portainer:linux-amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><hr><h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 简单启动docker run --name redis-5.0.7 -p 6379:6379 -d redis:5.0.7 --requirepass &quot;admin123&quot;# 持久化docker run --name redis -v &#x2F;home&#x2F;redis&#x2F;data:&#x2F;data -p 6379:6379 -d redis:5.0.7 --requirepass &quot;admin123&quot; --appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>–name redis-test #运行的docker容器名<br>-p 6379:6379 #宿主本地端口:docker端口(容器里的端口)<br>-d redis #daemonize模式运行，完整-d redis:版本号，默认为最新版本</p><hr><h3 id="启动sonarqube"><a href="#启动sonarqube" class="headerlink" title="启动sonarqube"></a>启动sonarqube</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 采用volume挂载方式，本地文件挂载有权限问题docker run -d --name sonarqube --restart always \-p 9000:9000 \-v sonarqube_conf:&#x2F;opt&#x2F;sonarqube&#x2F;conf \-v sonarqube_extensions:&#x2F;opt&#x2F;sonarqube&#x2F;extensions \-v sonarqube_logs:&#x2F;opt&#x2F;sonarqube&#x2F;logs \-v sonarqube_data:&#x2F;opt&#x2F;sonarqube&#x2F;data \sonarqube:7.9.2-community#分析项目#1、需要先将项目打包运行#2、运行分析代码sonar-scanner -Dsonar.host.url&#x3D;http:&#x2F;&#x2F;192.168.153.150:9000 \              -Dsonar.projectKey&#x3D;simple-java-maven-app \              -Dsonar.projectName&#x3D;simple-java-maven-app \              -Dsonar.projectVersion&#x3D;1.0 \              -Dsonar.login&#x3D;admin \              -Dsonar.password&#x3D;admin \              -Dsonar.ws.timeout&#x3D;30 \              -Dsonar.projectDescription&#x3D;&quot;my first project!&quot; \              -Dsonar.links.homepage&#x3D;http:&#x2F;&#x2F;www.baidu.com \              -Dsonar.sources&#x3D;src \              -Dsonar.sourceEncoding&#x3D;UTF-8 \              -Dsonar.java.binaries&#x3D;target&#x2F;classes \              -Dsonar.java.test.binaries&#x3D;target&#x2F;test-classes \              -Dsonar.java.surefire.report&#x3D;target&#x2F;surefire-reports<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h3 id="启动sqlserver2017"><a href="#启动sqlserver2017" class="headerlink" title="启动sqlserver2017"></a>启动sqlserver2017</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name sqlserver_2017 -v &#x2F;home&#x2F;sqlserver:&#x2F;var&#x2F;opt&#x2F;mssql -e &#39;ACCEPT_EULA&#x3D;Y&#39; -e &#39;SA_PASSWORD&#x3D;admin123.X&#39; -p 1433:1433 -d mcr.microsoft.com&#x2F;mssql&#x2F;server:2017-latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用sqlcmd创建数据库</p><p>进入容器 docker exec -it 容器名称 bash</p><p>创建数据库<br>/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P XXXX</p><hr><h3 id="启动rabbitmq"><a href="#启动rabbitmq" class="headerlink" title="启动rabbitmq"></a>启动rabbitmq</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run -p 15672:15672 \-p 5672:5672 \-p 25672:25672 \-p 15674:15674 \-p 61613:61613 \-v &#x2F;home&#x2F;yzh&#x2F;Documents&#x2F;Installed&#x2F;docker&#x2F;docker_repo&#x2F;rabbitmq&#x2F;:&#x2F;var&#x2F;lib&#x2F;rabbitmq&#x2F;mnesia \--name rabbitmq3 \--restart&#x3D;always \-d rabbitmq:3.7.8-management# 启动rabbitmq的mqtt和stomp协议docker run --name rabbitmq \-p 15672:15672 \-p 5672:5672 \-p 15674:15674 \-p 61613:61613 \-p 15675:15675 \-p 1883:1883 \-d rabbitmq:3.8.14-management# 进入容器内部# rabbit开启stomprabbitmq-plugins enable rabbitmq_stomprabbitmq-plugins enable rabbitmq_web_stomp# rabbit开启mqttrabbitmq-plugins enable rabbitmq_mqttrabbitmq-plugins enable rabbitmq_web_mqtt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>15672，rabbitmq的web页面端口</p><p>5672，amqp协议端口</p><p>25672，集群使用</p><p>15674，stomp的ws端口</p><p>61613，stomp的tcp端口</p><p>1883，mqtt的tcp协议端口</p><p>15675，mqtt的ws端口</p><hr><h3 id="启动traefik"><a href="#启动traefik" class="headerlink" title="启动traefik"></a>启动traefik</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name traefik2 -d -p 8080:8080 -p 80:80 -v $PWD&#x2F;traefik.yml:&#x2F;etc&#x2F;traefik&#x2F;traefik.yml -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock traefik:v2.4.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name mongo -e MONGO_INITDB_ROOT_USERNAME&#x3D;admin -e MONGO_INITDB_ROOT_PASSWORD&#x3D;admin -v &#x2F;data&#x2F;mongodb:&#x2F;data&#x2F;db -p 27017:27017 -d mongo:5.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mongo</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MONGO_INITDB_ROOT_USERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">MONGO_INITDB_ROOT_PASSWORD</span><span class="token punctuation">:</span> example  <span class="token key atrule">mongo-express</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo<span class="token punctuation">-</span>express    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8081<span class="token punctuation">:</span><span class="token number">8081</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ME_CONFIG_MONGODB_ADMINUSERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">ME_CONFIG_MONGODB_ADMINPASSWORD</span><span class="token punctuation">:</span> example      <span class="token key atrule">ME_CONFIG_MONGODB_URL</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//root<span class="token punctuation">:</span>example@mongo<span class="token punctuation">:</span>27017/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>container</tag>
      
      <tag>容器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-ce安装</title>
    <link href="/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="卸载原有docker及缓存"><a href="#卸载原有docker及缓存" class="headerlink" title="卸载原有docker及缓存"></a>卸载原有docker及缓存</h4><ol><li><p>卸载</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>清缓存<br>将docker的缓存，包括镜像、图片、网络等删除。docker默认位置：/var/lib/docker</p></li></ol><h4 id="添加必要的包"><a href="#添加必要的包" class="headerlink" title="添加必要的包"></a>添加必要的包</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y yum-utils device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="添加稳定版本仓库地址"><a href="#添加稳定版本仓库地址" class="headerlink" title="添加稳定版本仓库地址"></a>添加稳定版本仓库地址</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="安装docker-ce-最新版本"><a href="#安装docker-ce-最新版本" class="headerlink" title="安装docker-ce(最新版本)"></a>安装docker-ce(最新版本)</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>安装指定版本</strong></p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查询版本yum list docker-ce --showduplicates | sort -r# 安装yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h4><ol><li>下载地址：<a href="https://download.docker.com/linux/static/stable/">https://download.docker.com/linux/static/stable/</a></li><li>安装步骤<div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 解压包tar xzvf &#x2F;path&#x2F;to&#x2F;&lt;FILE&gt;.tar.gz# 移动sudo cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;# 启动dockersudo dockerd &amp;# 验证sudo docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="添加镜像加速"><a href="#添加镜像加速" class="headerlink" title="添加镜像加速"></a>添加镜像加速</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vi &#x2F;etc&#x2F;docker&#x2F;daemon.json# 配置阿里镜像加速&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;j54517kd.mirror.aliyuncs.com&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>自动安装docker脚本</strong></p><p><a href="/img/docker-ce%E5%AE%89%E8%A3%85/install-docker.sh" title=":include :type=code">install-docker.sh</a></p>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis6集群安装</title>
    <link href="/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="redis6-集群安装"><a href="#redis6-集群安装" class="headerlink" title="redis6 集群安装"></a>redis6 集群安装</h2><h3 id="gcc升级"><a href="#gcc升级" class="headerlink" title="gcc升级"></a>gcc升级</h3><p>安装redis6最主要的一点是要用GCC5以上，而CentOS6.9的GCC版本为4.8.x, 所以安装之前必须升级GCC。</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install gcc tclyum -y install centos-release-sclyum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>启用gcc</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo &quot;source &#x2F;opt&#x2F;rh&#x2F;devtoolset-9&#x2F;enable&quot; &gt;&gt; &#x2F;etc&#x2F;profilesource &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;optwget https:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-6.2.6.tar.gztar -xvf redis-6.2.6.tar.gzcd redis-6.2.6make MALLOC&#x3D;libcmake install PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;runmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;logmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7000mkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>设置redis配置文件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;opt&#x2F;redis-6.0.9&#x2F;redis.conf &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.confvi &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>文件配置内容</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">bind 192.168.146.199   #添加本机的ipport 7000  #端口　　pidfile &#x2F;usr&#x2F;local&#x2F;redis&#x2F;run&#x2F;redis_7000.pid   #pid存储目录logfile &#x2F;usr&#x2F;local&#x2F;redis&#x2F;log&#x2F;redis_7000.log   #日志存储目录dir &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7000                #数据存储目录，目录要提前创建好cluster-enabled yes  #开启集群cluster-config-file nodes-7000.conf   #集群节点配置文件，这个文件是不能手动编辑的。确保每一个集群节点的配置文件不通cluster-node-timeout 15000   #集群节点的超时时间，单位：ms，超时后集群会认为该节点失败appendonly yes  #持久化daemonize yes   #守护进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="建立不通的端口实例"><a href="#建立不通的端口实例" class="headerlink" title="建立不通的端口实例"></a>建立不通的端口实例</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.conf &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7001.confmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7001vi &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7001.conf # 配置文件和上述一样，只是端口不同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="制作启动文件"><a href="#制作启动文件" class="headerlink" title="制作启动文件"></a>制作启动文件</h3><p>启动脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi cluster_start.sh.&#x2F;redis-server ..&#x2F;conf&#x2F;redis_7000.conf.&#x2F;redis-server ..&#x2F;conf&#x2F;redis_7001.confchmod +x cluster_start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>关闭脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi cluster_shutdown.shpgrep redis-server | xargs -exec kill -9chmod +x cluster_shutdown.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>建立集群前需先启动各个节点的redis服务，并在其中一个redis服务器中执行以下指令建立集群。在5.0之后，可以直接使用redis-cli直接创建集群。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">redis-cli --cluster create 192.168.146.199:7000 192.168.146.200:7000 192.168.146.201:7000 192.168.146.199:7001 192.168.146.200:7001 192.168.146.201:7001 --cluster-replicas 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>–cluster-replicas 1 参数表示希望每个主服务器都有一个从服务器，这里则代表3主3从，前3个代表3个master，后3个代表3个slave。</p><p>通过该方式创建的带有从节点的机器不能够自己手动指定主节点，redis集群会尽量把主从服务器分配在不同机器上。</p><h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">redis-cli -c -h 192.168.146.199 -p 7000 cluster info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7安装nginx</title>
    <link href="/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/"/>
    <url>/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/</url>
    
    <content type="html"><![CDATA[<h3 id="Centos7安装nginx"><a href="#Centos7安装nginx" class="headerlink" title="Centos7安装nginx"></a>Centos7安装nginx</h3><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install -y gcc automake autoconf libtool makeyum install -y gcc-c++yum install -y pcre pcre-develyum install -y zlib zlib-develyum install -y openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="下载nginx安装包"><a href="#下载nginx安装包" class="headerlink" title="下载nginx安装包"></a>下载nginx安装包</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.20.1.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">tar -zxvf  nginx-1.20.1.tar.gzcd nginx-1.20.1.&#x2F;configuremake &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 切换到nginx默认安装目录cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin# 启动.&#x2F;nginx# 查看nginx启动情况netstat -nlp|grep 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="配置及开机自启动"><a href="#配置及开机自启动" class="headerlink" title="配置及开机自启动"></a>配置及开机自启动</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 配置nginx命令ln -s &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;bin&#x2F;nginx# 开机自启systemctl status rc-local # 查看自启文件，centos一般默认为 &#x2F;etc&#x2F;rc.d&#x2F;rc.localvi &#x2F;etc&#x2F;rc.d&#x2F;rc.local# 在最后一行添加nginx启动&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx# 赋予可执行权限chmod +x &#x2F;etc&#x2F;rc.d&#x2F;ec.local# 重新加载，需要先停止nginx服务，否付会出现端口已经占用的错误systemctl reload rc-local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes运维处理</title>
    <link href="/2022/01/29/%E6%9B%B4%E6%96%B0kubeadm%E8%AF%81%E4%B9%A6/"/>
    <url>/2022/01/29/%E6%9B%B4%E6%96%B0kubeadm%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<h3 id="1-续期k8s证书"><a href="#1-续期k8s证书" class="headerlink" title="1. 续期k8s证书"></a>1. 续期k8s证书</h3><p>使用kubeadm搭建的k8s集群默认的kubectl只有一年有效期。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>备份当前k8s证书<div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cp -r &#x2F;etc&#x2F;kubernetes &#x2F;etc&#x2F;kubernetes.bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li>查看过期时间<div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kubeadm alpha certs check-expiration<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li>更新证书<div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kubeadm alpha certs renew allsystemctl restart kubeletcp -a &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf &#x2F;root&#x2F;.kube&#x2F;config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="2-需要更改文件"><a href="#2-需要更改文件" class="headerlink" title="2. 需要更改文件"></a>2. 需要更改文件</h3><div class="code-wrapper"><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">└─etc    └─kubernetes        │  admin.conf        │  config        │  controller-manager.conf        │  scheduler.conf        │          ├─etcd        │   healthcheck-client.crt        │   healthcheck-client.key        │   peer.crt        │   peer.key        │   server.crt        │   server.key        │              └─pki            apiserver-etcd-client.crt            apiserver-etcd-client.key            apiserver-kubelet-client.crt            apiserver-kubelet-client.key            apiserver.crt            apiserver.key            front-proxy-client.crt            front-proxy-client.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-批量处理pod"><a href="#2-批量处理pod" class="headerlink" title="2. 批量处理pod"></a>2. 批量处理pod</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查询所有不正常的podkubectl get pod -A|grep [Evicted]# 删除命名空间下不正常的podkubectl get pod -n [NS]|grep &#39;[Evicted]&#39;|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n [NS]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>自动处理不正常的pod</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi opt.sh# opt.sh的内容for i in $(kubectl get pod -A|grep [Evicted]|awk &#39;!a[$1]++&#123;print&#125;&#39;|awk &#39;&#123;print$1&#125;&#39;)dokubectl get pod -n $i|grep &#39;[Evicted]&#39;|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n $idone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
      <tag>kubeadm</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

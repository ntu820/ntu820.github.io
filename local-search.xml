<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>springcloud gateway入门</title>
    <link href="/2024/01/09/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/01/09/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h3><p><a href="https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/">Spring Cloud Gateway</a> 是Spring Cloud的一个全新的API网关项目，目的是为了替换掉Zuul1，它基于Spring5.0 + SpringBoot2.0 + WebFlux（基于性能的Reactor模式响应式通信框架Netty，异步阻塞模型）等技术开发，性能于Zuul，官测试，<strong>Spring Cloud GateWay是Zuul1的1.6倍</strong> ，旨在为微服务架构提供种简单有效的统的API路由管理式 。</p><h4 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h4><p>路由（Route）是GateWay中最基本的组件之一，表示一个具体的路由信息载体，主要由下面几个部分组成：</p><ol><li>id：路由唯一标识，区别于其他的route</li><li>url： 路由指向的目的地URL，客户端请求最终被转发到的微服务</li><li>order： 用于多个Route之间的排序，数值越小越靠前，匹配优先级越高</li><li>predicate：断言的作用是进行条件判断，只有断言为true，才执行路由</li><li>filter: 过滤器用于修改请求和响应信息</li></ol><p>当请求到达<strong>gateway</strong>后，会通过一些匹配条件，定位到真正的服务节点，并且在这个转发过程前后，进行一些细粒度的控制，其中 <strong>Predicate（断言）</strong> 是我们的匹配条件，<strong>Filter</strong> 是一个拦截器，有了这两点，再加上URL，就可以实现一个具体的路由。</p><p>核心思想：<strong>路由转发+执行过滤器链</strong>。</p><p><strong>Route(路由)</strong> ：构建网关的基础模块，由ID、目标URL、过滤器等组成。</p><p><strong>Predicate（断言）</strong> ：开发人员可以匹配HTTP请求中的内容（请求头和请求参数），如果请求断言匹配贼进行路由。</p><p><strong>Filter（过滤）</strong> ：GateWayFilter的实例，使用过滤器，可以在请求被路由之前或者之后对请求进行修改。</p><h3 id="二：框架搭建"><a href="#二：框架搭建" class="headerlink" title="二：框架搭建"></a>二：框架搭建</h3><ol><li><p>创建springboot项目，选择合适参数，选择<code>gateway</code>组件</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/init.png" alt="创建springboot项目"></p></li><li><p>项目<code>pom.xml</code>文件，导入idea</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.hmifo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>springcloud gateway入门<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-boot.version</span><span class="token punctuation">></span></span>2.3.12.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-boot.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">></span></span>Hoxton.SR12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.junit.vintage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit-vintage-engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spring-cloud.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spring-boot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spring-boot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.hmifo.gateway.GatewayApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置路由</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8088</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> hm<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token comment"># gateway</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token comment"># 路由规则</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> ocr <span class="token comment"># 路由唯一标识</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8080</span> <span class="token comment"># 目标url</span>          <span class="token comment"># 断言规则，用于路由规则的匹配</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/ocr/<span class="token important">**</span> <span class="token comment"># url中有ocr的所有请求</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1 <span class="token comment"># 转发之前，去掉第一层路径</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>效果</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/http1.png" alt="原生接口访问"></p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/http2.png" alt="通过gateway访问"></p></li></ol><h3 id="三：核心思想"><a href="#三：核心思想" class="headerlink" title="三：核心思想"></a>三：核心思想</h3><h4 id="1-内置路由断言工厂"><a href="#1-内置路由断言工厂" class="headerlink" title="1. 内置路由断言工厂"></a>1. 内置路由断言工厂</h4><p>作用：当请求到达gateway的时候，使用断言对请求进行匹配，如果匹配成功就路由转发，否则就返回404。</p><p>类型：内置断言工厂和自定义断言工厂</p><ul><li><p>基于Datatime的断言</p><p>此类型断言根据时间进行判断，主要有三个：</p><p>AfterRoutePredicateFactory：接收一个时间参数，判断请求时间是否晚于指定日期</p><p>BeforeRoutePredicateFactory：接收一个时间参数，判断请求时间是否早于指定日期</p><p>BetweenRoutePredicateFactory：接收两个时间参数，判断请求时间是否在指定时间段内</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> after_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> After=2017<span class="token punctuation">-</span>01<span class="token punctuation">-</span>20T17<span class="token punctuation">:</span>42<span class="token punctuation">:</span>47.789<span class="token punctuation">-</span>07<span class="token punctuation">:</span>00<span class="token punctuation">[</span>America/Denver<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>可以通过<code>ZoneDateTime.now()</code>获取时间</p></li><li><p>基于Cookie的断言</p><p>判断cookie的key是否等于value，<code>chocolate</code>是否等于<code>ch.p</code>。支持正则表达式</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> cookie_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Cookie=chocolate<span class="token punctuation">,</span> ch.p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于请求头的断言</p><p>判断请求头中某个key是否等于value，同样支持正则表达式</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> header_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Header=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>Id<span class="token punctuation">,</span>\d+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于域名的断言</p><p>多个域名用逗号分隔，支持多个域名，及通配符</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> host_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Host=<span class="token important">**.somehost.org</span><span class="token punctuation">,</span><span class="token important">**.anotherhost.org</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于请求方法的断言</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> method_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Method=GET<span class="token punctuation">,</span>POST<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于路径的断言</p><p>支持通配符，同样支持占位符。支持<code>/red/1</code>或者<code>/red/blue</code>或者<code>/blue/green</code></p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> path_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Path=/red/<span class="token punctuation">&#123;</span>segment<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>/blue/<span class="token punctuation">&#123;</span>segment<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于查询参数的断言</p><p>查询参数携带<code>?green=xxx</code>，同样支持正则表达式。如果要指定值，则使用<code>Query=color,green</code></p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> query_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Query=green<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于远端地址（IP）的断言</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> remoteaddr_route        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> RemoteAddr=192.168.1.1/24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>基于权重的断言</p><p>发送10次请求，8次到weight_high，2次到weight_low。需要先配置组</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> weight_high        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//weighthigh.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Weight=group1<span class="token punctuation">,</span> <span class="token number">8</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> weight_low        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//weightlow.org        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> Weight=group1<span class="token punctuation">,</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h4 id="2-自定义路由断言工厂"><a href="#2-自定义路由断言工厂" class="headerlink" title="2. 自定义路由断言工厂"></a>2. 自定义路由断言工厂</h4><p>继承<code>AbstractRoutePredicateFactory</code>类，重新<code>apply</code>方法的逻辑。在<code>apply</code>方法中可以通过<code>exchange.getRequet()</code>拿到<code>ServletHttpRequest</code>对象，从而获取请求参数、请求方法、请求头等信息。</p><ol><li>必须是spring组件，是一个bean</li><li>类名必须加上<code>RoutePredicateFactory</code>作为结尾</li><li>继承<code>AbstractRoutePredicateFactory</code></li><li>声明静态内部类，声明属性来接收配置文件中对应的断言信息</li><li>结合<code>shortcutFieldOrder</code>进行绑定</li><li>通过<code>apply</code>进行逻辑判断，返回<code>true</code>匹配成功，返回<code>false</code>匹配失败</li></ol><p>示例：实现<code>Auth=zhangsan</code>的断言</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckRoutePredicateFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractRoutePredicateFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CheckRoutePredicateFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">CheckRoutePredicateFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">CheckRoutePredicateFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">shortcutFieldOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerWebExchange</span><span class="token punctuation">></span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">CheckRoutePredicateFactory<span class="token punctuation">.</span>Config</span> config<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GatewayPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> config<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当这个name=zhangsan时进行断言</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 用于接收配置文件中断言信息</span>    <span class="token annotation punctuation">@Validated</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8088</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> hm<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> ocr          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8080</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/ocr/<span class="token important">**</span>            <span class="token punctuation">-</span> Check=zhangsan1 <span class="token comment"># 这里是zhangsan1，没有满足断言规则，会出现404</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>结果：</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/predicate.png" alt="断言结果"></p><h4 id="3-内置过滤器"><a href="#3-内置过滤器" class="headerlink" title="3. 内置过滤器"></a>3. 内置过滤器</h4><p>路由过滤器允许以某种方式修改传入 HTTP 请求或传出 HTTP 响应。路由过滤器的范围限于特定路由。Spring Cloud Gateway 包含许多内置的 GatewayFilter 工厂。</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/filter.png" alt="过滤器"></p><h4 id="4-自定义过滤器"><a href="#4-自定义过滤器" class="headerlink" title="4. 自定义过滤器"></a>4. 自定义过滤器</h4><ol><li>继承<code>AbstractGatewayFilterFactory</code></li><li>类名必须以<code>GatewayFilterFactory</code>结尾</li></ol><p>示例：实现<code>check=lisi</code>的过滤器</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckGatewayFilterFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractGatewayFilterFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CheckGatewayFilterFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">CheckGatewayFilterFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">CheckGatewayFilterFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">shortcutFieldOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">GatewayFilter</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">CheckGatewayFilterFactory<span class="token punctuation">.</span>Config</span> config<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GatewayFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">></span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 1. 获取name参数</span>                <span class="token comment">// 2. 如果！=lisi，正常</span>                <span class="token comment">// 3. 否则不正常</span>                <span class="token class-name">String</span> name <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"-1000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 正常请求</span>                <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8088</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> hm<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> ocr          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8080</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/ocr/<span class="token important">**</span>            <span class="token punctuation">-</span> Check=zhangsan          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1            <span class="token punctuation">-</span> Check=lisi1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>结果：</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/filter1.png" alt="自定义过滤器"></p><h4 id="5-内置全局过滤器"><a href="#5-内置全局过滤器" class="headerlink" title="5. 内置全局过滤器"></a>5. 内置全局过滤器</h4><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/filter2.png" alt="全局过滤器"></p><ol><li>局部过滤器针对某个路由，全局过滤器针对所有路由</li><li>局部过滤器需要在路由中进行配置，全局过滤器一旦定义，就会投入使用</li></ol><h4 id="6-自定义全局过滤器"><a href="#6-自定义全局过滤器" class="headerlink" title="6. 自定义全局过滤器"></a>6. 自定义全局过滤器</h4><p>实现<code>GlobalFilter</code>接口即可，一般授权、日志使用到。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">></span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"正在使用全局过滤器进行记录，访问地址："</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"，远端IP："</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>结果：</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/filter3.png" alt="自定义全局过滤器"></p><p><strong>使用Java系统属性，开启访问日志</strong>，设置<code>-Dreactor.netty.http.server.accessLogEnabled=true</code></p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/filter4.png" alt="内置访问日志"></p><h4 id="7-跨域处理-CORS"><a href="#7-跨域处理-CORS" class="headerlink" title="7. 跨域处理(CORS)"></a>7. 跨域处理(CORS)</h4><ul><li>使用<code>yaml</code>配置</li></ul><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>欢迎使用Gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击访问<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建XMLHttpRequest对象</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'http://localhost:8088/ocr/hello?name=lisi1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置请求的URL和HTTP方法为GET</span>xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 定义状态改变时的处理函数</span><span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 当请求完成且返回状态码为200时</span><span class="token keyword">var</span> responseText <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span> <span class="token comment">// 获取服务器返回的文本内容</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出结果到控制台</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 发送请求</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>未配置跨域：</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/cors1.png" alt="CORS"></p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token comment"># 跨域访问配置</span>      <span class="token key atrule">globalcors</span><span class="token punctuation">:</span>        <span class="token key atrule">cors-configurations</span><span class="token punctuation">:</span>          <span class="token key atrule">'[/**]'</span><span class="token punctuation">:</span> <span class="token comment"># 允许跨域访问的资源</span>            <span class="token key atrule">allowedOrigins</span><span class="token punctuation">:</span> <span class="token string">"*"</span> <span class="token comment"># 跨域访问来源，*代表所有</span>            <span class="token key atrule">allowedMethods</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> GET            <span class="token punctuation">-</span> POST<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>配置跨域：</p><p><img src="/img/Gateway%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/cors2.png" alt="NO-CORS"></p><ul><li><p>使用配置类方式</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hmifo<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>cors<span class="token punctuation">.</span></span><span class="token class-name">CorsConfiguration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>cors<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span><span class="token class-name">CorsWebFilter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>cors<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span><span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>util<span class="token punctuation">.</span>pattern<span class="token punctuation">.</span></span><span class="token class-name">PathPatternParser</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CorsConfig</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">CorsWebFilter</span> <span class="token function">corsFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CorsConfiguration</span> corsConfiguration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CorsConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        corsConfiguration<span class="token punctuation">.</span><span class="token function">addAllowedMethod</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许的方法</span>        corsConfiguration<span class="token punctuation">.</span><span class="token function">addAllowedOrigin</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 允许来源</span>        corsConfiguration<span class="token punctuation">.</span><span class="token function">addAllowedHeader</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 运行请求头参数</span>        <span class="token class-name">UrlBasedCorsConfigurationSource</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PathPatternParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span><span class="token function">registerCorsConfiguration</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">,</span> corsConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CorsWebFilter</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot</tag>
      
      <tag>springcloud gateway</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arduino硬件篇一：ESP-01和DH11搭建温湿度数采</title>
    <link href="/2024/01/03/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/01/03/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h3 id="一：Arduino、ESP01、DH11"><a href="#一：Arduino、ESP01、DH11" class="headerlink" title="一：Arduino、ESP01、DH11"></a>一：Arduino、ESP01、DH11</h3><ol><li><p>Arduino，是一款便捷灵活、方便上手的开源电子原型平台。它构建于开放原始码simple I/O介面版，并且具有使用类似Java、C语言的Processing/Wiring开发环境。主要包含两个部分：硬件部分是可以用来做电路连接的Arduino电路板；另外一个则是Arduino IDE，计算机中的程序开发环境。你只要在IDE中编写程序代码，将程序上传到Arduino电路板后，程序便会告诉Arduino电路板要做些什么了。</p></li><li><p>ESP-01，是个比较常用的wifi模块，体积小，功能强大。</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/esp01.jpg" alt="esp-01"></p><p>引脚图：</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/esp01%E5%BC%95%E8%84%9A%E8%AF%B4%E6%98%8E.jpg" alt="引脚图"></p></li><li><p>DH11，是一款有已校准数字信号输出的温湿度传感器。其精度湿度±5%RH， 温度±2℃，量程湿度5~ 95%RH， 温度-20~+60℃。</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/dh11.jpg" alt="DH11"></p></li></ol><h3 id="二：Arduino配置ESP8266开发板，进行开发"><a href="#二：Arduino配置ESP8266开发板，进行开发" class="headerlink" title="二：Arduino配置ESP8266开发板，进行开发"></a>二：Arduino配置ESP8266开发板，进行开发</h3><ol><li><p>增加开发板支持</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/%E5%BC%80%E5%8F%91%E6%9D%BF.png" alt="开发板"></p></li><li><p>安装开发板</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/%E5%AE%89%E8%A3%850.png" alt="安装1"></p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/%E5%AE%89%E8%A3%851.png" alt="安装2"></p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/%E5%AE%89%E8%A3%852.png" alt="安装3"></p></li><li><p>硬件连接</p><p>使用USB转TTL设备进行烧写，接线方式如下：</p><table><thead><tr><th>ESP-01</th><th>USB-TTL</th><th>备注</th></tr></thead><tbody><tr><td>VCC</td><td>3.3V</td><td></td></tr><tr><td>GND</td><td>GND</td><td></td></tr><tr><td>RX</td><td>TX</td><td></td></tr><tr><td>TX</td><td>RX</td><td></td></tr><tr><td>CH_PD</td><td>3.3V</td><td>芯片使能，高电平使能，低电平失能。<br>手册上说需要串联一个上拉电阻，但是实际直接接入3.3v也可以进行烧录</td></tr><tr><td>GPIO0</td><td>GND</td><td>低电平启动，会进入烧写模式</td></tr></tbody></table></li><li><p>软件编码</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;ESP8266WiFi.h&gt;#include &lt;ESP8266HTTPClient.h&gt;#include &lt;DHT.h&gt;#include &lt;UUID.h&gt;&#x2F;&#x2F; 替换为您的 WiFi 信息const char* ssid &#x3D; &quot;wifi名称&quot;;const char* password &#x3D; &quot;wifi密码&quot;;&#x2F;&#x2F; 替换为您的后端 API 地址和端点const char* api_endpoint &#x3D; &quot;XXXX&quot;;&#x2F;&#x2F; 设置 DHT11 的引脚#define DHTPIN 2#define DHTTYPE DHT11DHT dht(DHTPIN, DHTTYPE);UUID uuid;void setup() &#123;  Serial.begin(115200);  &#x2F;&#x2F; 连接到 Wi-Fi  Serial.println(&quot;Connecting to WiFi...&quot;);  WiFi.begin(ssid, password);  while (WiFi.status() !&#x3D; WL_CONNECTED) &#123;    delay(1000);    Serial.println(&quot;Connecting to WiFi...&quot;);  &#125;  Serial.println(&quot;Connected to WiFi.&quot;);  &#x2F;&#x2F; 初始化 DHT11 传感器  Serial.println(&quot;Initializing DHT11 sensor...&quot;);  dht.begin();&#125;void loop() &#123;  if ((WiFi.status() &#x3D;&#x3D; WL_CONNECTED)) &#123;    &#x2F;&#x2F; 获取温湿度值    float temperature &#x3D; dht.readTemperature();    float humidity &#x3D; dht.readHumidity();    &#x2F;&#x2F; 如果读取失败，则退出本次循环    if (isnan(temperature) || isnan(humidity)) &#123;      delay(5000);      Serial.println(&quot;Failed to read from DHT11 sensor.&quot;);      return;    &#125;    &#x2F;&#x2F; 将温湿度值转换为字符串    &#x2F;&#x2F; String data &#x3D; &quot;temperature&#x3D;&quot; + String(temperature) + &quot;&amp;humidity&#x3D;&quot; + String(humidity);    &#x2F;&#x2F; Serial.println(data);    WiFiClient client;    HTTPClient http;    uuid.generate();    &#x2F;&#x2F; Serial.println(&quot;UUID:&quot; + String(uuid.toCharArray()));    Serial.print(&quot;[HTTP] begin...\n&quot;);    http.begin(client, api_endpoint);  &#x2F;&#x2F; HTTP，这里使用HTTP是因为项目有一个通讯网关，只能用HTTP。一般更好的实现方式是使用MQTT进行传输。    http.addHeader(&quot;Content-Type&quot;, &quot;application&#x2F;json&quot;); &#x2F;&#x2F; 设置一些头部信息    http.addHeader(&quot;requestId&quot;, String(uuid.toCharArray()));    http.addHeader(&quot;sourceCode&quot;, &quot;1004&quot;);    http.addHeader(&quot;serviceCode&quot;, &quot;1004109401&quot;);    Serial.print(&quot;[HTTP] POST...\n&quot;);    &#x2F;&#x2F; 拼接JSON数据    String postData &#x3D; &quot;&#123;\&quot;devCode\&quot;:\&quot;EQIP202304230001\&quot;,\&quot;authCode\&quot;:\&quot;70:C0:7B:EF:56:23\&quot;,\&quot;data\&quot;:&#123;\&quot;temperature\&quot;:&quot; + String(temperature) + &quot;,\&quot;humidity\&quot;:&quot; + String(humidity) + &quot;&#125;&#125;&quot;;&#x2F;&#x2F; 发送POST请求    int httpCode &#x3D; http.POST(postData);    if (httpCode &gt; 0) &#123;      &#x2F;&#x2F; HTTP header has been send and Server response header has been handled      Serial.printf(&quot;[HTTP] POST... code: %d\n&quot;, httpCode);      &#x2F;&#x2F; file found at server      if (httpCode &#x3D;&#x3D; HTTP_CODE_OK) &#123;        const String&amp; payload &#x3D; http.getString();        Serial.println(&quot;received payload:\n&lt;&lt;&quot;);        Serial.println(payload);        Serial.println(&quot;&gt;&gt;&quot;);      &#125;    &#125; else &#123;      Serial.printf(&quot;[HTTP] POST... failed, error: %s\n&quot;, http.errorToString(httpCode).c_str());    &#125;    http.end();  &#125;  &#x2F;&#x2F; 等待一段时间再进行下一次读取  delay(10 * 60 * 1000);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>程序烧录</p><p>按照步骤3的接线，将USB转TTL插入电脑，选择对应的COM口，点击进行烧录。</p></li><li><p>连接DH11</p><table><thead><tr><th>ESP-01</th><th>DH11</th><th>电源模块</th></tr></thead><tbody><tr><td>VCC</td><td>VCC</td><td>3.3V</td></tr><tr><td>GND</td><td>GND</td><td>GND</td></tr><tr><td>GPIO2</td><td>DATA</td><td></td></tr><tr><td>CH_PD</td><td></td><td>3.3V</td></tr></tbody></table></li><li><p>通电后，经过一段时间，发现数据上报成功。</p><p><img src="/img/ESP8266-01%E5%92%8CDH11%E6%90%AD%E5%BB%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%95%B0%E9%87%87%E7%B3%BB%E7%BB%9F/%E4%B8%8A%E6%8A%A5%E7%BB%93%E6%9E%9C.png" alt="上报结果"></p></li></ol><h3 id="三：后期优化"><a href="#三：后期优化" class="headerlink" title="三：后期优化"></a>三：后期优化</h3><ol><li>手动输入wifi地址后，进行连接，不要写死在代码中；</li><li>数据上报，可以采用MQTT方式；</li><li>通过温湿度的改变，接入继电器，可以实现空调开关、灯光的开关。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Arduino</category>
      
      <category>硬件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ESP-01</tag>
      
      <tag>DH11</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-swarm创建及使用</title>
    <link href="/2023/12/31/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/31/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="一：介绍"><a href="#一：介绍" class="headerlink" title="一：介绍"></a>一：介绍</h3><p>是使用<code>Docker</code> 引擎内置的集群管理和编排工具， 是 Docker 官方三剑客项目之一，提供 Docker 容器集群服务，是 Docker 官方对容器云生态进行支持的核心方案。Swarm集群的框架与Hadoop集群或其他分布式系统类似，它也是由节点构成，每一个节点就是一台主机或者虚拟机。工作的机制也是主从模式（master/slaver）,节点分为两种，一种是负责管理的Manager另一种是具体干活的Worker。</p><p>使用它，用户可以将多个 Docker 主机封装为单个大型的虚拟 Docker 主机，快速打造一套容器云平台。Swarm mode 内置 kv 存储功能，提供了众多的新特性，比如：具有容错能力的去中心化设计、内置服务发现、负载均衡、路由网格、动态伸缩、滚动更新、安全传输等。使得 Docker 原生的<code>Swarm</code>集群具备与<code>Mesos</code>、<code>Kubernetes</code>竞争的实力。</p><h3 id="二：创建集群"><a href="#二：创建集群" class="headerlink" title="二：创建集群"></a>二：创建集群</h3><h4 id="1-manager节点初始化"><a href="#1-manager节点初始化" class="headerlink" title="1. manager节点初始化"></a>1. manager节点初始化</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker swarm init --advertise-addr [manager节点IP]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker1 ~]# docker swarm init --advertise-addr 172.12.220.102Swarm initialized: current node (oln99ar55vhfw5jlk7y46y6e1) is now a manager.To add a worker to this swarm, run the following command: # 添加worker节点    docker swarm join --token SWMTKN-1-1us3n4zwt1nm1nwfqxhqp3hgiy6kkglob9ytv6qrjovorf2vzp-8dz6xqkotle0z4tjq4heu6780 172.12.220.102:2377To add a manager to this swarm, run &#39;docker swarm join-token manager&#39; and follow the instructions. # 添加manager节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="2-查看节点状态"><a href="#2-查看节点状态" class="headerlink" title="2. 查看节点状态"></a>2. 查看节点状态</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker node ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker1 ~]# docker node lsID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSIONoln99ar55vhfw5jlk7y46y6e1 *   docker1             Ready               Active              Leader              19.03.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h4 id="3-增加worker节点"><a href="#3-增加worker节点" class="headerlink" title="3. 增加worker节点"></a>3. 增加worker节点</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker swarm join --token SWMTKN-1-1us3n4zwt1nm1nwfqxhqp3hgiy6kkglob9ytv6qrjovorf2vzp-8dz6xqkotle0z4tjq4heu6780 172.12.220.102:2377<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker2 ~]# docker swarm join --token SWMTKN-1-1us3n4zwt1nm1nwfqxhqp3hgiy6kkglob9ytv6qrjovorf2vzp-8dz6xqkotle0z4tjq4heu6780 172.12.220.102:2377This node joined a swarm as a worker.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="4-查看整个集群状态"><a href="#4-查看整个集群状态" class="headerlink" title="4. 查看整个集群状态"></a>4. 查看整个集群状态</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker1 ~]# docker node lsID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSIONoln99ar55vhfw5jlk7y46y6e1 *   docker1             Ready               Active              Leader              19.03.83coytptzzqv1ln79h86z2i4nd     docker2             Ready               Active                                  19.03.8qix8jiwlgdketabs4atukz8oz     docker3             Ready               Active                                  19.03.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>至此，最小swarm集群已经搭建完毕。</p><h3 id="三：创建服务"><a href="#三：创建服务" class="headerlink" title="三：创建服务"></a>三：创建服务</h3><h4 id="1-创建nginx服务"><a href="#1-创建nginx服务" class="headerlink" title="1.创建nginx服务"></a>1.创建nginx服务</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker service create --name nginx --replicas&#x3D;3 -p 88:80 nginx:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker1 ~]# docker service create --name nginx --replicas&#x3D;3 -p 88:80 nginx:latestenuo7kgjj5nzux4hij0vsn7q3overall progress: 3 out of 3 tasks1&#x2F;3: running   [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;]2&#x2F;3: running   [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;]3&#x2F;3: running   [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;]verify: Service converged<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>查看服务状态：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@docker1 ~]# docker service lsID                  NAME                MODE                REPLICAS            IMAGE               PORTSenuo7kgjj5nz        nginx               replicated          3&#x2F;3                 nginx:latest        *:88-&gt;80&#x2F;tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h4 id="2-管理nginx服务"><a href="#2-管理nginx服务" class="headerlink" title="2.管理nginx服务"></a>2.管理nginx服务</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 扩缩docker service scale nginx&#x3D;1# 删除服务docker service rm nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="3-使用yml文件创建wordpress服务"><a href="#3-使用yml文件创建wordpress服务" class="headerlink" title="3.使用yml文件创建wordpress服务"></a>3.使用yml文件创建wordpress服务</h4><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">wordpress</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> wordpress    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"81:80"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> overlay    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">WORDPRESS_DB_HOST</span><span class="token punctuation">:</span> db<span class="token punctuation">:</span><span class="token number">3306</span>      <span class="token key atrule">WORDPRESS_DB_USER</span><span class="token punctuation">:</span> wordpress      <span class="token key atrule">WORDPRESS_DB_PASSWORD</span><span class="token punctuation">:</span> wordpress    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> replicated      <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span><span class="token number">5.7</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> overlay    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"db-data:/var/lib/mysql"</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> root123.X      <span class="token key atrule">MYSQL_DATABASE</span><span class="token punctuation">:</span> wordpress      <span class="token key atrule">MYSQL_USER</span><span class="token punctuation">:</span> wordpress      <span class="token key atrule">MYSQL_PASSWORD</span><span class="token punctuation">:</span> wordpress    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>      <span class="token key atrule">placement</span><span class="token punctuation">:</span>        <span class="token key atrule">constraints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>node.role == manager<span class="token punctuation">]</span>  <span class="token key atrule">visualizer</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> dockersamples/visualizer<span class="token punctuation">:</span>stable    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8080:8080"</span>    <span class="token key atrule">stop_grace_period</span><span class="token punctuation">:</span> 1m30s    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"/var/run/docker.sock:/var/run/docker.sock"</span>    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>      <span class="token key atrule">placement</span><span class="token punctuation">:</span>        <span class="token key atrule">constraints</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>node.role == manager<span class="token punctuation">]</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">db-data</span><span class="token punctuation">:</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  overlay<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker stack deploy -c docker-compose.yml wordpress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker stack ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker stack rm wordpress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="5-docker-service常用命令"><a href="#5-docker-service常用命令" class="headerlink" title="5.docker service常用命令"></a>5.docker service常用命令</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 启动服务docker service create nginxdocker service create -p 80:80 nginxdocker service create --replicas 5 nginx# 停止某个服务并删除docker service rm nginx# 查看已经在运行的服务docker service ls# 查看某个服务运行状态docker service ps nginx# 增加和删除DNSdocker service update --dns-add 222.222.222.222 nginxdocker service update --dns-rm 222.222.222.222 nginx# 增加和删除端口映射docker service update --publish-add 80:80 nginxdocker service update --publish-rm 80:80 nginx# 缩容和扩容docker service scale nginx&#x3D;2docker service scale nginx&#x3D;5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="四：docker-swarm网络"><a href="#四：docker-swarm网络" class="headerlink" title="四：docker-swarm网络"></a>四：docker-swarm网络</h3><p>本次实验，使用镜像<code>jwilder/whoami:latest</code>进行。</p><p>使用自定义的overlay网络，部署whoami服务</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 创建自定义网络docker network create --driver overlay myoverlay# 创建whoami服务docker service create --name whoami --network myoverlay -p 8001:8000 jwilder&#x2F;whoami:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>解析网络</strong></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/%E6%B5%81%E9%87%8F.png" alt="流量"></p><p>目前whoami服务部署在docker2主机上（即：172.12.220.103）。使用<code>http://172.12.220.102:8001</code>进行访问，追踪网络流量。</p><p>网络技术：iptables、ipvs、vxlan</p><ol><li><p>查看<code>myoverlay</code>网络</p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network1.png" alt="myoverlay"></p></li><li><p>查看whoami容器部署位置</p><p><code>docker service ps whoami</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/whoami.png" alt="whoami"></p><p>登录172.12.220.103服务器，查看<code>whoami</code>具体ip地址</p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/whoami-ip.png" alt="whoami-ip"></p></li><li><p>登录172.12.220.102服务器，查看iptables规则</p><p><code>iptables -t nat -nvL</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network3.png" alt="iptables"></p><p>发现有<code>172.18.0.2</code>这个地址，该地址在ingress_sbox网络空间上</p></li><li><p>使用<code>nsenter</code>查询ingress_sbox网卡信息</p><p><code>nsenter --net=/var/run/docker/netns/ingress_sbox ip a</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network4.png" alt="nsenter"></p></li><li><p>使用<code>ipvsadm</code>查询该网卡上的ipvs规则</p><p><code>nsenter --net=/var/run/docker/netns/ingress_sbox ipvsadm -ln</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network5.png" alt="ipvs"></p><p>发现该IP就是whoami具体容器Ip，但是该IP应该处于节点2，目前所在节点1不应该存在，到底时如何进行转发。</p></li><li><p>ingress_sbox在进行ipvs转发时，使用iptable规则对其进行标注。</p><p><code>nsenter --net=/var/run/docker/netns/ingress_sbox iptables -t mangle -nvL</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network6.png" alt="mangle"></p><p>发现进行8001转发时，都对其进行标记，<code>0x103</code>，16进制的103，转换为10进制为：259，发现ipvs就是针对259进行转发（如图步骤5）</p></li><li><p>查询ingress_sbox路由信息</p><p><code>nsenter --net=/var/run/docker/netns/ingress_sbox route -n</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/network7.png" alt="route"></p><p>所有<code>10.0.0.0</code>的数据，都是通过<code>eth0</code>网卡进行转发</p></li><li><p>此时进入到ingress的网络空间，发现网卡通过br0进行桥接，通过vxlan进行传输。</p><p><code>nsenter --net=/var/run/docker/netns/1-x96tu67qd7 ip a</code></p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/vxlan-1.png" alt="vxlan-1"></p></li><li><p>到172.12.220.103，查询同样的ingress网络空间</p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/vxlan-2.png" alt="vxlan-2"></p><p>和节点1上的形成对应，建立vxlan</p></li><li><p>节点2上，直接通过veth4直接输出到whoami</p><p><img src="/img/docker-swarm%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/vxlan-3.png" alt="vxlan-3"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>docker-swarm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>集装箱号识别</title>
    <link href="/2023/09/15/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/"/>
    <url>/2023/09/15/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h3 id="1-技术选型"><a href="#1-技术选型" class="headerlink" title="1. 技术选型"></a>1. 技术选型</h3><p>集装箱箱号识别，检测集装箱箱号，并识别出箱号。</p><p>规则：标准集装箱箱号由11位编码组成，包括三个部分：</p><ol><li><p>第一部分由4位英文字母组成。前三位代码（Owner Code）主要说明箱主、经营人，第四位代码说明集装箱的类型。</p></li><li><p>第二部分由6位数字组成。是箱体注册码（Registration Code），用于一个集装箱箱体持有的唯一标识。</p></li><li><p>第三部分为校验码（Check Digit）由前4位字母和6位数字经过校验规则运算得到，用于识别在校验时是否发生错误。即第11位编号。</p></li></ol><p>一般识别的项目，需要经历两个步骤，</p><ol><li>对象检测，主要就是检测需要识别的对象位置在哪里，检测到之后，将对象检测出来。</li><li>进行字符识别，由于已经将需要识别的对象检测出来，直接使用成熟的OCR算法，直接进行检测。</li></ol><p>本次技术选项采用：<a href="https://docs.ultralytics.com/"><strong>YOLOv8</strong></a>+<a href="https://cnocr.readthedocs.io/zh/latest/"><strong>CnOCR</strong></a></p><h3 id="2-YOLOv8"><a href="#2-YOLOv8" class="headerlink" title="2. YOLOv8"></a>2. YOLOv8</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><a href="https://ultralytics.com/">Ultralytics</a> <a href="https://github.com/ultralytics/ultralytics">YOLOv8</a> 是一款前沿、最先进（SOTA）的模型，基于先前 YOLO 版本的成功，引入了新功能和改进，进一步提升性能和灵活性。YOLOv8 设计快速、准确且易于使用，使其成为各种物体检测与跟踪、实例分割、图像分类和姿态估计任务的绝佳选择。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;ultralytics&#x2F;ultralytics.gitcd ultralyticspip install -r requirements.txt# 主要是为了后期做自定义数据训练pip install ultralyticspip install yolopython setup.py install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="下载权重模型"><a href="#下载权重模型" class="headerlink" title="下载权重模型"></a>下载权重模型</h4><p>下载模型，由于模型需要耗时，这里可以提前将模型下载好。这里使用yolovn的权重模型</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget https:&#x2F;&#x2F;github.com&#x2F;ultralytics&#x2F;assets&#x2F;releases&#x2F;download&#x2F;v0.0.0&#x2F;yolov8n.pt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="图片检测"><a href="#图片检测" class="headerlink" title="图片检测"></a>图片检测</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yolo predict model&#x3D;yolov8n.pt source&#x3D;D:\workplaces\ultralytics\ultralytics\assets\bus.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>此时会在目录（\runs\detect\predict）下生成一张检测的图片</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/bus.jpg" alt="检测后的图片"></p><p>此时代表你的yolov8已经成功安装，并且可以正常使用。</p><h4 id="训练自定义数据集"><a href="#训练自定义数据集" class="headerlink" title="训练自定义数据集"></a>训练自定义数据集</h4><ol><li><p>准备数据集，这里可以参考coco128进行演示。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget https:&#x2F;&#x2F;ultralytics.com&#x2F;assets&#x2F;coco128.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>将下载好的数据库解压到yolo的根目录的<code>datasets</code>目录下，如果没有该目录，手动创建。具体效果如下：</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/coco128.png" alt="coco128"></p><p>参考<code>coco128</code>的目录，新建自己的数据集目录。</p></li><li><p>使用<code>labelimg</code>进行标注，安装很简单，<code>pip install labelimg</code>即可。标注方法见下图</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/labelimg.png" alt="labelimg标注"></p></li><li><p>标注好后，得到如下格式</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/labelimg-2.png" alt="labelimg标注得到结果"></p><p>将改文件直接复制到yolo的datasets文件下，如下图</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/dataset.png" alt="自定义数据集"></p></li><li><p>编写自己yaml文件，文件可以参考根目录下<code>ultralytics\ultralytics\cfg\datasets\coco8.yaml</code></p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">path</span><span class="token punctuation">:</span> D<span class="token punctuation">:</span>\workplaces\ultralytics\datasets\number  <span class="token comment"># dataset root dir</span><span class="token key atrule">train</span><span class="token punctuation">:</span> images\train  <span class="token comment"># train images (relative to 'path') 128 images</span><span class="token key atrule">val</span><span class="token punctuation">:</span> images\val  <span class="token comment"># val images (relative to 'path') 128 images</span><span class="token key atrule">test</span><span class="token punctuation">:</span>  <span class="token comment"># test images (optional)</span><span class="token comment"># Classes，由于我们这里只有一个分类，如果有其他分类，可以在标注时自己添加</span><span class="token key atrule">names</span><span class="token punctuation">:</span>  <span class="token key atrule">0</span><span class="token punctuation">:</span> number<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h4 id="进行自定义数据训练"><a href="#进行自定义数据训练" class="headerlink" title="进行自定义数据训练"></a>进行自定义数据训练</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yolo detect train data&#x3D;datasets\number\number.yaml model&#x3D;yolov8n.yaml pretrained&#x3D;yolov8n.pt epochs&#x3D;100 batch&#x3D;4 resume&#x3D;True<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>可以在yolo的目录下看到我们此次训练的一些结果和训练好的检测模型</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/train.png" alt="训练结果展示"></p><blockquote><p>参考视频：<a href="https://www.bilibili.com/video/BV1o44y1w77C/?spm_id_from=333.337.search-card.all.click&amp;vd_source=8caed7a01f27876b0197c4e678b8ec83">https://www.bilibili.com/video/BV1o44y1w77C/?spm_id_from=333.337.search-card.all.click&amp;vd_source=8caed7a01f27876b0197c4e678b8ec83</a></p></blockquote><h3 id="3-CnOCR"><a href="#3-CnOCR" class="headerlink" title="3. CnOCR"></a>3. CnOCR</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p><a href="https://github.com/breezedeus/cnocr"><strong>CnOCR</strong></a> 是 <strong>Python 3</strong> 下的<strong>文字识别</strong>（<strong>Optical Character Recognition</strong>，简称<strong>OCR</strong>）工具包，支持<strong>简体中文</strong>、<strong>繁体中文</strong>（部分模型）、<strong>英文</strong>和<strong>数字</strong>的常见字符识别，支持竖排文字的识别。自带了<strong>20+个</strong> <a href="https://cnocr.readthedocs.io/zh/latest/models/">训练好的模型</a>，适用于不同应用场景，安装后即可直接使用。同时，CnOCR也提供简单的<a href="https://cnocr.readthedocs.io/zh/latest/train/">训练命令</a>供使用者训练自己的模型。</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">pip install cnocr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><blockquote><p>为了保护作者权益，这里就不介绍如果进行私有化的训练了，有兴趣的小伙伴可以去<a href="https://cnocr.readthedocs.io/zh/latest/">官网</a>咨询。</p></blockquote><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>由于本地集装箱箱号都是在一行的，且字符比较简单。我们直接使用CnOCR自带的模型，效果也不错。</p><p>通过yolo检测出来的图片为</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/number_0.79.jpg" alt="通过yolo检测出来的图片"></p><p>将该图片输入到cnocr中进行</p><p><img src="/img/%E9%9B%86%E8%A3%85%E7%AE%B1%E5%8F%B7%E8%AF%86%E5%88%AB/cnocr.png" alt="cnocr检测结果"></p><h4 id="HTTP使用"><a href="#HTTP使用" class="headerlink" title="HTTP使用"></a>HTTP使用</h4><p>CnOCR 自 <strong>V2.2.1</strong> 开始加入了基于 <strong>FastAPI</strong> 的HTTP服务。开启服务需要安装几个额外的包，可以使用以下命令安装：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">pip install cnocr[serve]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>安装完成后，可以通过以下命令启动HTTP服务（**<code>-p</code>** 后面的数字是<strong>端口</strong>，可以根据需要自行调整）：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cnocr serve -p 8501<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>服务开启后，可以使用以下方式调用服务。</p><p>比如待识别文件为 <code>docs/examples/huochepiao.jpeg</code>，如下使用 curl 调用服务：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">curl -F image&#x3D;@docs&#x2F;examples&#x2F;huochepiao.jpeg http:&#x2F;&#x2F;0.0.0.0:8501&#x2F;ocr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><blockquote><p>具体详细使用，见<a href="https://cnocr.readthedocs.io/zh/latest/">官网</a>。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
      <category>pytorch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Object Detection</tag>
      
      <tag>OCR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地部署ChatGLM2</title>
    <link href="/2023/09/14/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/"/>
    <url>/2023/09/14/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/</url>
    
    <content type="html"><![CDATA[<h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h3><p><a href="https://github.com/THUDM/ChatGLM2-6B.git">ChatGLM<strong>2</strong>-6B</a> 是开源中英双语对话模型 <a href="https://github.com/THUDM/ChatGLM-6B">ChatGLM-6B</a> 的第二代版本，在保留了初代模型对话流畅、部署门槛较低等众多优秀特性的基础之上，ChatGLM<strong>2</strong>-6B 引入了如下新特性：</p><ol><li><strong>更强大的性能</strong>：基于 ChatGLM 初代模型的开发经验，我们全面升级了 ChatGLM2-6B 的基座模型。ChatGLM2-6B 使用了 <a href="https://github.com/THUDM/GLM">GLM</a> 的混合目标函数，经过了 1.4T 中英标识符的预训练与人类偏好对齐训练，<a href="https://github.com/THUDM/ChatGLM2-6B#%E8%AF%84%E6%B5%8B%E7%BB%93%E6%9E%9C">评测结果</a>显示，相比于初代模型，ChatGLM2-6B 在 MMLU（+23%）、CEval（+33%）、GSM8K（+571%） 、BBH（+60%）等数据集上的性能取得了大幅度的提升，在同尺寸开源模型中具有较强的竞争力。</li><li><strong>更长的上下文</strong>：基于 <a href="https://github.com/HazyResearch/flash-attention">FlashAttention</a> 技术，我们将基座模型的上下文长度（Context Length）由 ChatGLM-6B 的 2K 扩展到了 32K，并在对话阶段使用 8K 的上下文长度训练。对于更长的上下文，我们发布了 <a href="https://huggingface.co/THUDM/chatglm2-6b-32k">ChatGLM2-6B-32K</a> 模型。<a href="https://github.com/THUDM/LongBench">LongBench</a> 的测评结果表明，在等量级的开源模型中，ChatGLM2-6B-32K 有着较为明显的竞争优势。</li><li><strong>更高效的推理</strong>：基于 <a href="http://arxiv.org/abs/1911.02150">Multi-Query Attention</a> 技术，ChatGLM2-6B 有更高效的推理速度和更低的显存占用：在官方的模型实现下，推理速度相比初代提升了 42%，INT4 量化下，6G 显存支持的对话长度由 1K 提升到了 8K。</li><li><strong>更开放的协议</strong>：ChatGLM2-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</li></ol><blockquote><p>来自GitHub中仓库介绍，这里直接引用。</p></blockquote><h3 id="2-安装GPU环境"><a href="#2-安装GPU环境" class="headerlink" title="2. 安装GPU环境"></a>2. 安装GPU环境</h3><p>如果有GPU显卡，首先需要安装GPU驱动、cuda、cudnn。这里以RTX 3070为例。</p><h4 id="查看GPU，选择相应的cuda版本"><a href="#查看GPU，选择相应的cuda版本" class="headerlink" title="查看GPU，选择相应的cuda版本"></a>查看GPU，选择相应的cuda版本</h4><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/cuda.png" alt="查看GPU版本"></p><p>下载CUDA，<a href="https://developer.nvidia.com/cuda-toolkit-archive">英伟达Nvidia官网</a>，选择相应的cuda版本。安装就是一路ok，同意。默认安装位置：<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7</code></p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/cuda-version.png" alt="cuda版本选择"></p><p>验证cuda是否安装成功</p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/nvcc.png" alt="nvcc"></p><p>下载CUDNN，<a href="https://developer.nvidia.com/rdp/cudnn-download">CUDNN地址</a>。解压后，将cudnn文件夹下的<code>bin</code>，<code>include</code>，<code>lib</code>三个文件夹下的文件，直接复制到cuda目录对应的文件夹下。</p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/cudnn.png" alt="cudnn"></p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/cudnn-1.png" alt="cudnn的安装"></p><p>验证cudnn是否安装成功</p><p>进入到<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\extras\demo_suite</code>目录，<code>cmd</code>运行<code>bandwidthTest.exe</code>和<code>deviceQuery.exe</code>，运行结果得到两个<code>Result=PASS</code>即为成功。</p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/check-1.png" alt="bandwidthTest"></p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/check-2.png" alt="deviceQuery"></p><blockquote><p>如果是CPU版本运行，则可以跳过此步骤</p></blockquote><h3 id="3-本地部署"><a href="#3-本地部署" class="headerlink" title="3. 本地部署"></a>3. 本地部署</h3><h4 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h4><p>本地使用conda环境进行，conda的安装直接可以从<a href="https://anaconda.org.cn/">Anaconda中文官网</a>进行下载。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">conda create -n gpt pyhon&#x3D;3.9# 安装完毕后，进入环境activate gpt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>然后下载chatglm代码</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;THUDM&#x2F;ChatGLM2-6Bcd ChatGLM2-6B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>pip安装所需包</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>其中 <code>transformers</code> 库版本推荐为 <code>4.30.2</code>，<code>torch</code> 推荐使用 2.0 及以上的版本，以获得最佳的推理性能。</p><p>验证是否使用了GPU</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchtorch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="4-下载模型"><a href="#4-下载模型" class="headerlink" title="4. 下载模型"></a>4. 下载模型</h3><p>默认代码会从远端下载模型到本地，如果你的网络环境较差，下载模型参数可能会花费较长时间甚至失败。我们可以提前下载模型。</p><p>从<a href="https://huggingface.co/THUDM/chatglm2-6b">Hugging Face Hub</a>下载，如果你的网络在墙内，建议使用<a href="https://cloud.tsinghua.edu.cn/d/674208019e314311ab5c/">清华大学的网盘</a>进行下载。</p><h3 id="5-运行"><a href="#5-运行" class="headerlink" title="5. 运行"></a>5. 运行</h3><blockquote><p>本次运行都是从本地加载模型进行</p></blockquote><h4 id="CPU运行"><a href="#CPU运行" class="headerlink" title="CPU运行"></a>CPU运行</h4><p>从官网介绍，基于 Streamlit 的网页版 Demo 会比<code>python</code>运行的更加流畅。</p><p>修改<code>web_demo2.py</code>，</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># D:\workplaces\ChatGLM2-6B\chatglm2-6b，这个就是模型在本地的具体位置</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"D:\workplaces\ChatGLM2-6B\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># CPU运行模型</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"D:\workplaces\ChatGLM2-6B\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行，<code>streamlit run web_demo2.py</code>。</p><h4 id="GPU运行"><a href="#GPU运行" class="headerlink" title="GPU运行"></a>GPU运行</h4><p>只需修改模型在本地的位置即可，其他不用修改。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># D:\workplaces\ChatGLM2-6B\chatglm2-6b，这个就是模型在本地的具体位置</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"D:\workplaces\ChatGLM2-6B\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># GPU运行模型</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"D:\workplaces\ChatGLM2-6B\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="API方式部署"><a href="#API方式部署" class="headerlink" title="API方式部署"></a>API方式部署</h4><p>默认部署在本地的 8000 端口，这里通过NAT映射进行。默认在本机只需要访问：<code>http://127.0.0.1:8000</code></p><p><img src="/img/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ChatGLM2/api.png" alt="API访问"></p>]]></content>
    
    
    <categories>
      
      <category>chatglm2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu安装nginx+keepalived-联网版</title>
    <link href="/2023/07/17/Ubuntu%E5%AE%89%E8%A3%85nginx-keepalived-%E8%81%94%E7%BD%91%E7%89%88/"/>
    <url>/2023/07/17/Ubuntu%E5%AE%89%E8%A3%85nginx-keepalived-%E8%81%94%E7%BD%91%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h3 id="1-在线安装keepalived、nginx"><a href="#1-在线安装keepalived、nginx" class="headerlink" title="1.在线安装keepalived、nginx"></a>1.在线安装keepalived、nginx</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">apt install -y keepalived<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>2.在线安装nginx</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">apt install -y nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="2-配置keepalived"><a href="#2-配置keepalived" class="headerlink" title="2.配置keepalived"></a>2.配置keepalived</h3><p>主keepalived配置：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">global_defs &#123;   router_id nginx01  # 运行 keepalived 服务器的标识，在一个网络内应该是唯一的&#125;vrrp_script chk_nginx &#123;   script &quot;&#x2F;etc&#x2F;keepalived&#x2F;chk_nginx.sh&quot; # 检查nginx状态脚本路径   interval 1  # 每1秒检测一次nginx的运行状态   weight -2  # 失败一次，将自己的优先级-2&#125;vrrp_instance VI_1 &#123; #vrrp 实例定义部分    state MASTER  # 设置 lvs 的状态，MASTER 和 BACKUP 两种，必须大写    interface ens18 # 设置对外服务的接口，绑定网卡    virtual_router_id 200 # 设置虚拟路由标示，这个标示是一个数字，同一个 vrrp 实例使用唯一标示    priority 100 # 定义优先级，数字越大优先级越高，在一个 vrrp——instance 下，master 的优先级必须大于 backup    advert_int 1 # 设定 master 与 backup 负载均衡器之间同步检查的时间间隔，单位是秒    authentication &#123;  # 设置验证类型和密码        auth_type PASS        auth_pass 1111  # 验证密码，同一个 vrrp_instance 下 MASTER 和 BACKUP 密码必须相同    &#125;    virtual_ipaddress &#123;  # 设置虚拟 ip 地址，可以设置多个，每行一个        172.16.214.206&#x2F;24   &#125;   cast_src_ip 172.16.214.204   unicast_peer &#123;      172.16.214.205   &#125;   track_script &#123;        chk_nginx   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>备keepalived配置：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">global_defs &#123;   router_id nginx02&#125;vrrp_script chk_nginx &#123;   script &quot;&#x2F;etc&#x2F;keepalived&#x2F;chk_nginx.sh&quot; ##检查nginx状态脚本路径   interval 1  ##每1秒检测一次nginx的运行状态   weight -2  ##失败一次，将自己的优先级-2&#125;vrrp_instance VI_1 &#123;    state BACKUP    interface ens18    virtual_router_id 200    priority 80    advert_int 1    authentication &#123;        auth_type PASS        auth_pass 1111    &#125;    virtual_ipaddress &#123;        172.16.214.206&#x2F;24   &#125;   cast_src_ip 172.16.214.205   unicast_peer &#123;      172.16.214.204   &#125;   track_script &#123;        chk_nginx   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>检查脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#!&#x2F;bin&#x2F;bashd&#x3D;&#96;date --date today +%Y-%m-%d_%H:%M:%S&#96;run1&#x3D;&#96;ps -C nginx --no-heading|wc -l&#96;if [ $run1 -eq &quot;0&quot; ]; then        echo &quot;$d nginx down,nginx will restart for once&quot; &gt;&gt; &#x2F;var&#x2F;log&#x2F;chk_nginx.log        systemctl start nginxd.service        sleep 2        run2&#x3D;&#96;ps -C nginx --no-heading|wc -l&#96;        if [ $run2 -eq &quot;0&quot;  ]; then                echo &quot;$d nginx down,keepalived will stop&quot; &gt;&gt; &#x2F;var&#x2F;log&#x2F;chk_nginx.log                systemctl stop keepalived.service        fifi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-验证主备"><a href="#3-验证主备" class="headerlink" title="3.验证主备"></a>3.验证主备</h3><p><img src="/img/Ubuntu%E5%AE%89%E8%A3%85nginx-keepalived-%E8%81%94%E7%BD%91%E7%89%88/ip.png" alt="主备sip"></p>]]></content>
    
    
    <categories>
      
      <category>ubuntu</category>
      
      <category>keepalived</category>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>keepalived</tag>
      
      <tag>软负载</tag>
      
      <tag>高可用</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在k8s中部署jenkins</title>
    <link href="/2023/03/10/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/"/>
    <url>/2023/03/10/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/</url>
    
    <content type="html"><![CDATA[<h2 id="基于kubernetes部署jenkins"><a href="#基于kubernetes部署jenkins" class="headerlink" title="基于kubernetes部署jenkins"></a>基于kubernetes部署jenkins</h2><p>当 <code>Jenkins Master</code> 接受到 Build 请求时，会根据配置的 <code>Label</code> 动态创建一个运行在 <code>Pod</code> 中的 <code>Jenkins Slave</code> 并注册到 Master 上，当运行完 Job 后，这个 Slave 会被注销并且这个 Pod 也会自动删除，恢复到最初状态。 那么我们使用这种方式带来了哪些好处呢？</p><ul><li><strong>服务高可用</strong>，当 Jenkins Master 出现故障时，Kubernetes 会自动创建一个新的 Jenkins Master 容器，并且将 Volume 分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用。</li><li><strong>动态伸缩</strong>，合理使用资源，每次运行 Job 时，会自动创建一个 Jenkins Slave，Job 完成后，Slave 自动注销并删除容器，资源自动释放，而且 Kubernetes 会根据每个资源的使用情况，动态分配 Slave 到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。</li><li><strong>扩展性好</strong>，当 Kubernetes 集群的资源严重不足而导致 Job 排队等待时，可以很容易的添加一个 Kubernetes Node 到集群中，从而实现扩展。</li></ul><blockquote><p>参考： <strong><a href="https://youdianzhishi.com/web/course/1007/1102">https://youdianzhishi.com/web/course/1007/1102</a></strong></p><p>kubernetes：v1.19.8</p><p>jenkins：2.387.1-tls</p></blockquote><h3 id="1-部署jenkins"><a href="#1-部署jenkins" class="headerlink" title="1. 部署jenkins"></a>1. 部署jenkins</h3><ol><li><p>部署的rbac，这里为了方便，直接把<code>jenkins</code>这个用户作为集群管理。存在一定风险，如果是正式环境，建议使用rbac进行控制。</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">roleRef</span><span class="token punctuation">:</span> <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>admin<span class="token key atrule">subjects</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount   <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins   <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>部署jenkins</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">minReadySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> jenkins      <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> k8snode01 <span class="token comment"># 指定节点部署</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins          <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins<span class="token punctuation">:</span>2.387.1<span class="token punctuation">-</span>lts          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 500m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 512Mi            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 1Gi              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 1000m          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> web            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">50000</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> agent          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /login              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">120</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>          <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /login              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">120</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> jenkins              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/jenkins_home          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> JAVA_OPTS              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>Duser.timezone=Asia/Shanghai      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome <span class="token comment"># 这里由于是单机部署的，所以直接就以本地路径作为存储。正式环境请使用pvc进行。</span>          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/jenkins_home  <span class="token comment"># 必须在指定节点上创建该目录，并赋予1000的权限。chpwn -R 1000 /var/jenkins_home</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort <span class="token comment"># 为了方便使用，直接以NodePort方式暴露</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> web      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">32080</span> <span class="token comment"># 指定web端口映射</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> agent      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">50000</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> agent      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">32081</span> <span class="token comment"># 指定通信端口映射，一般用不到</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>验证登录</p><p>在<code>cat /var/jenkins_home/jenkins/secrets/initialAdminPassword</code>，得到登录密码，输入<code>http://172.11.219.10:32080</code></p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/jenkins-login.png" alt="jenkins登录"></p><p><em>这里已经安装过中文插件</em></p></li><li><p>配置jenkins插件为国内源</p><ol><li><p>update site，升级站点。输入：<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/plugins1.png" alt="升级站点"></p></li><li><p>替换默认的default.json</p><p>在<code>/var/jenkins_home/jenkins/updates/default.json</code>中，</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sed -i &#39;s#updates.jenkins.io&#x2F;download#mirrors.tuna.tsinghua.edu.cn&#x2F;jenkins#g&#39; default.jsonsed -i &#39;s#www.google.com#www.baidu.com#g&#39; default.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>重启jenkins</p></li></ol></li><li><p>安装必要插件</p><ol><li><p><a href="https://plugins.jenkins.io/localization-zh-cn">Localization: Chinese (Simplified)</a></p></li><li><p><a href="https://plugins.jenkins.io/kubernetes">Kubernetes plugin</a></p></li><li><p><a href="https://plugins.jenkins.io/workflow-aggregator">Pipeline</a></p></li><li><p><a href="https://plugins.jenkins.io/git">Git plugin</a></p><p><em>安装完成插件后，重启jenkins</em></p></li></ol></li></ol><h3 id="2-jenkins集成kubernetes"><a href="#2-jenkins集成kubernetes" class="headerlink" title="2. jenkins集成kubernetes"></a>2. jenkins集成kubernetes</h3><p>老版本：在jenkins的，系统管理-&gt;系统配置-&gt;Cloud(The cloud configuration has moved to <a href="">a separate configuration page</a>）点击配置接口</p><p>新版本（当前jenkins版本）：系统管理-&gt;节点管理-&gt;Configure Clouds</p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/config1.png" alt="配置1"></p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/config2.png" alt="配置2"></p><p>这里只配置kubernetes的相关信息，并没有指定jenkins-slave的podTemplate，后续在拉取slave时使用自定义的podTemplate模板进行。</p><h3 id="3-运行自定义的podTemplate流水线"><a href="#3-运行自定义的podTemplate流水线" class="headerlink" title="3. 运行自定义的podTemplate流水线"></a>3. 运行自定义的podTemplate流水线</h3><ol><li><p>创建流水线</p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/pipeline1.png" alt="创建"></p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/pipeline2.png" alt="创建2"></p></li><li><p>编写脚本</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">podTemplate(yaml</span><span class="token punctuation">:</span> '''  <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod  <span class="token key atrule">metadata</span><span class="token punctuation">:</span>    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">spec</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">hostAliases</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 172.11.219.10        <span class="token key atrule">hostnames</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> apiserver.zt.net.cn    <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> docker        <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.182.187<span class="token punctuation">:</span>81/library/docker<span class="token punctuation">:</span>19.03.11        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> cat        <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> docker<span class="token punctuation">-</span>sock            <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/run/docker.sock      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kubectl        <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.182.187<span class="token punctuation">:</span>81/library/kubectl<span class="token punctuation">:</span>v1.19.8        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> cat        <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> docker<span class="token punctuation">-</span>sock        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/run/docker.sock''')<span class="token punctuation">&#123;</span>  node(POD_LABEL)<span class="token punctuation">&#123;</span>    stage('构建镜像')<span class="token punctuation">&#123;</span>      container('docker') <span class="token punctuation">&#123;</span>        echo '构建镜像'        sh """          docker images        """      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    stage('部署应用')<span class="token punctuation">&#123;</span>      container('kubectl') <span class="token punctuation">&#123;</span>        echo '部署应用'        sh """          kubectl get node        """      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>运行</p><p><img src="/img/%E5%9C%A8k8s%E4%B8%AD%E9%83%A8%E7%BD%B2jenkins/ok.png" alt="成功"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>kubernets</category>
      
      <category>jenkins</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jenkins</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署traefik2.4</title>
    <link href="/2023/03/10/%E9%83%A8%E7%BD%B2traefik2-4/"/>
    <url>/2023/03/10/%E9%83%A8%E7%BD%B2traefik2-4/</url>
    
    <content type="html"><![CDATA[<h2 id="在K8s部署traefik2-4"><a href="#在K8s部署traefik2-4" class="headerlink" title="在K8s部署traefik2.4"></a>在K8s部署traefik2.4</h2><blockquote><p>参考：<strong><a href="https://doc.traefik.io/traefik/getting-started/quick-start-with-kubernetes">https://doc.traefik.io/traefik/getting-started/quick-start-with-kubernetes</a></strong></p><p>kubernetes：v1.19.8</p><p>traefik：v2.4</p></blockquote><h3 id="1-部署"><a href="#1-部署" class="headerlink" title="1. 部署"></a>1. 部署</h3><ol><li><p>crd.yaml</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingressroutes.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRoute    <span class="token key atrule">plural</span><span class="token punctuation">:</span> ingressroutes    <span class="token key atrule">singular</span><span class="token punctuation">:</span> ingressroute  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> middlewares.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Middleware    <span class="token key atrule">plural</span><span class="token punctuation">:</span> middlewares    <span class="token key atrule">singular</span><span class="token punctuation">:</span> middleware  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingressroutetcps.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRouteTCP    <span class="token key atrule">plural</span><span class="token punctuation">:</span> ingressroutetcps    <span class="token key atrule">singular</span><span class="token punctuation">:</span> ingressroutetcp  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingressrouteudps.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRouteUDP    <span class="token key atrule">plural</span><span class="token punctuation">:</span> ingressrouteudps    <span class="token key atrule">singular</span><span class="token punctuation">:</span> ingressrouteudp  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> tlsoptions.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> TLSOption    <span class="token key atrule">plural</span><span class="token punctuation">:</span> tlsoptions    <span class="token key atrule">singular</span><span class="token punctuation">:</span> tlsoption  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> tlsstores.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> TLSStore    <span class="token key atrule">plural</span><span class="token punctuation">:</span> tlsstores    <span class="token key atrule">singular</span><span class="token punctuation">:</span> tlsstore  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefikservices.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> TraefikService    <span class="token key atrule">plural</span><span class="token punctuation">:</span> traefikservices    <span class="token key atrule">singular</span><span class="token punctuation">:</span> traefikservice  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiextensions.k8s.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CustomResourceDefinition<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> serverstransports.traefik.containo.us<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> traefik.containo.us  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1alpha1  <span class="token key atrule">names</span><span class="token punctuation">:</span>    <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServersTransport    <span class="token key atrule">plural</span><span class="token punctuation">:</span> serverstransports    <span class="token key atrule">singular</span><span class="token punctuation">:</span> serverstransport  <span class="token key atrule">scope</span><span class="token punctuation">:</span> Namespaced<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>rbac.yaml</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">""</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> pods      <span class="token punctuation">-</span> services      <span class="token punctuation">-</span> endpoints      <span class="token punctuation">-</span> secrets    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> extensions      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses      <span class="token punctuation">-</span> ingressclasses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> extensions    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses/status    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> traefik.containo.us    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> middlewares      <span class="token punctuation">-</span> ingressroutes      <span class="token punctuation">-</span> traefikservices      <span class="token punctuation">-</span> ingressroutetcps      <span class="token punctuation">-</span> ingressrouteudps      <span class="token punctuation">-</span> tlsoptions      <span class="token punctuation">-</span> tlsstores      <span class="token punctuation">-</span> serverstransports    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>部署traefik，实验环境为1个副本。由于没有https的证书，这里取消的https。</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> traefik<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> traefik  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> traefik      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">prometheus.io/port</span><span class="token punctuation">:</span> <span class="token string">"8082"</span>        <span class="token key atrule">prometheus.io/scrape</span><span class="token punctuation">:</span> <span class="token string">'true'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller      <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span>      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>         <span class="token key atrule">ingressproxy</span><span class="token punctuation">:</span> <span class="token string">"true"</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik          <span class="token key atrule">image</span><span class="token punctuation">:</span> traefik<span class="token punctuation">:</span>v2.4          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> KUBERNETES_SERVICE_HOST       <span class="token comment"># 手动指定k8s api,避免网络组件不稳定。</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"172.11.219.10"</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> KUBERNETES_SERVICE_PORT_HTTPS <span class="token comment"># API server端口</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"6443"</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> KUBERNETES_SERVICE_PORT       <span class="token comment"># API server端口</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"6443"</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> TZ                            <span class="token comment"># 指定时区</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"Asia/Shanghai"</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>api.insecure            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>api.dashboard <span class="token comment"># 开启控制台</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>log            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>log.level=INFO            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>accesslog            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>entrypoints.web.address=<span class="token punctuation">:</span><span class="token number">80</span>            <span class="token comment">#- --entrypoints.websecure.address=:443</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>providers.kubernetescrd            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>metrics.prometheus            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>metrics.prometheus.entrypoint=metrics            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>metrics.prometheus.addEntryPointsLabels=true            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>entryPoints.metrics.address=<span class="token punctuation">:</span><span class="token number">8082</span>            <span class="token comment">#- --certificatesresolvers.myresolver.acme.tlschallenge</span>            <span class="token comment">#- --certificatesresolvers.myresolver.acme.email=foo@you.com</span>            <span class="token comment">#- --certificatesresolvers.myresolver.acme.storage=acme.json</span>            <span class="token comment"># Please note that this is the staging Let's Encrypt server.</span>            <span class="token comment"># Once you get things working, you should remove that whole line altogether.</span>            <span class="token comment">#- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"50m"</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> <span class="token string">"50Mi"</span>            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"1000m"</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> <span class="token string">"1024Mi"</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>              <span class="token key atrule">hostPort</span><span class="token punctuation">:</span> <span class="token number">80</span>            <span class="token comment">#- name: websecure</span>            <span class="token comment">#  containerPort: 443</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> admin              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>              <span class="token key atrule">hostPort</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> traefik  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> admin    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>部署traefik的dashboard，由于没有dns在本地host中添加dns解析</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo &quot;172.11.219.10   traefik.ui&quot;  &gt;&gt; &#x2F;etc&#x2F;hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> traefik.containo.us/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRoute<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> traefik<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">routes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span> Host(`traefik.ui`)    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rule    <span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> api@internal      <span class="token key atrule">kind</span><span class="token punctuation">:</span> TraefikService<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查看dashboard</p><p><img src="/img/%E9%83%A8%E7%BD%B2traefik2-4/traefik-dashboard.png" alt="traefik的fashboard"></p></li></ol><h3 id="2-使用Middlewares"><a href="#2-使用Middlewares" class="headerlink" title="2.使用Middlewares"></a>2.使用Middlewares</h3><h4 id="1-添加基础认证，BasicAuth"><a href="#1-添加基础认证，BasicAuth" class="headerlink" title="1.添加基础认证，BasicAuth"></a>1.添加基础认证，BasicAuth</h4><blockquote><p>具体参考：<strong><a href="https://doc.traefik.io/traefik/middlewares/http/basicauth">https://doc.traefik.io/traefik/middlewares/http/basicauth</a></strong></p></blockquote><ol><li><p>为基础认证设置账密</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>secret  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token comment"># 加密串可以由： htpasswd -nb user password | openssl base64 获得</span>  <span class="token key atrule">demo1-auth</span><span class="token punctuation">:</span> dXNlcjokYXByMSRxUGlReWlTaiQxY3RpYXczWGFzWFIyb1RodmY1T08vCgo=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置middleware</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> traefik.containo.us/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Middleware<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>middle  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">basicAuth</span><span class="token punctuation">:</span>    <span class="token key atrule">secret</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>secret <span class="token comment"># 使用刚刚生成的密钥</span>    <span class="token key atrule">removeHeader</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 流量离开traefik时，移除认证，不要和后端自己的认证冲突</span>    <span class="token key atrule">headerField</span><span class="token punctuation">:</span> X<span class="token punctuation">-</span>WebAuth<span class="token punctuation">-</span>User <span class="token comment"># 指定一个变量来存储用户名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>修改路由</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> traefik.containo.us/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRoute<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>router  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">entryPoints</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> web  <span class="token key atrule">routes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rule    <span class="token key atrule">match</span><span class="token punctuation">:</span> Host(`demo.app.cn`)    <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>middle <span class="token comment"># 增加认证</span>      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default    <span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>svc      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>验证</p><p>不加用户名密码</p><p><img src="/img/%E9%83%A8%E7%BD%B2traefik2-4/noauth.png" alt="没有账密"></p><p>添加用户名密码</p><p><img src="/img/%E9%83%A8%E7%BD%B2traefik2-4/auth.png" alt="携带账密"></p></li></ol><h4 id="2-截取url"><a href="#2-截取url" class="headerlink" title="2.截取url"></a>2.截取url</h4><ol><li><p>配置middleware</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> traefik.containo.us/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Middleware<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> strip<span class="token punctuation">-</span>path  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">stripPrefix</span><span class="token punctuation">:</span>    <span class="token key atrule">prefixes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /demo1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>修改路由</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> traefik.containo.us/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressRoute<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>router  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">entryPoints</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> web  <span class="token key atrule">routes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rule    <span class="token key atrule">match</span><span class="token punctuation">:</span> Host(`demo.app.cn`) <span class="token important">&amp;&amp;</span> PathPrefix(`/demo1`)    <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> strip<span class="token punctuation">-</span>path      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default    <span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>svc      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>验证</p><p><img src="/img/%E9%83%A8%E7%BD%B2traefik2-4/stripurl.png" alt="截取url"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
      <category>traefik</category>
      
    </categories>
    
    
    <tags>
      
      <tag>traefik</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用kubeadm部署kubernetes-v1.19.8</title>
    <link href="/2023/03/09/%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2kubernetes-v1-19-8/"/>
    <url>/2023/03/09/%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2kubernetes-v1-19-8/</url>
    
    <content type="html"><![CDATA[<h2 id="使用kubeadm安装kubernetes"><a href="#使用kubeadm安装kubernetes" class="headerlink" title="使用kubeadm安装kubernetes"></a>使用kubeadm安装kubernetes</h2><h3 id="1-使用自己的kubeadm、kubelet、kubectl安装集群"><a href="#1-使用自己的kubeadm、kubelet、kubectl安装集群" class="headerlink" title="1.使用自己的kubeadm、kubelet、kubectl安装集群"></a>1.使用自己的kubeadm、kubelet、kubectl安装集群</h3><blockquote><p>安装kubernetes的版本为：v1.19.8，可参考：<strong><a href="https://kuboard.cn/install/history-k8s/install-k8s-1.19.x.html">https://kuboard.cn/install/history-k8s/install-k8s-1.19.x.html</a></strong>，做了部分优化。</p></blockquote><ol><li><p>安装docker、kubelet，在所有机器上</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sh 0install_docker_kubelet.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>在安装好docker和kubelet后，使用自己编译的kubeadm、kubelet、kubectl替换已经安装的文件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">scp kube-100.tar.gz root@x.x.x.x:&#x2F;roottar -zxvf kube-100.tar.gzcd kube-100cp kube* &#x2F;usr&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>导入镜像包</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">scp k8s-v1.19.8-images.tar.gz root@x.x.x.x:&#x2F;roottar -zxvf k8s-v1.19.8-images.tar.gzcd k8s-v1.19.8-images# 带有_all标记的为master、node节点都需要导入docker load &lt; xxx.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>初始化master节点</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sh 1init_master.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>添加工作节点</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 只在 master 节点执行,kubeadm token create --print-join-command# 获取kubeadm join 命令及参数。在node节点输入上面得到的参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置命令自带补全</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install -y bash-completionsource &#x2F;usr&#x2F;share&#x2F;bash-completion&#x2F;bash_completionecho &#39;source &lt;(kubectl completion bash)&#39; &gt;&gt;~&#x2F;.bashrcecho &#39;source &lt;(kubectl completion bash)&#39; &gt;&gt;~&#x2F;.bashrcsource ~&#x2F;.bashrckubectl completion bash &gt;&#x2F;etc&#x2F;bash_completion.d&#x2F;kubectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查看集群过期时间</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubeadm alpha certs check-expiration<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[check-expiration] Reading configuration from the cluster...[check-expiration] FYI: You can look at this config file with &#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGEDadmin.conf                 Feb 12, 2123 10:13 UTC   99y                                     noapiserver                  Feb 12, 2123 10:13 UTC   99y             ca                      noapiserver-etcd-client      Feb 12, 2123 10:13 UTC   99y             etcd-ca                 noapiserver-kubelet-client   Feb 12, 2123 10:13 UTC   99y             ca                      nocontroller-manager.conf    Feb 12, 2123 10:13 UTC   99y                                     noetcd-healthcheck-client    Feb 12, 2123 10:13 UTC   99y             etcd-ca                 noetcd-peer                  Feb 12, 2123 10:13 UTC   99y             etcd-ca                 noetcd-server                Feb 12, 2123 10:13 UTC   99y             etcd-ca                 nofront-proxy-client         Feb 12, 2123 10:13 UTC   99y             front-proxy-ca          noscheduler.conf             Feb 12, 2123 10:13 UTC   99y                                     noCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGEDca                      Feb 12, 2123 10:13 UTC   99y             noetcd-ca                 Feb 12, 2123 10:13 UTC   99y             nofront-proxy-ca          Feb 12, 2123 10:13 UTC   99y             no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>过期时间都是99年</p></li></ol><h3 id="2-安装metrics指标收集"><a href="#2-安装metrics指标收集" class="headerlink" title="2.安装metrics指标收集"></a>2.安装metrics指标收集</h3><blockquote><p>参考：<strong><a href="https://github.com/kubernetes-sigs/metrics-server">https://github.com/kubernetes-sigs/metrics-server</a></strong></p></blockquote><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server    <span class="token key atrule">rbac.authorization.k8s.io/aggregate-to-admin</span><span class="token punctuation">:</span> <span class="token string">"true"</span>    <span class="token key atrule">rbac.authorization.k8s.io/aggregate-to-edit</span><span class="token punctuation">:</span> <span class="token string">"true"</span>    <span class="token key atrule">rbac.authorization.k8s.io/aggregate-to-view</span><span class="token punctuation">:</span> <span class="token string">"true"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> system<span class="token punctuation">:</span>aggregated<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>reader<span class="token key atrule">rules</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> metrics.k8s.io  <span class="token key atrule">resources</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> pods  <span class="token punctuation">-</span> nodes  <span class="token key atrule">verbs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> list  <span class="token punctuation">-</span> watch<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> system<span class="token punctuation">:</span>metrics<span class="token punctuation">-</span>server<span class="token key atrule">rules</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">""</span>  <span class="token key atrule">resources</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> pods  <span class="token punctuation">-</span> nodes  <span class="token punctuation">-</span> nodes/stats  <span class="token punctuation">-</span> namespaces  <span class="token punctuation">-</span> configmaps  <span class="token key atrule">verbs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> list  <span class="token punctuation">-</span> watch<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>reader  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> extension<span class="token punctuation">-</span>apiserver<span class="token punctuation">-</span>authentication<span class="token punctuation">-</span>reader<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server<span class="token punctuation">:</span>system<span class="token punctuation">:</span>auth<span class="token punctuation">-</span>delegator<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> system<span class="token punctuation">:</span>auth<span class="token punctuation">-</span>delegator<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> system<span class="token punctuation">:</span>metrics<span class="token punctuation">-</span>server<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> system<span class="token punctuation">:</span>metrics<span class="token punctuation">-</span>server<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> https  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">args</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>cert<span class="token punctuation">-</span>dir=/tmp        <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secure<span class="token punctuation">-</span>port=4443        <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>kubelet<span class="token punctuation">-</span>preferred<span class="token punctuation">-</span>address<span class="token punctuation">-</span>types=InternalIP<span class="token punctuation">,</span>ExternalIP<span class="token punctuation">,</span>Hostname        <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>kubelet<span class="token punctuation">-</span>use<span class="token punctuation">-</span>node<span class="token punctuation">-</span>status<span class="token punctuation">-</span>port        <span class="token comment"># 解决，metrics-server 错误，因为它不包含任何 IP SAN。仅用于测试目的。它只是跳过问题，而不是完全解决它</span>        <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>kubelet<span class="token punctuation">-</span>insecure<span class="token punctuation">-</span>tls        <span class="token key atrule">image</span><span class="token punctuation">:</span> k8s.gcr.io/metrics<span class="token punctuation">-</span>server/metrics<span class="token punctuation">-</span>server<span class="token punctuation">:</span>v0.4.2        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">3</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /livez            <span class="token key atrule">port</span><span class="token punctuation">:</span> https            <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTPS          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">4443</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> https          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP        <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">3</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /readyz            <span class="token key atrule">port</span><span class="token punctuation">:</span> https            <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTPS          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>        <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>          <span class="token key atrule">readOnlyRootFilesystem</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">1000</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp          <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>dir      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">priorityClassName</span><span class="token punctuation">:</span> system<span class="token punctuation">-</span>cluster<span class="token punctuation">-</span>critical      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>dir<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apiregistration.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> APIService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> v1beta1.metrics.k8s.io<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">group</span><span class="token punctuation">:</span> metrics.k8s.io  <span class="token key atrule">groupPriorityMinimum</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">insecureSkipTLSVerify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">service</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system  <span class="token key atrule">version</span><span class="token punctuation">:</span> v1beta1  <span class="token key atrule">versionPriority</span><span class="token punctuation">:</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-安装dashboard，部署和访问-Kubernetes-仪表板"><a href="#3-安装dashboard，部署和访问-Kubernetes-仪表板" class="headerlink" title="3.安装dashboard，部署和访问 Kubernetes 仪表板"></a>3.安装dashboard，部署和访问 Kubernetes 仪表板</h3><blockquote><p>参考：<strong><a href="https://v1-22.docs.kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard">https://v1-22.docs.kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard</a></strong>，由于官方已经没有v1.19.8的文档了，这里参考v1.22的文档进行。</p><p>dashboard和kubernetes的对照关系表：<strong><a href="https://github.com/kubernetes/dashboard/releases">https://github.com/kubernetes/dashboard/releases</a></strong></p></blockquote><ol><li><p>生成自签证书</p><blockquote><p>通过官方的<a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml">yaml文件</a>来进行部署，这个方法存在很多问题。</p><ol><li><p>该yaml文件的地址有时候并不能访问，需要科学；</p></li><li><p>该文件指定的dashboard的镜像也需要科学才能访问；</p></li><li><p>部署的dashboard的证书过期时间有问题，导致chrome、safari等都不能访问，仅firefox可以访问。</p><p>所以需要对部署流程做调整，先创建自签证书，再用证书来部署。</p></li></ol></blockquote><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir dashboard-cert &amp;&amp; cd dashboard-cert# 生成证书请求的keyopenssl genrsa -out dashboard.key 2048# 生成证书请求，&lt;your_ip&gt;换成自己的ip或域名openssl req -new -out dashboard.csr -key dashboard.key -subj &#39;&#x2F;CN&#x3D;&lt;your_ip&gt;&#39;# 生成自签证书，指定了过期时间36500天，默认365天openssl x509 -days 36500 -req -in dashboard.csr -signkey dashboard.key -out dashboard.crt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>根据生成的证书，创建密钥</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 创建命名空间kubectl create ns kubernetes-dashboard# 创建密钥，&quot;dashboard.key&quot;、&quot;dashboard.crt&quot;是之前生成的自签证书的相关文件的路径。&quot;kubernetes-dashboard-certs&quot; 这个名称不要改kubectl create secret generic kubernetes-dashboard-certs --from-file&#x3D;dashboard.key --from-file&#x3D;dashboard.crt -n kubernetes-dashboard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建dashboard</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 在创建自定义个人证书时已经创建这个命名空间</span><span class="token comment">#apiVersion: v1</span><span class="token comment">#kind: Namespace</span><span class="token comment">#metadata:</span><span class="token comment">#  name: kubernetes-dashboard</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort <span class="token comment">#增加</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30000</span> <span class="token comment">#增加</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token comment"># 因为自动生成的证书很多浏览器无法使用，所以我们自己创建，注释掉kubernetes-dashboard-certs对象声明</span><span class="token comment">#apiVersion: v1</span><span class="token comment">#kind: Secret</span><span class="token comment">#metadata:</span><span class="token comment">#  labels:</span><span class="token comment">#    k8s-app: kubernetes-dashboard</span><span class="token comment">#  name: kubernetes-dashboard-certs</span><span class="token comment">#  namespace: kubernetes-dashboard</span><span class="token comment">#type: Opaque</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>csrf  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">csrf</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>key<span class="token punctuation">-</span>holder  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>settings  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token comment"># Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"secrets"</span><span class="token punctuation">]</span>    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"kubernetes-dashboard-key-holder"</span><span class="token punctuation">,</span> <span class="token string">"kubernetes-dashboard-certs"</span><span class="token punctuation">,</span> <span class="token string">"kubernetes-dashboard-csrf"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">]</span>    <span class="token comment"># Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"configmaps"</span><span class="token punctuation">]</span>    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"kubernetes-dashboard-settings"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>    <span class="token comment"># Allow Dashboard to get metrics.</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"services"</span><span class="token punctuation">]</span>    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"heapster"</span><span class="token punctuation">,</span> <span class="token string">"dashboard-metrics-scraper"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"proxy"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"services/proxy"</span><span class="token punctuation">]</span>    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"heapster"</span><span class="token punctuation">,</span> <span class="token string">"http:heapster:"</span><span class="token punctuation">,</span> <span class="token string">"https:heapster:"</span><span class="token punctuation">,</span> <span class="token string">"dashboard-metrics-scraper"</span><span class="token punctuation">,</span> <span class="token string">"http:dashboard-metrics-scraper"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token comment"># Allow Metrics Scraper to get metrics from the Metrics server</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"metrics.k8s.io"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">,</span> <span class="token string">"nodes"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard          <span class="token key atrule">image</span><span class="token punctuation">:</span> kubernetesui/dashboard<span class="token punctuation">:</span>v2.0.5          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>auto<span class="token punctuation">-</span>generate<span class="token punctuation">-</span>certificates            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace=kubernetes<span class="token punctuation">-</span>dashboard            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>token<span class="token punctuation">-</span>ttl=86400 <span class="token comment"># 修改为24小时，默认的过期时间太短</span>            <span class="token comment"># Uncomment the following line to manually specify Kubernetes API server Host</span>            <span class="token comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span>            <span class="token comment"># to it. Uncomment only if the default does not work.</span>            <span class="token comment"># - --apiserver-host=http://my-address:port</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>certs              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /certs              <span class="token comment"># Create on-disk volume to store exec logs</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp              <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>volume          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTPS              <span class="token key atrule">path</span><span class="token punctuation">:</span> /              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8443</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">allowPrivilegeEscalation</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>            <span class="token key atrule">readOnlyRootFilesystem</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>            <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">1001</span>            <span class="token key atrule">runAsGroup</span><span class="token punctuation">:</span> <span class="token number">2001</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>certs          <span class="token key atrule">secret</span><span class="token punctuation">:</span>            <span class="token key atrule">secretName</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">-</span>certs        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>volume          <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">"kubernetes.io/os"</span><span class="token punctuation">:</span> linux      <span class="token comment"># Comment the following tolerations if Dashboard must not be deployed on master</span>      <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>role.kubernetes.io/master          <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoSchedule<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper  <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8000</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8000</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper  <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">seccomp.security.alpha.kubernetes.io/pod</span><span class="token punctuation">:</span> <span class="token string">'runtime/default'</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>scraper          <span class="token key atrule">image</span><span class="token punctuation">:</span> kubernetesui/metrics<span class="token punctuation">-</span>scraper<span class="token punctuation">:</span>v1.0.6          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8000</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP              <span class="token key atrule">path</span><span class="token punctuation">:</span> /              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8000</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp            <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>volume          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">allowPrivilegeEscalation</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>            <span class="token key atrule">readOnlyRootFilesystem</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>            <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">1001</span>            <span class="token key atrule">runAsGroup</span><span class="token punctuation">:</span> <span class="token number">2001</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">"kubernetes.io/os"</span><span class="token punctuation">:</span> linux      <span class="token comment"># Comment the following tolerations if Dashboard must not be deployed on master</span>      <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>role.kubernetes.io/master          <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoSchedule      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp<span class="token punctuation">-</span>volume          <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建管理员，并绑定集群管理角色</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>admin  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>admin<span class="token punctuation">-</span>bind<span class="token punctuation">-</span>cluster<span class="token punctuation">-</span>role  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>admin<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> dashboard<span class="token punctuation">-</span>admin  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>获取登录密钥</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 把&quot;token&quot;后面那一串复制到dashboard登录kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep dashboard-admin | awk &#39;&#123;print $1&#125;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>进行登录</p><p><img src="/img/%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2kubernetes-v1-19-8/login.png" alt="login"></p><p><img src="/img/%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2kubernetes-v1-19-8/home.png" alt="home"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
      <tag>kubeadm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>涛思2.6集群安装</title>
    <link href="/2023/02/14/%E6%B6%9B%E6%80%9D2-6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2023/02/14/%E6%B6%9B%E6%80%9D2-6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="涛思2-6集群安装"><a href="#涛思2-6集群安装" class="headerlink" title="涛思2.6集群安装"></a>涛思2.6集群安装</h2><h3 id="1-机器环境"><a href="#1-机器环境" class="headerlink" title="1.机器环境"></a>1.机器环境</h3><table><thead><tr><th>节点/FQDN</th><th>角色</th><th>地址</th><th>备注</th></tr></thead><tbody><tr><td>hmts1</td><td>mnode</td><td>172.11.219.121</td><td></td></tr><tr><td>hmts2</td><td>vnode</td><td>172.11.219.122</td><td></td></tr><tr><td>hmts3</td><td>vnode</td><td>172.11.219.123</td><td></td></tr></tbody></table><h3 id="2-准备安装目录"><a href="#2-准备安装目录" class="headerlink" title="2.准备安装目录"></a>2.准备安装目录</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;home&#x2F;data&#x2F;taos&#x2F;&#123;data,core,soft,tmp,dump&#125;chmod 777 &#x2F;home&#x2F;data&#x2F;taos&#x2F;tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="3-配置FQDN"><a href="#3-配置FQDN" class="headerlink" title="3.配置FQDN"></a>3.配置FQDN</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo &#39;172.11.219.121  hmts1&#39; &gt;&gt; &#x2F;etc&#x2F;hostsecho &#39;172.11.219.122  hmts2&#39; &gt;&gt; &#x2F;etc&#x2F;hostsecho &#39;172.11.219.123  hmts3&#39; &gt;&gt; &#x2F;etc&#x2F;hosts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="4-配置NTP"><a href="#4-配置NTP" class="headerlink" title="4.配置NTP"></a>4.配置NTP</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">ntpdate X.X.X.X<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="5-安装"><a href="#5-安装" class="headerlink" title="5.安装"></a>5.安装</h3><h4 id="5-1-配置taos-cnf"><a href="#5-1-配置taos-cnf" class="headerlink" title="5.1 配置taos.cnf"></a>5.1 配置taos.cnf</h4><table><thead><tr><th><strong>配置参数名称</strong></th><th><strong>含义</strong></th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>firstEp</td><td>每个数据节点首次启动后连接的第一个数据节点</td><td></td></tr><tr><td>fqdn</td><td>必须配置为本数据节点的 FQDN</td><td></td></tr><tr><td>serverPort</td><td>配置本数据节点的端口号，缺省是 6030</td><td></td></tr><tr><td>arbitrator</td><td>副本数为偶数的时候，需要配置</td><td></td></tr><tr><td>numOfMnodes</td><td>系统中管理节点个数</td><td></td></tr><tr><td>mnodeEqualVnodeNum</td><td>一个 mnode 等同于 vnode 消耗的个数</td><td></td></tr><tr><td>offlineThreshold</td><td>dnode 离线阈值，超过该时间将导致 Dnode 离线</td><td></td></tr><tr><td>statusInterval</td><td>dnode 向 mnode 报告状态时长</td><td></td></tr><tr><td>arbitrator</td><td>系统中裁决器的 End Point</td><td></td></tr><tr><td>timezone</td><td>时区</td><td></td></tr><tr><td>balance</td><td>是否启动负载均衡</td><td></td></tr><tr><td>maxTablesPerVnode</td><td>每个 vnode 中能够创建的最大表个数</td><td></td></tr><tr><td>maxVgroupsPerDb</td><td>每个 DB 中能够使用的最大 vgroup 个数</td><td></td></tr></tbody></table><p>一定要修改的参数是 firstEp 和 fqdn。在每个数据节点，firstEp 需全部配置成一样，但 fqdn 一定要配置成其所在数据节点的值。其他参数可不做任何修改，除非你很清楚为什么要修改。</p><p><strong>整合：</strong></p><ol><li>创建涛思配置文件</li></ol><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">firstEp</span> <span class="token attr-value">                  hmts1:6030</span><span class="token attr-name">fqdn</span> <span class="token attr-value">                     hmts1</span><span class="token attr-name">numOfThreadsPerCore</span> <span class="token attr-value">      2.0</span><span class="token attr-name">ratioOfQueryCores</span> <span class="token attr-value">        2.0</span><span class="token attr-name">numOfCommitThreads</span> <span class="token attr-value">       4.0</span><span class="token attr-name">numOfMnodes</span> <span class="token attr-value">              3</span><span class="token attr-name">dataDir</span> <span class="token attr-value">                  /home/data/taos/data</span><span class="token attr-name">logDir</span> <span class="token attr-value">                   /home/data/taos/log</span><span class="token attr-name">tempDir</span> <span class="token attr-value">                  /home/data/taos/tmp</span><span class="token attr-name">balance</span> <span class="token attr-value">                  0</span><span class="token attr-name">keepColumnName</span> <span class="token attr-value">           1</span><span class="token attr-name">timezone</span> <span class="token attr-value">                 Asia/Shanghai (CST, +0800)</span><span class="token attr-name">locale</span> <span class="token attr-value">                   en_US.UTF-8</span><span class="token attr-name">charset</span> <span class="token attr-value">                  UTF-8</span><span class="token attr-name">maxShellConns</span> <span class="token attr-value">            100000</span><span class="token attr-name">maxConnections</span> <span class="token attr-value">           100000</span><span class="token attr-name">rpcForceTcp</span> <span class="token attr-value">              1</span><span class="token attr-name">monitor</span> <span class="token attr-value">                  1</span><span class="token attr-name">logKeepDays</span> <span class="token attr-value">              -1</span><span class="token attr-name">debugFlag</span> <span class="token attr-value">                131</span><span class="token attr-name">cDebugFlag</span> <span class="token attr-value">               131</span><span class="token attr-name">qDebugFlag</span> <span class="token attr-value">               131</span><span class="token attr-name">rpcDebugFlag</span> <span class="token attr-value">             131</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="2"><li>修改taosadapter.toml</li></ol><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties">[pool]<span class="token attr-name">maxConnect</span> <span class="token punctuation">=</span> <span class="token attr-value">128</span><span class="token attr-name">maxIdle</span> <span class="token punctuation">=</span> <span class="token attr-value">128</span>[log]<span class="token attr-name">path</span> <span class="token punctuation">=</span> <span class="token attr-value">"/home/data/taos/log"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="5-2-启动数据库-启动第一个数据节点"><a href="#5-2-启动数据库-启动第一个数据节点" class="headerlink" title="5.2 启动数据库[启动第一个数据节点]"></a>5.2 启动数据库<font color="red">[启动第一个数据节点]</font></h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 启动systemctl start taosd# 检查服务状态 systemctl status taosd# 如果使用taosAdapter模块，启动命令如下systemctl start taosadapter# 检查服务状态systemctl status taosadapter# 设置开机自启动systemctl enable taosadapter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><p>taos支持水平动态扩展，单个 taos 节点即可视为 1 个节点的 taos 集群。</p><ol><li><p>启动第一个数据节点，见启动数据库。</p></li><li><p>验证</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@hmts1 taos]# taosWelcome to the TDengine Command Line Interface from Linux, Client Version:2.6.0.34Copyright (c) 2022 by TAOS Data, Inc. All rights reserved.   ******************************  Tab Completion  **********************************   *   The TDengine CLI supports tab completion for a variety of items,             *   *   including database names, table names, function names and keywords.          *   *   The full list of shortcut keys is as follows:                                *   *    [ TAB ]        ......  complete the current word                            *   *                   ......  if used on a blank line, display all valid commands  *   *    [ Ctrl + A ]   ......  move cursor to the st[A]rt of the line               *   *    [ Ctrl + E ]   ......  move cursor to the [E]nd of the line                 *   *    [ Ctrl + W ]   ......  move cursor to the middle of the line                *   *    [ Ctrl + L ]   ......  clear the entire screen                              *   *    [ Ctrl + K ]   ......  clear the screen after the cursor                    *   *    [ Ctrl + U ]   ......  clear the screen before the cursor                   *   **********************************************************************************taos&gt; show dnodes;   id   |           end_point            | vnodes | cores  |   status   | role  |       create_time       |      offline reason      |&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;      1 | hmts1:6030                     |      1 |      2 | ready      | any   | 2023-02-14 13:19:38.286 |                          |Query OK, 1 row(s) in set (0.000607s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>上述命令里，可以看到刚启动的数据节点的 End Point 是：hmts1:6030，就是这个新集群的 firstEp。</p><h3 id="启动后续节点"><a href="#启动后续节点" class="headerlink" title="启动后续节点"></a>启动后续节点</h3><p>将后续的数据节点添加到现有集群，具体有以下几步：</p><ol><li><p>按照上述方法，在其他节点安装 taos 服务端。</p></li><li><p>修改配置文件，taos.cnf。主要修改fqdn为当前节点的hostname，其他不变。</p></li><li><p>修改配置文件，taosadapter.toml。</p></li><li><p>配置完成后，分别在 2 和 3 节点启动 taosd 服务。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 启动systemctl start taosd# 检查服务状态 systemctl status taosd# 如果使用taosAdapter模块，启动命令如下systemctl start taosadapter# 检查服务状态systemctl status taosadapter# 设置开机自启动systemctl enable taosadapter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>在第一个数据节点，使用 CLI 程序 taos，登录进 TDengine 系统，执行命令：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">create dnode &quot;hmts2:6030&quot;;create dnode &quot;hmts3:6030&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>验证</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">taos&gt; show dnodes;   id   |           end_point            | vnodes | cores  |   status   | role  |       create_time       |      offline reason      |&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;      1 | hmts1:6030                     |      1 |      2 | ready      | any   | 2023-02-14 13:19:38.286 |                          |      2 | hmts2:6030                     |      0 |      2 | ready      | any   | 2023-02-14 13:51:17.067 |                          |      3 | hmts3:6030                     |      0 |      2 | ready      | any   | 2023-02-14 13:51:22.012 |                          |Query OK, 3 row(s) in set (0.000479s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>taos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>taos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>n2n组网</title>
    <link href="/2023/01/18/n2n%E7%BB%84%E7%BD%91/"/>
    <url>/2023/01/18/n2n%E7%BB%84%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<h1 id="n2n组网"><a href="#n2n组网" class="headerlink" title="n2n组网"></a>n2n组网</h1><h2 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h2><p>n2n是轻量的远程访问软件，可以轻松搭建虚拟网络，实现点对点通讯。</p><p><strong>目前最常用的版本</strong>，也是官方N2N项目重启后，在各路大神的贡献下，一直在维护并不断完善的版本</p><p>项目：<a href="https://github.com/ntop/n2n">https://github.com/ntop/n2n</a></p><p>为了开始使用 n2n，需要两个元素：</p><ol><li>超级节点：它允许边缘节点宣布和发现其他节点。它必须具有可在 Internet 上公开访问的端口</li><li>边缘节点：将成为虚拟网络一部分的节点</li></ol><p>注意：如果可能，n2n 会尝试通过 udp 在边缘节点之间建立直接的对等连接。当这不可能时（通常是由于特殊的 NAT 设备），超级节点也用于中继数据包。</p><blockquote><p>个人喜欢的一个博客：<a href="https://bugxia.com/525.html">https://bugxia.com/525.html</a></p></blockquote><h2 id="手动编译"><a href="#手动编译" class="headerlink" title="手动编译"></a>手动编译</h2><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 以下命令在centos7.9上进行yum install -y autoconf automake libtoolwget https:&#x2F;&#x2F;github.com&#x2F;ntop&#x2F;n2n&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;3.0.tar.gztar -zxvf n2n-3.0.tar.gzcd n2n-3.0.&#x2F;autogen.sh.&#x2F;configuremake# 可选make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># edgeWelcome to n2n v.3.0.0 for x86_64-unknown-linux-gnuBuilt on Jan 18 2023 16:14:27Copyright 2007-2021 - ntop.org and contributors general usage:  edge &lt;config file&gt; (see edge.conf)            or   edge  -c &lt;community name&gt; 指定社区名称 -l &lt;supernode host:port&gt; 指定超级节点主机和端口                      [-p [&lt;local bind ip address 本地绑定ip地址&gt;:]&lt;local port&gt;]                      [-T &lt;type of service&gt;] [-D] options for under-   [-i &lt;registration interval 注册间隔&gt;] [-L &lt;registration ttl&gt;] lying connection     [-k &lt;key&gt;] [-A&lt;cipher&gt;] [-H] [-z&lt;compression 压缩&gt;]                      [-e &lt;preferred local IP address 首选本地 IP 地址&gt;] [-S&lt;level of solitude 孤独的程度&gt;]                      [--select-rtt] tap device and       [-a [static:|dhcp:]&lt;tap IP address&gt;[&#x2F;&lt;cidr suffix&gt;]] overlay network      [-m &lt;tap MAC address&gt;] [-d &lt;tap device name&gt;] configuration        [-M &lt;tap MTU&gt;] [-r] [-E] [-I &lt;edge description&gt;]                      [-J &lt;password&gt;] [-P &lt;public key&gt;] [-R &lt;rule string&gt;] local options        [-f] [-t &lt;management port 管理端口&gt;] [--management-password &lt;pw&gt;]                      [-v] [-n &lt;cidr:gateway&gt;]                      [-u &lt;numerical user id&gt;] [-g &lt;numerical group id&gt;] environment          N2N_KEY         instead of [-k &lt;key&gt;] variables            N2N_COMMUNITY   instead of -c &lt;community&gt;                      N2N_PASSWORD    instead of [-J &lt;password&gt;] meaning of the       [-D]  enable PMTU discovery flag options         [-H]  enable header encryption                      [-r]  enable packet forwarding through n2n community                      [-E]  accept multicast MAC addresses            [--select-rtt]  select supernode by round trip time                      [-f]  do not fork but run in foreground                      [-v]  make more verbose, repeat as required  -h    shows this quick reference including all available options --help gives a detailed parameter description   man  files for n2n, edge, and superndode contain in-depth information      # supernodeWelcome to n2n v.3.0.0 for x86_64-unknown-linux-gnuBuilt on Jan 18 2023 16:14:27Copyright 2007-2021 - ntop.org and contributors general usage:  supernode &lt;config file&gt; (see supernode.conf)            or   supernode [-p &lt;local port&gt;]                           [-F &lt;federation name&gt;] options for under-        [-l &lt;supernode host:port&gt;] lying connection          [-M] [-V &lt;version text&gt;] overlay network           [-c &lt;community list file&gt;] configuration             [-a &lt;net ip&gt;-&lt;net ip&gt;&#x2F;&lt;cidr suffix&gt;] local options             [-f] [-t &lt;management port&gt;]                           [--management-password &lt;pw&gt;] [-v]                           [-u &lt;numerical user id&gt;][-g &lt;numerical group id&gt;] meaning of the            [-M]  disable MAC and IP address spoofing protection flag options              [-f]  do not fork but run in foreground                           [-v]  make more verbose, repeat as required technically, all parameters are optional, but the supernode executable requires at least one parameter to run, .e.g. -v or -f, as otherwise a short help text is displayed  -h    shows this quick reference including all available options --help gives a detailed parameter description   man  files for n2n, edge, and superndode contain in-depth information<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="快速设置"><a href="#快速设置" class="headerlink" title="快速设置"></a>快速设置</h2><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 开启超级节点supernode -p 12345# 在12345端口上开启upd# 边缘节点edge -c ntunet -k 112233 -a 10.0.1.1 -f -l 159.138.147.194:12345edge -c ntunet -k 112233 -a 10.0.1.2 -f -l 159.138.147.194:12345edge -c ntunet -k 112233 -a 10.0.1.3 -f -l 159.138.147.194:12345# -c 定义社区名称# -k 定义密码# -a 定义虚拟网络IP# -f 前端运行# -l 超级节点host:port# 验证在两台机器上互ping<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>实验机器说明</p><table><thead><tr><th>名称</th><th>ip地址</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>超级节点</td><td>192.168.0.210</td><td>华为云ECS服务器，拥有公网IP</td><td></td></tr><tr><td>边缘节点1</td><td>172.11.219.100</td><td>电脑1VM中创建的虚拟机</td><td>连接公司内网</td></tr><tr><td>边缘节点2</td><td>172.12.220.100</td><td>电脑2VM中创建的虚拟机</td><td>连接手机热点wifi</td></tr></tbody></table><p><img src="/img/n2n%E7%BB%84%E7%BD%91/ip1.png" alt="节点1ip"></p><p><img src="/img/n2n%E7%BB%84%E7%BD%91/ip2.png" alt="节点2ip"></p><p><img src="/img/n2n%E7%BB%84%E7%BD%91/ping1.png" alt="节点1ping节点2情况"></p><p><img src="/img/n2n%E7%BB%84%E7%BD%91/ping2.png" alt="节点2ping节点1情况"></p><blockquote><p>目前可以实现ping通边缘节点，但是无法直接ping内网ip，需要设置静态路由。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>n2n</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iptables防火墙</title>
    <link href="/2023/01/18/iptables%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <url>/2023/01/18/iptables%E9%98%B2%E7%81%AB%E5%A2%99/</url>
    
    <content type="html"><![CDATA[<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><h2 id="简易流程"><a href="#简易流程" class="headerlink" title="简易流程"></a>简易流程</h2><p><img src="/img/iptables%E9%98%B2%E7%81%AB%E5%A2%99/iptables%E7%AE%80%E5%8D%95%E6%B5%81%E7%A8%8B.png" alt="iptables简单流程"></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">iptables v1.6.0Usage: iptables -[A] chain rule-specification [options] #添加规则       iptables -I chain [rulenum] rule-specification [options] #插入规则到链       iptables -D chain rulenum [options] #根据规则号删除       iptables -[FZ] [chain] [options] # 清除规则计数器       iptables -[X] chain # 删除用户自定义链       iptables -P chain target [options] #针对链设置默认规则       iptables -h (print this help information) #帮助Commands:Either long or short options are allowed.  --append  -A chain            Append to chain #添加规则到链  --delete  -D chain            Delete matching rule from chain #从链删除规则  --delete  -D chain rulenum    #根据规则号删除                                Delete rule rulenum (1 &#x3D; first) from chain  --insert  -I chain [rulenum]                                Insert in chain as rulenum (default 1&#x3D;first) #插入规则，默认到第1条    --list    -L [chain [rulenum]]                                List the rules in a chain or all chains #显示规则列表  --flush   -F [chain]          Delete all rules in  chain or all chains #清空规则  --zero    -Z [chain [rulenum]]                                Zero counters in chain or all chains #计数器清零  --new     -N chain            Create a new user-defined chain #创建自定义链  --delete-chain            -X [chain]          Delete a user-defined chain #删除自定义链  --policy  -P chain target                                Change policy on chain to target #修改默认规则Options:[!] --protocol  -p proto        protocol: by number or name, eg. &#96;tcp&#96; #针对协议过滤，[!] --source    -s address[&#x2F;mask][...]                                source specification #基于源地址[!] --destination -d address[&#x2F;mask][...]                                destination specification #基于目的地址[!] --in-interface -i input name[+]                                network interface name ([+] for wildcard) #指定进入接口，即网卡 --jump -j target                                target for rule (may load target extension) #跳转，即怎么处理。                                # 一般有                                 # ACCEPT：允许数据通过                                # DROP：直接丢弃数据包，不给任何回应                                # REJECT：拒绝数据包通过，必要时回给数据包发一个响应信息                                # SNAT：源地址转换，解决内网用户用同一个公网地址上网问题                                # MASQUERADE：SNAT的一种特殊形式，适用于动态的、临时汇编的IP                                # DNAT：目标地址转换                                # REDIRECT：在本机做端口映射  --numeric     -n              numeric output of addresses and ports #数字输出地址和端口[!] --out-interface -o output name[+]                                network interface name ([+] for wildcard) #指定出去的接口  --table       -t table        table to manipulate (default: &#96;filter&#96;) #指定表  --line-numbers                print line numbers when listing #显示规则号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># -t，针对表，默认FILTER表# -p，针对协议，默认all，tcp、udp、icmp# --dport，目的端口# --sport，源端口# -j，对规则的具体处理方法，ACCEPT 接收、DROP 丢弃、REJECT 拒绝、SNAT 源目的地址转换、DNAT 目的地址转换# -i，进入的网卡# -o，出去的网卡# 禁止22端口iptables -t filter -A INPUT -p tcp --dport 22 -j DROP# 禁止对10.0.0.1的访问iptable -I INPUT -p tcp -s 10.0.0.1 -i eth0 -j DROP# 查看网络连接数netstat -an|awk &#39;&#x2F;^tcp&#x2F;&#39;|grep -i est|wc -lnetstat -an|awk &#39;&#x2F;^tcp&#x2F;&#39;|grep -i est|awk -F &quot;[: ]+&quot; &#39;&#123;print $6&#125;&#39;|sort|uniq -c|head -10# 匹配端口范围iptables -I INPUT -p tcp -m multiport --dport 80,3306,9000 -j DROPiptables -I INPUT -p tcp --dport 23:80 -j DROP # 从23到80端口，全部封掉# 禁pingiptables -A INPUT -p icmp --icmp-type 8 -j DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="企业防火墙（案例）"><a href="#企业防火墙（案例）" class="headerlink" title="企业防火墙（案例）"></a>企业防火墙（案例）</h2><ol><li><p>两种思想，针对默认规则而言</p><p>逛公园：黑名单</p><ol><li>默认规则总是允许</li><li>看谁不顺眼就禁止</li></ol><p>看电影：白名单</p><ol><li>默认规则总是不允许，更安全</li><li>看谁顺眼就通过</li></ol></li></ol><p>部署主机防火墙，清一色的看电影模式。部署企业网关模式一般使用逛公园模式。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 清空规则iptables -Fiptables -Xiptables -Z# 允许自己网段iptables -A INPUT -s 10.0.0.0&#x2F;24 -j ACCEPTiptables -AINPUT -p tcp -s 10.0.0.1&#x2F;32 --dport 22 -j ACCEPT # 工作中一般需要指定源地址# 设置默认规则iptables -P INPUT DROPiptables -P FORWARD DROP# 设置其他允许iptables -A INPUT -i lo -j ACCEPTiptables -A INPUT -p tcp -m multiport 80,443 -j ACCEPTiptables -A INPUT -s 192.168.0.0&#x2F;16 -j ACCEPTiptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT# 查看规则iptables -nL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="局域网共享上网"><a href="#局域网共享上网" class="headerlink" title="局域网共享上网"></a>局域网共享上网</h2><p>前期准备：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 网关上开启路由转发功能echo &quot;net.ipv4.ip_forward &#x3D; 1&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.confsysctl -piptables -P FORWARD ACCEPTiptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -t nat -P PREROUTING ACCEPTiptables -t nat -P POSTROUTING ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li><p>适合于有固定外网地址</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 类似于路由器的NAT命令iptables -t nat -A POSTROUTING -o eth0 -s 172.16.1.0&#x2F;24 -j SNAT --to-source 10.0.0.8# -s 172.16.1.0&#x2F;24 是内网的网段# -o eth0是网关的外网卡接口# -j SNAT --to-source 10.0.0.8 网关的外网卡地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>适合变化的IP</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">iptables -t nat -A POSTROUTING -s 172.16.1.0&#x2F;24 -j MASQUERADE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h2 id="其他案例"><a href="#其他案例" class="headerlink" title="其他案例"></a>其他案例</h2><ol><li><p>将网关的9000端口映射到内网服务器的22端口</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">iptables -t nat -A PREROUTING -p tcp -d 10.0.0.1 --dport 9000 -j DNAT --to-destination 172.16.1.1:22<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>IP一对一映射，DMZ</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">iptables -t nat -I PREROUTING -d 10.0.0.81 -j DNAT --to-destionation 172.16.1.51iptables -t nat -I POSTROUTING -s 172.16.1.51 -o eth0 -j SNAT --to-source 10.0.0.81<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>映射多个外网IP上网</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 方式1iptables -t nat -A POSTROUTING -s 10.0.1.0&#x2F;255.255.240.0 -o eth0 -j SNAT --to-source 124.42.60.11-124.42.60.16# 方法2iptables -t nat -A POSTROUTING -s 10.0.1.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.11iptables -t nat -A POSTROUTING -s 10.0.2.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.12iptables -t nat -A POSTROUTING -s 10.0.3.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.13iptables -t nat -A POSTROUTING -s 10.0.4.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.14iptables -t nat -A POSTROUTING -s 10.0.5.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.15iptables -t nat -A POSTROUTING -s 10.0.6.0&#x2F;22 -o eth0 -j SNAT --to-source 124.42.60.16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="扩充"><a href="#扩充" class="headerlink" title="扩充"></a>扩充</h2><p>Linux下抓包工具<code>tcpdump</code></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 常用选项-i # 监听哪个网卡-n # 不把ip解析成主机名-nn # 不把端口解析成应用层协议-c # 指定抓包数量-v # 输出稍微详细的信息-vv # 输出详细的信息-S # 不把随机序列和确认序列解析成绝对值-w # 把流量保持到文件中，文件中的信息无法查看-r # 读取文件中的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iptables</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql主主搭建</title>
    <link href="/2022/11/11/mysql%E4%B8%BB%E4%B8%BB%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/11/11/mysql%E4%B8%BB%E4%B8%BB%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="mysql主主说明"><a href="#mysql主主说明" class="headerlink" title="mysql主主说明"></a>mysql主主说明</h2><p>在企业中，数据库高可用一直是企业的重中之重，中小企业很多都是使用mysql主从方案，一主多从，读写分离等，但是单主存在单点故障，从库切换成主库需要作改动。因此，如果是双主或者多主，就会增加mysql入口，增加高可用。不过多主需要考虑自增长ID问题，这个需要特别设置配置文件，比如双主，可以使用奇偶，总之，主之间设置自增长ID相互不冲突就能完美解决自增长ID冲突问题。</p><blockquote><p>环境前提：</p><ol><li><p>CentOS 6.9 64位 2台：masterA（172.11.219.103），masterB（172.11.219.104）</p></li><li><p>Mysql5.7.40版本</p></li></ol></blockquote><h3 id="1-安装mysql"><a href="#1-安装mysql" class="headerlink" title="1.安装mysql"></a>1.安装mysql</h3><p>按照以前的安装方法安装，详情见《<a href="https://ntu820.gitee.io/2022/03/31/mysql%E5%AE%89%E8%A3%85/">在linux上安装mysql</a>》</p><h3 id="2-配置mysql"><a href="#2-配置mysql" class="headerlink" title="2. 配置mysql"></a>2. 配置mysql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;my&#x2F;conf[mysqld]port                          &#x3D;3306datadir                       &#x3D;&#x2F;var&#x2F;lib&#x2F;mysqlsocket                        &#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.socklog-error                     &#x3D;&#x2F;var&#x2F;log&#x2F;mysqld.logpid-file                      &#x3D;&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pidsymbolic-links                &#x3D;0sql_mode                      &#x3D;STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTIONcharacter-set-server          &#x3D;utf8collation-server              &#x3D;utf8_general_cilower_case_table_names        &#x3D;1innodb_temp_data_file_path    &#x3D;ibtmp1:12M:autoextend:max:1G  # 12M代表文件初始大小，1G代表最大sizemax_connections               &#x3D;300log-bin                       &#x3D;mysql-binbinlog-format                 &#x3D;Rowbinlog_cache_size             &#x3D;4Mmax_binlog_cache_size         &#x3D;512Mmax_binlog_size               &#x3D;512Mexpire_logs_days              &#x3D;7  # log保留时间server-id                     &#x3D;1  # 服务ID，不能重复auto-increment-offset         &#x3D;1  # 从哪个数字开始auto-increment-increment      &#x3D;2  # 每次增长的量，一般有几台数据库同步，写几# 不需要同步的库binlog-ignore-db              &#x3D;mysqlbinlog-ignore-db              &#x3D;sysbinlog-ignore-db              &#x3D;information_schemabinlog-ignore-db              &#x3D;performance_schema# 不需要同步的表，一个表占1行replicate-wild-ignore-table   &#x3D;escdb.qrtz_fired_triggersreplicate-wild-ignore-table   &#x3D;escdb.pr_login_userreplicate-wild-ignore-table   &#x3D;escdb.serviceticketreplicate-wild-ignore-table   &#x3D;escdb.pr_scancode_loginreplicate-wild-ignore-table   &#x3D;escdb.ticketgrantingticketbinlog-do-db                  &#x3D;escdbreplicate-do-db               &#x3D;escdb# 跳过SQL错误slave-skip-errors             &#x3D;1032<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>特别参数说明：</p><p>A数据库服务</p><p>server-id                    =1  # 服务ID，不能重复<br>auto-increment-offset         =1  # 从哪个数字开始<br>auto-increment-increment      =2  # 每次增长的量，一般有几台数据库同步，写几</p><p>B数据库服务</p><p>server-id                    =2  # 服务ID，不能重复<br>auto-increment-offset         =2  # 从哪个数字开始<br>auto-increment-increment      =2  # 每次增长的量，一般有几台数据库同步，写几</p></blockquote><h3 id="3-开启mysql主主"><a href="#3-开启mysql主主" class="headerlink" title="3. 开启mysql主主"></a>3. 开启mysql主主</h3><ol><li><p>添加主从同步账户</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在masterA上mysql&gt; grant replication slave on *.* to &#39;repl&#39;@&#39;172.11.219.104&#39; identified by &#39;123456&#39;;mysql&gt; flush privileges;# 在masterB上mysql&gt; grant replication slave on *.* to &#39;repl&#39;@&#39;172.11.219.103&#39; identified by &#39;123456&#39;;mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查看主库状态</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在masterA上mysql&gt; show master status;+------------------+----------+--------------+-------------------------------------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                                | Executed_Gtid_Set |+------------------+----------+--------------+-------------------------------------------------+-------------------+| mysql-bin.000004 |      451 | escdb        | mysql,sys,information_schema,performance_schema |                   |+------------------+----------+--------------+-------------------------------------------------+-------------------+1 row in set (0.00 sec)# 在masterB上mysql&gt; show master status;+------------------+----------+--------------+-------------------------------------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                                | Executed_Gtid_Set |+------------------+----------+--------------+-------------------------------------------------+-------------------+| mysql-bin.000003 |      448 | escdb        | mysql,sys,information_schema,performance_schema |                   |+------------------+----------+--------------+-------------------------------------------------+-------------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置同步信息</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在masterA上mysql&gt; change master to master_host&#x3D;&#39;172.11.219.104&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;123456&#39;,master_log_file&#x3D;&#39;mysql-bin.000003&#39;,master_log_pos&#x3D;448; mysql&gt; start slave;mysql&gt; show slave status\G;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>出现如下字样即为成功</p><p>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在masterB上#本人是测试环境，可以保证没数据写入，否则需要的步骤是：先masterA锁表--&gt;masterA备份数据--&gt;masterA解锁表 --&gt;masterB导入数据--&gt;masterB设置主从--&gt;查看主从mysql&gt; change master to master_host&#x3D;&#39;172.11.219.103&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;123456&#39;,master_log_file&#x3D;&#39;mysql-bin.000004&#39;,master_log_pos&#x3D;451;start slave;mysql&gt; show slave status\G;# 成功与否，与上述步骤一致<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>开启GTID功能</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在masterA、masterB分别执行mysql&gt; stop slave;Query OK, 0 rows affected (0.00 sec)mysql&gt; change master to MASTER_AUTO_POSITION&#x3D;1;Query OK, 0 rows affected (0.01 sec)mysql&gt; start slave;Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h2 id="使用GTID进行主主同步。"><a href="#使用GTID进行主主同步。" class="headerlink" title="使用GTID进行主主同步。"></a>使用GTID进行主主同步。</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><p>GTID，全称Global transaction identifiers，也称之为全局事务ID。MySQL-5.6.2开始支持，MySQL-5.6.10后完善，GTID 分成两部分，一部分是服务的UUid,UUID保存在mysql数据目录的auto.cnf文件中,<br>这是一个非常重要的文件，不能删除，这一部分是不会变的。下面是一个uuid的值举例：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@dev01 mysql] cat auto.cnf[auto]server-uuid&#x3D;ac1ebad0-ef76-11e7-872b-080027a03bb6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>另外一部分就是事务ID了，随着事务的增加，值依次递增。也就是说，GTID实际上是由UUID+TID组成的。其中UUID是一个MySQL实例的唯一标识。TID代表了该实例上已经提交的事务数量。如下所示为一个GTID的例子：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">3db33b36-0e51-409f-a61d-c99756e90155:1-14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="2-工作原理"><a href="#2-工作原理" class="headerlink" title="2.工作原理"></a>2.工作原理</h3><ol><li>master更新数据时，会在事务前产生GTID，一同记录到binlog日志中。</li><li>slave端的i/o 线程将变更的binlog，写入到本地的relay log中。</li><li>sql线程从relay log中获取GTID，然后对比slave端的binlog是否有记录。</li><li>如果有记录，说明该GTID的事务已经执行，slave会忽略。</li><li>如果没有记录，slave就会从relay log中执行该GTID的事务，并记录到binlog。</li><li>在解析过程中会判断是否有主键，如果没有就用二级索引，如果没有就用全部扫描。</li></ol><h3 id="3-优缺点"><a href="#3-优缺点" class="headerlink" title="3.优缺点"></a>3.优缺点</h3><table><thead><tr><th>优点</th><th>缺点</th><th>备注</th></tr></thead><tbody><tr><td>一个事务对应一个唯一GTID，一个GTID在一个服务器上只会执行一次</td><td>不支持非事务引擎</td><td></td></tr><tr><td>GTID是用来代替传统复制的方法，GTID复制与普通复制模式的最大不同就是不需要指定二进制文件名和位置</td><td>不支持create table … select 语句复制(主库直接报错)</td><td>会生成两个sql，一个是DDL创建表SQL，一个是insert into 插入数据的sql。<br/>由于DDL会导致自动提交，所以这个sql至少需要两个GTID，但是GTID模式下，只能给这个sql生成一个GTID</td></tr><tr><td>减少手工干预和降低服务故障时间，当主机挂了之后通过软件从众多的备机中提升一台备机为主机</td><td>不允许一个SQL同时更新一个事务引擎表和非事务引擎表</td><td></td></tr><tr><td></td><td>开启GTID需要重启（5.7除外）</td><td></td></tr><tr><td></td><td>对于create temporary table 和 drop temporary table语句不支持</td><td></td></tr><tr><td></td><td>不支持sql_slave_skip_counter</td><td></td></tr></tbody></table><h3 id="4-实战，配置GTID主主"><a href="#4-实战，配置GTID主主" class="headerlink" title="4.实战，配置GTID主主"></a>4.实战，配置GTID主主</h3><ol><li><p>在数据库A、B进行配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;my.cnf[mysql]default-character-set&#x3D;utf8socket&#x3D;&#x2F;tmp&#x2F;mysql.sock[mysqld]port&#x3D;3306socket&#x3D;&#x2F;tmp&#x2F;mysql.sockbasedir&#x3D;&#x2F;usr&#x2F;local&#x2F;soft&#x2F;mysqldatadir&#x3D;&#x2F;usr&#x2F;local&#x2F;soft&#x2F;mysql&#x2F;datamax_connections&#x3D;1000character-set-server&#x3D;utf8default-storage-engine&#x3D;INNODBmax_allowed_packet&#x3D;16Mlog-bin&#x3D;mysql-binbinlog_format&#x3D;mixedexpire_logs_days&#x3D;7server-id&#x3D;1log-slave-updates&#x3D;trueslave-skip-errors&#x3D;allbinlog-do-db&#x3D;bladexreplicate-do-db&#x3D;bladexbinlog-ignore-db&#x3D;mysqlbinlog-ignore-db&#x3D;sysbinlog-ignore-db&#x3D;performance_schemabinlog-ignore-db&#x3D;information_schemareplicate-ignore-db&#x3D;mysqlreplicate-ignore-db&#x3D;sysreplicate-ignore-db&#x3D;performance_schemareplicate-ignore-db&#x3D;information_schemareplicate-wild-ignore-table&#x3D;bladex.blade_log_apireplicate-wild-ignore-table&#x3D;bladex.blade_log_errorreplicate-wild-ignore-table&#x3D;bladex.blade_log_usual# 开启gtidgtid_mode&#x3D;ONenforce-gtid-consistency&#x3D;true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 复制文件到数据库B，只要修改server_id，同A库不同即可。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>创建同步账号，在A和B库执行如下语句。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在A库执行mysql&gt; SET SQL_LOG_BIN&#x3D;0;Query OK, 0 rows affected (0.00 sec)mysql&gt; CREATE USER repl@&#39;B库的数据库地址&#39; IDENTIFIED WITH mysql_native_password BY &#39;Repl123.X&#39;;Query OK, 0 rows affected (0.00 sec)mysql&gt; grant replication slave on *.* to repl@&#39;B库的数据库地址&#39;;Query OK, 0 rows affected (0.00 sec)mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)mysql&gt; SET SQL_LOG_BIN&#x3D;1;Query OK, 0 rows affected (0.00 sec)# 在B库执行mysql&gt; SET SQL_LOG_BIN&#x3D;0;Query OK, 0 rows affected (0.00 sec)mysql&gt; CREATE USER repl@&#39;A库的数据库地址&#39; IDENTIFIED WITH mysql_native_password BY &#39;Repl123.X&#39;;Query OK, 0 rows affected (0.00 sec)mysql&gt; grant replication slave on *.* to repl@&#39;A库的数据库地址&#39;;Query OK, 0 rows affected (0.00 sec)mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)mysql&gt; SET SQL_LOG_BIN&#x3D;1;Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>重启mysql，A、B都重启</p></li><li><p>配置同步信息</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在A库执行mysql&gt; change master to master_host&#x3D;&#39;B库的数据库地址&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;Repl123.X&#39;,master_auto_position &#x3D;  1;mysql&gt; start slave;# 在B库执行mysql&gt; change master to master_host&#x3D;&#39;A库的数据库地址&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;Repl123.X&#39;,master_auto_position &#x3D;  1;mysql&gt; start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>检查同步</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql&gt; show slave status\G;# 出现如下两个&quot;Yes&quot;，即为成功Slave_IO_Running: YesSlave_SQL_Running: Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="5-故障模拟"><a href="#5-故障模拟" class="headerlink" title="5. 故障模拟"></a>5. 故障模拟</h3><p>模拟A库挂掉，程序切换至B库，重新搭建A库并加入同步的过程</p><ol><li><p>A库故障，直接删除A的data目录，此时发现A库已经已经无法使用</p></li><li><p>业务系统切换到B数据库</p></li><li><p>A库重新安装</p></li><li><p>修改A库的<code>my.cnf</code>文件，直接复制B库，然后修改server_id</p></li><li><p>创建同名数据库，B库数据复制到A库</p></li><li><p>创建同步账号</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">CREATE USER repl@&#39;B库的数据库地址&#39; IDENTIFIED WITH mysql_native_password BY &#39;Repl123.X&#39;;grant replication slave on *.* to repl@&#39;B库的数据库地址&#39;;flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>重启A库</p></li><li><p>配置同步</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在A库执行mysql&gt; change master to master_host&#x3D;&#39;B库的数据库地址&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;Repl123.X&#39;,master_auto_position &#x3D;  1;mysql&gt; start slave;# 在B库执行mysql&gt; change master to master_host&#x3D;&#39;A库的数据库地址&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;repl&#39;,master_password&#x3D;&#39;Repl123.X&#39;,master_auto_position &#x3D;  1;mysql&gt; start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于keepalived的nginx高可用</title>
    <link href="/2022/10/24/%E5%9F%BA%E4%BA%8Ekeepalived%E7%9A%84nginx%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <url>/2022/10/24/%E5%9F%BA%E4%BA%8Ekeepalived%E7%9A%84nginx%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装nginx"><a href="#1-安装nginx" class="headerlink" title="1. 安装nginx"></a>1. 安装nginx</h2><ol><li><p>将实现编译好的nginx导入到服务器，<code>nginx-1.22.1-sbin.tar</code></p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 解压tar -zxvf nginx-1.22.1-sbin.tar -C &#x2F;usr&#x2F;local&#x2F;nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>编辑配置文件，<code>nginx.conf</code></p><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">user</span>  root</span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">worker_processes</span>  <span class="token number">1</span></span><span class="token punctuation">;</span><span class="token comment">#error_log  logs/error.log;</span><span class="token comment">#error_log  logs/error.log  notice;</span><span class="token comment">#error_log  logs/error.log  info;</span><span class="token comment">#pid        logs/nginx.pid;</span><span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">worker_connections</span>  <span class="token number">1024</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">include</span>       mime.types</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">default_type</span>  application/octet-stream</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">log_format</span>  main  <span class="token string">'<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> "<span class="token variable">$request</span>" '</span>                      <span class="token string">'<span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> "<span class="token variable">$http_referer</span>" '</span>                      <span class="token string">'"<span class="token variable">$http_user_agent</span>" "<span class="token variable">$http_x_forwarded_for</span>"'</span></span><span class="token punctuation">;</span>    <span class="token comment">#access_log  logs/access.log  main;</span>    <span class="token directive"><span class="token keyword">sendfile</span>        <span class="token boolean">on</span></span><span class="token punctuation">;</span>    <span class="token comment">#tcp_nopush     on;</span>    <span class="token comment">#keepalive_timeout  0;</span>    <span class="token directive"><span class="token keyword">keepalive_timeout</span>  <span class="token number">65</span></span><span class="token punctuation">;</span>    <span class="token comment">#gzip  on;</span>    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">server_name</span>  localhost</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">root</span>         /usr/local/nginx/html</span><span class="token punctuation">;</span>        <span class="token comment">#charset koi8-r;</span>        <span class="token comment">#从系统时间中正则匹配出年月日</span>        <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$time_iso8601</span> ~ <span class="token string">"^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)"</span>)</span> <span class="token punctuation">&#123;</span>            <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$date</span> <span class="token variable">$1</span><span class="token variable">$2</span><span class="token variable">$3</span></span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token directive"><span class="token keyword">access_log</span>  logs/<span class="token variable">$date</span>.host.access.log  main</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>            <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token directive"><span class="token keyword">location</span> ^~ /oauth/redirect</span> <span class="token punctuation">&#123;</span>           <span class="token directive"><span class="token keyword">rewrite</span> ^(.*)$ /index.html break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$request_uri</span> ~ <span class="token string">"/actuator"</span>)</span> <span class="token punctuation">&#123;</span>           <span class="token directive"><span class="token keyword">return</span> <span class="token number">403</span></span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token directive"><span class="token keyword">location</span> ^~ /api</span> <span class="token punctuation">&#123;</span>           <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_buffering</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_send_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_read_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">rewrite</span> ^/api/(.*)$ /<span class="token variable">$1</span> break</span><span class="token punctuation">;</span>           <span class="token directive"><span class="token keyword">proxy_pass</span> http://192.168.186.24:30776</span><span class="token punctuation">;</span> <span class="token comment"># 反代地址</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建nginx软链接，<code>ln -s /usr/local/nginx/sbin/nginx /usr/local/bin/nginx</code></p></li><li><p>开机启动nginx</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo &quot;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx&quot; &gt;&gt; &#x2F;etc&#x2F;rc.d&#x2F;rc.localchmod a+x &#x2F;etc&#x2F;rc.d&#x2F;rc.local# 测试，查看nginx是否启动rebootps -ef|grep nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>启动nginx</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h2 id="2-安装keepalived"><a href="#2-安装keepalived" class="headerlink" title="2. 安装keepalived"></a>2. 安装keepalived</h2><ol><li><p>将实现编译好的keepalived导入到服务器，<code>keepalived-2.2.7-sbin.tar</code></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压tar -zxvf keepalived-2.2.7-sbin.tar -C &#x2F;usr&#x2F;local&#x2F;keepalived<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>如果使用我的安装包，进入README目录，运行run.sh脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#创建目录mkdir -p &#x2F;etc&#x2F;keepalived#拷贝配置文件到&#x2F;etc&#x2F;keepalived目录下cp &#x2F;usr&#x2F;local&#x2F;keepalived&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf.sample &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf#复制keepalived脚本到&#x2F;etc&#x2F;init.d&#x2F; 目录(可忽略)cp .&#x2F;keepalived &#x2F;etc&#x2F;init.d&#x2F;#拷贝keepalived脚本到&#x2F;etc&#x2F;sysconfig&#x2F; 目录cp &#x2F;usr&#x2F;local&#x2F;keepalived&#x2F;etc&#x2F;sysconfig&#x2F;keepalived &#x2F;etc&#x2F;sysconfig&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>设置开机启动，<code>chkconfig --add keepalived</code>，然后执行<code>chkconfig keepalived on</code></p></li><li><p>配置keepalived，<code>/etc/keepalived/keepalived.conf</code></p><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment"># 主</span><span class="token directive"><span class="token keyword">global_defs</span></span> <span class="token punctuation">&#123;</span>   router_id nginx01  <span class="token comment"># 运行 keepalived 服务器的标识，在一个网络内应该是唯一的</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">vrrp_script</span> chk_nginx</span> <span class="token punctuation">&#123;</span>   script "/etc/keepalived/chk_nginx.sh" <span class="token comment"># 检查nginx状态脚本路径</span>   interval 1  <span class="token comment"># 每1秒检测一次nginx的运行状态</span>   weight -2  <span class="token comment"># 失败一次，将自己的优先级-2</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">vrrp_instance</span> VI_1</span> <span class="token punctuation">&#123;</span> <span class="token comment">#vrrp 实例定义部分</span>    <span class="token directive"><span class="token keyword">state</span> MASTER  <span class="token comment"># 设置 lvs 的状态，MASTER 和 BACKUP 两种，必须大写</span>    interface ens33 <span class="token comment"># 设置对外服务的接口，绑定网卡</span>    virtual_router_id <span class="token number">200</span> <span class="token comment"># 设置虚拟路由标示，这个标示是一个数字，同一个 vrrp 实例使用唯一标示</span>    priority <span class="token number">100</span> <span class="token comment"># 定义优先级，数字越大优先级越高，在一个 vrrp——instance 下，master 的优先级必须大于 backup</span>    advert_int <span class="token number">1</span> <span class="token comment"># 设定 master 与 backup 负载均衡器之间同步检查的时间间隔，单位是秒</span>    authentication</span> <span class="token punctuation">&#123;</span>  <span class="token comment"># 设置验证类型和密码</span>        auth_type PASS        auth_pass 1111  <span class="token comment"># 验证密码，同一个 vrrp_instance 下 MASTER 和 BACKUP 密码必须相同</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">virtual_ipaddress</span></span> <span class="token punctuation">&#123;</span>  <span class="token comment"># 设置虚拟 ip 地址，可以设置多个，每行一个</span>        172.11.219.199/24   <span class="token punctuation">&#125;</span>   <span class="token directive"><span class="token keyword">cast_src_ip</span> 172.11.219.200   unicast_peer</span> <span class="token punctuation">&#123;</span>      172.11.219.201   <span class="token punctuation">&#125;</span>   <span class="token directive"><span class="token keyword">track_script</span></span> <span class="token punctuation">&#123;</span>        chk_nginx   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># 从</span><span class="token directive"><span class="token keyword">global_defs</span></span> <span class="token punctuation">&#123;</span>   router_id nginx02<span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">vrrp_script</span> chk_nginx</span> <span class="token punctuation">&#123;</span>   script "/etc/keepalived/chk_nginx.sh" <span class="token comment">##检查nginx状态脚本路径</span>   interval 1  <span class="token comment">##每1秒检测一次nginx的运行状态</span>   weight -2  <span class="token comment">##失败一次，将自己的优先级-2</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">vrrp_instance</span> VI_1</span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">state</span> BACKUP    interface ens33    virtual_router_id <span class="token number">200</span>    priority <span class="token number">80</span>    advert_int <span class="token number">1</span>    authentication</span> <span class="token punctuation">&#123;</span>        auth_type PASS        auth_pass 1111    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">virtual_ipaddress</span></span> <span class="token punctuation">&#123;</span>        172.11.219.199/24   <span class="token punctuation">&#125;</span>   <span class="token directive"><span class="token keyword">cast_src_ip</span> 172.11.219.201   unicast_peer</span> <span class="token punctuation">&#123;</span>      172.11.219.200   <span class="token punctuation">&#125;</span>   <span class="token directive"><span class="token keyword">track_script</span></span> <span class="token punctuation">&#123;</span>        chk_nginx   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>nginx检测脚本，赋予可执行权限，<code>chmod 756 chk_nginx.sh</code></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#!&#x2F;bin&#x2F;bashd&#x3D;&#96;date --date today +%Y-%m-%d_%H:%M:%S&#96;run1&#x3D;&#96;ps -C nginx --no-heading|wc -l&#96;if [ $run1 -eq &quot;0&quot; ]; then        echo &quot;$d nginx down,nginx will restart for once&quot; &gt;&gt; &#x2F;var&#x2F;log&#x2F;chk_nginx.log        systemctl start nginx.service        sleep 2        run2&#x3D;&#96;ps -C nginx --no-heading|wc -l&#96;        if [ $run2 -eq &quot;0&quot;  ]; then                echo &quot;$d nginx down,keepalived will stop&quot; &gt;&gt; &#x2F;var&#x2F;log&#x2F;chk_nginx.log                systemctl stop keepalived.service        fifi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h2 id="3-测试主备"><a href="#3-测试主备" class="headerlink" title="3. 测试主备"></a>3. 测试主备</h2><ol><li><p>查看VIP是否在主服务器上</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 在主服务上运行如下命令# 如果发现如下地址，则表明程序正常[root@nginx1 README]# ip a1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00    inet 127.0.0.1&#x2F;8 scope host lo       valid_lft forever preferred_lft forever2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000    link&#x2F;ether 00:0c:29:70:b4:11 brd ff:ff:ff:ff:ff:ff    inet 172.11.219.200&#x2F;24 brd 172.11.219.255 scope global noprefixroute ens33       valid_lft forever preferred_lft forever    inet 172.11.219.199&#x2F;24 scope global secondary ens33       valid_lft forever preferred_lft forever3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default    link&#x2F;ether 02:42:6c:0f:45:df brd ff:ff:ff:ff:ff:ff    inet 172.17.0.1&#x2F;16 brd 172.17.255.255 scope global docker0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>模拟nginx异常，手动关闭nginx。<code>nginx -s quit</code>，发现nginx已经下线。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[root@nginx1 README]# nginx -s quit[root@nginx1 README]# ps -ef |grep nginxroot      32130  20859  0 08:18 pts&#x2F;0    00:00:00 grep --color&#x3D;auto nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>此时再次访问，<a href="http://172.11.219.199,/">http://172.11.219.199，</a> 发现其仍然可用。这里将主nginx和从nginx配置为不同的页面来区分。</p><p><img src="/img/%E5%9F%BA%E4%BA%8Ekeepalived%E7%9A%84nginx%E9%AB%98%E5%8F%AF%E7%94%A8/nginx2.jpg" alt="nginx2"></p></li><li><p>将主nginx再次启动，然后再次输入上述网址，观察页面情况。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">nginxkeepalived<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="/img/%E5%9F%BA%E4%BA%8Ekeepalived%E7%9A%84nginx%E9%AB%98%E5%8F%AF%E7%94%A8/nginx1.jpg" alt="nginx1"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>keepalived</category>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>keepalived</tag>
      
      <tag>软负载</tag>
      
      <tag>高可用</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用kubekey快速搭建单机k8s集群</title>
    <link href="/2022/07/13/%E4%BD%BF%E7%94%A8kubekey%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%95%E6%9C%BAk8s%E9%9B%86%E7%BE%A4/"/>
    <url>/2022/07/13/%E4%BD%BF%E7%94%A8kubekey%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%95%E6%9C%BAk8s%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="使用kubekey安装kubernetes集群"><a href="#使用kubekey安装kubernetes集群" class="headerlink" title="使用kubekey安装kubernetes集群"></a>使用kubekey安装kubernetes集群</h2><blockquote><p>参考文档：<a href="https://v3-1.docs.kubesphere.io/zh/docs/installing-on-linux/introduction/multioverview/">https://v3-1.docs.kubesphere.io/zh/docs/installing-on-linux/introduction/multioverview/</a></p></blockquote><h3 id="1-确认版本"><a href="#1-确认版本" class="headerlink" title="1. 确认版本"></a>1. 确认版本</h3><table><thead><tr><th>docker</th><th>kubernetes</th><th>kubesphere</th></tr></thead><tbody><tr><td>20.10.8</td><td>v1.19.8</td><td>v3.1.1</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="2-需要的镜像包，可提前准备"><a href="#2-需要的镜像包，可提前准备" class="headerlink" title="2. 需要的镜像包，可提前准备"></a>2. 需要的镜像包，可提前准备</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># master节点上的imagesdocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;node:v3.20.0 &gt; 1.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;pod2daemon-flexvol:v3.20.0 &gt; 2.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;cni:v3.20.0 &gt; 3.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-controllers:v3.20.0 &gt; 4.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;ks-controller-manager:v3.1.1 &gt; 5.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;ks-apiserver:v3.1.1 &gt; 6.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;ks-console:v3.1.1 &gt; 7.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-apiserver:v1.19.8 &gt; 8.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-proxy:v1.19.8 &gt; 9.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-controller-manager:v1.19.8 &gt; 10.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-scheduler:v1.19.8 &gt; 11.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-rbac-proxy:v0.8.0 &gt; 12.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;openldap:1.3.0 &gt; 13.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;k8s-dns-node-cache:1.15.12 &gt; 14.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;coredns:1.6.9 &gt; 15.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;pause:3.2 &gt; 16.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;node-exporter:v0.18.1 &gt; 17.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 工作节点上images，开启devops、metrics_serverdocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;node:v3.20.0 &gt; 1.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;pod2daemon-flexvol:v3.20.0 &gt; 2.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;cni:v3.20.0 &gt; 3.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-controllers:v3.20.0 &gt; 4.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;coredns:1.6.9 &gt; 17.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;pause:3.2 &gt; 18.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-proxy:v1.19.8 &gt; 9.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;ks-installer:v3.1.1 &gt; 5.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;notification-manager:v1.0.0 &gt; 6.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;prometheus:v2.26.0 &gt; 7.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;nfs-subdir-external-provisioner:v4.0.2 &gt; 8.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;s2ioperator:v3.1.0 &gt; 10.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-rbac-proxy:v0.8.0 &gt; 11.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;prometheus-config-reloader:v0.42.1 &gt; 12.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;prometheus-operator:v0.42.1 &gt; 13.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;alertmanager:v0.21.0 &gt; 14.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;kube-state-metrics:v1.9.7 &gt; 15.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;k8s-dns-node-cache:1.15.12 &gt; 16.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;configmap-reload:v0.3.0 &gt; 19.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;mc:RELEASE.2019-08-07T23-14-43Z &gt; 20.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;node-exporter:v0.18.1 &gt; 21.tardocker save registry.cn-beijing.aliyuncs.com&#x2F;kubesphereio&#x2F;defaultbackend-amd64:1.4 &gt; 22.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-初始化系统"><a href="#1-初始化系统" class="headerlink" title="1. 初始化系统"></a>1. 初始化系统</h3><p>最好使用纯净的linux系统，本次使用<code>CentOS Linux release 7.9.2009 (Core)</code></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># osinit.sh 为自己的脚本文件sh osinit.sh [主机名]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="2-安装NFS服务作为默认存储"><a href="#2-安装NFS服务作为默认存储" class="headerlink" title="2. 安装NFS服务作为默认存储"></a>2. 安装NFS服务作为默认存储</h3><blockquote><p>参考《NFS服务搭建》博客内容</p></blockquote><p>设置nfs作为存储的配置文件</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">nfs</span><span class="token punctuation">:</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> <span class="token string">"172.27.8.31"</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/nfsdata/hak8s"</span><span class="token key atrule">storageClass</span><span class="token punctuation">:</span>  <span class="token key atrule">defaultClass</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-安装docker"><a href="#3-安装docker" class="headerlink" title="3. 安装docker"></a>3. 安装docker</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># install_docker.sh自己的脚本sh install_docker.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="4-下载或者使用固定kubekey"><a href="#4-下载或者使用固定kubekey" class="headerlink" title="4. 下载或者使用固定kubekey"></a>4. 下载或者使用固定kubekey</h3><p>先执行以下命令以确保您从正确的区域下载 KubeKey</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">export KKZONE&#x3D;cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>执行以下命令下载 KubeKey</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">curl -sfL https:&#x2F;&#x2F;get-kk.kubesphere.io | VERSION&#x3D;v1.1.1 sh -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>为<code>kk</code>添加可执行权限</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">chmod +x kk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="5-创建配置文件"><a href="#5-创建配置文件" class="headerlink" title="5. 创建配置文件"></a>5. 创建配置文件</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">.&#x2F;kk create config --with-kubernetes v1.19.8 --with-kubesphere v3.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="6-编辑配置文件"><a href="#6-编辑配置文件" class="headerlink" title="6. 编辑配置文件"></a>6. 编辑配置文件</h3><p>主要是设置主机、etcd、master、worker</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> master<span class="token punctuation">,</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">internalAddress</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">user</span><span class="token punctuation">:</span> XXX<span class="token punctuation">,</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> XXX<span class="token punctuation">&#125;</span>  <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> node1<span class="token punctuation">,</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">internalAddress</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">user</span><span class="token punctuation">:</span> XXX<span class="token punctuation">,</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> XXX<span class="token punctuation">&#125;</span>  <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> node2<span class="token punctuation">,</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">internalAddress</span><span class="token punctuation">:</span> x.x.x.x<span class="token punctuation">,</span> <span class="token key atrule">user</span><span class="token punctuation">:</span> XXX<span class="token punctuation">,</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> XXX<span class="token punctuation">&#125;</span>  <span class="token key atrule">roleGroups</span><span class="token punctuation">:</span>    <span class="token key atrule">etcd</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> master    <span class="token key atrule">master</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> master    <span class="token key atrule">worker</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> node1    <span class="token punctuation">-</span> node2  <span class="token key atrule">controlPlaneEndpoint</span><span class="token punctuation">:</span>    <span class="token comment">##Internal loadbalancer for apiservers</span>    <span class="token comment">#internalLoadbalancer: haproxy</span>    <span class="token key atrule">domain</span><span class="token punctuation">:</span> lb.hak8s.local    <span class="token key atrule">address</span><span class="token punctuation">:</span> <span class="token string">""</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6443</span>  <span class="token key atrule">kubernetes</span><span class="token punctuation">:</span>    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1.19.8    <span class="token key atrule">clusterName</span><span class="token punctuation">:</span> cluster.local  <span class="token key atrule">network</span><span class="token punctuation">:</span>    <span class="token key atrule">plugin</span><span class="token punctuation">:</span> calico    <span class="token key atrule">kubePodsCIDR</span><span class="token punctuation">:</span> 10.233.64.0/18    <span class="token key atrule">kubeServiceCIDR</span><span class="token punctuation">:</span> 10.233.0.0/18  <span class="token key atrule">registry</span><span class="token punctuation">:</span>    <span class="token key atrule">registryMirrors</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"https://registry.cn-hangzhou.aliyuncs.com"</span><span class="token punctuation">,</span><span class="token string">"https://j54517kd.mirror.aliyuncs.com"</span><span class="token punctuation">,</span><span class="token string">"http://f1361db2.m.daocloud.io"</span><span class="token punctuation">,</span><span class="token string">"https://mirror.ccs.tencentyun.com"</span><span class="token punctuation">,</span><span class="token string">"http://hub-mirror.c.163.com"</span><span class="token punctuation">]</span>    <span class="token key atrule">insecureRegistries</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"192.168.182.187:81"</span><span class="token punctuation">]</span>  <span class="token key atrule">addons</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system    <span class="token key atrule">sources</span><span class="token punctuation">:</span>      <span class="token key atrule">chart</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner        <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//charts.kubesphere.io/main        <span class="token key atrule">valuesFile</span><span class="token punctuation">:</span> /root/nfs<span class="token punctuation">-</span>client.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-使用配置文件创建集群"><a href="#7-使用配置文件创建集群" class="headerlink" title="7. 使用配置文件创建集群"></a>7. 使用配置文件创建集群</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">.&#x2F;kk create cluster -f config-sample.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="8-验证"><a href="#8-验证" class="headerlink" title="8. 验证"></a>8. 验证</h3><p>看到此段输出即为成功</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">########################################################              Welcome to KubeSphere!           ########################################################Console: http:&#x2F;&#x2F;192.168.0.2:30880Account: adminPassword: P@88w0rdNOTES：  1. After you log into the console, please check the     monitoring status of service components in     the &quot;Cluster Management&quot;. If any service is not     ready, please wait patiently until all components     are up and running.  2. Please change the default password after login.#####################################################https:&#x2F;&#x2F;kubesphere.io             20xx-xx-xx xx:xx:xx#####################################################<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>PS：启用自动补全</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install -y bash-completionecho &#39;source &lt;(kubectl completion bash)&#39; &gt;&gt;~&#x2F;.bashrckubectl completion bash &gt;&#x2F;etc&#x2F;bash_completion.d&#x2F;kubectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
      <tag>kubekey</tag>
      
      <tag>kubesphere</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ESB单机环境搭建</title>
    <link href="/2022/06/28/%E5%8D%95%E6%9C%BAESB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/06/28/%E5%8D%95%E6%9C%BAESB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="ESB介绍"><a href="#ESB介绍" class="headerlink" title="ESB介绍"></a>ESB介绍</h3><p>Mule是一个企业服务总线(ESB)消息框架。它的主要特性包括：</p><ol><li><p>基于J2EE1.4的企业消息总线(ESB)和消息代理(broker)。</p></li><li><p>可插入的连接性:比如Jms,jdbc,tcp,udp,multicast,http,servlet,smtp,pop3, file,xmpp。</p></li><li><p>支持任何传输之上的异步，同步和请求响应事件处理机制。</p></li><li><p>支持Axis或者Glue的Web Service。</p></li><li><p>灵活的部署结构[Topologies]包括Client/Server, P2P, ESB 和Enterprise Service Network。</p></li><li><p>与Spring 框架集成:可用作ESB 容器，也可以很容易的嵌入到Spring应用中。</p></li><li><p>使用基于SEDA处理模型的高度可伸缩的企业服务器。</p></li><li><p>强大的基于EIP模式的事件路由机制等。</p><p>Mule发布最新版本1.1，这个发布包括集成了 <a href="http://mule.codehaus.org/JBI">JBI</a>，对 <a href="http://mule.codehaus.org/BPEL"><strong>BPEL</strong></a>的支持,还增加一些新的传输器(transport)Quartz,FTP,RMI与EJB等。</p></li></ol><h3 id="功能架构"><a href="#功能架构" class="headerlink" title="功能架构"></a>功能架构</h3><p><img src="/img/%E5%8D%95%E6%9C%BAESB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E6%9E%B6%E6%9E%84.png" alt="ESB功能架构"></p><h3 id="安装mysql8数据库"><a href="#安装mysql8数据库" class="headerlink" title="安装mysql8数据库"></a>安装mysql8数据库</h3><ol><li><p>使用<code>mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz</code> 安装包</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压tar -xJvf mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz -C &#x2F;esbmv &#x2F;esb&#x2F;mysql-8.0.21-linux-glibc2.12-x86_64 &#x2F;esb&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建mysql用户组和用户</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">groupadd mysqluseradd -g mysql mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>更改mysql目录权限</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">chown -R mysql:mysql &#x2F;esb&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>更改mysql配置文件，<code>vi /etc/my.cnf</code></p><div class="code-wrapper"><pre class="line-numbers language-basic" data-language="basic"><code class="language-basic">[mysqld]port <span class="token operator">=</span> <span class="token number">3306</span>mysqlx_port <span class="token operator">=</span> <span class="token number">33060</span>basedir <span class="token operator">=</span> <span class="token operator">/</span>esb<span class="token operator">/</span>mysqldatadir <span class="token operator">=</span> <span class="token operator">/</span>esb<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span>socket <span class="token operator">=</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql.sockmysqlx_socket <span class="token operator">=</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>mysqlx.sockpid<span class="token operator">-</span>file <span class="token operator">=</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>mysqld.pid<span class="token function">log</span><span class="token operator">-</span><span class="token keyword">error</span> <span class="token operator">=</span> <span class="token keyword">error</span>.<span class="token function">log</span>slow<span class="token operator">-</span>query<span class="token operator">-</span><span class="token function">log</span> <span class="token operator">=</span> <span class="token number">1</span>slow<span class="token operator">-</span>query<span class="token operator">-</span><span class="token function">log</span><span class="token operator">-</span>file <span class="token operator">=</span> slow.<span class="token function">log</span>long_query_time <span class="token operator">=</span> <span class="token number">0.2</span><span class="token function">log</span><span class="token operator">-</span>bin <span class="token operator">=</span> mysql<span class="token operator">-</span>bin<span class="token function">max</span><span class="token operator">-</span>binlog<span class="token operator">-</span><span class="token function">size</span> <span class="token operator">=</span> <span class="token number">50</span>M<span class="token function">log</span><span class="token operator">-</span>bin<span class="token operator">-</span>index <span class="token operator">=</span> bin.indexrelay<span class="token operator">-</span><span class="token function">log</span> <span class="token operator">=</span> mysql<span class="token operator">-</span>relay<span class="token operator">-</span>binbinlog_format <span class="token operator">=</span> mixedrelay_log_recovery <span class="token operator">=</span> <span class="token number">1</span>character<span class="token operator">-</span><span class="token function">set</span><span class="token operator">-</span>client<span class="token operator">-</span>handshake <span class="token operator">=</span> FALSEcharacter<span class="token operator">-</span><span class="token function">set</span><span class="token operator">-</span>server <span class="token operator">=</span> utf8mb4collation<span class="token operator">-</span>server <span class="token operator">=</span> utf8mb4_unicode_ciinit_connect <span class="token operator">=</span> '<span class="token function">SET</span> NAMES utf8mb4'innodb_buffer_pool_size <span class="token operator">=</span> <span class="token number">1</span>Gjoin_buffer_size <span class="token operator">=</span> <span class="token number">128</span>Msort_buffer_size <span class="token operator">=</span> <span class="token number">2</span>Mread_rnd_buffer_size <span class="token operator">=</span> <span class="token number">2</span>Mlog_timestamps <span class="token operator">=</span> <span class="token keyword">SYSTEM</span>lower_case_table_names <span class="token operator">=</span> <span class="token number">1</span>default_authentication_plugin <span class="token operator">=</span> mysql_native_passwordmax_connections <span class="token operator">=</span> <span class="token number">500</span>wait_timeout <span class="token operator">=</span> <span class="token number">600</span>interactive_timeout <span class="token operator">=</span> <span class="token number">600</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>设置mysql服务为系统服务</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp -a &#x2F;esb&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqlchmod +x &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;mysqlchkconfig --add mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置全局环境变量</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo &#39;export PATH&#x3D;&#x2F;esb&#x2F;mysql&#x2F;bin:&#x2F;esb&#x2F;mysql&#x2F;lib:$PATH&#39; &gt;&gt; &#x2F;etc&#x2F;profile# 生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>初始化数据库</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysqld --initialize --user&#x3D;mysql --basedir&#x3D;&#x2F;esb&#x2F;mysql --datadir&#x3D;&#x2F;esb&#x2F;mysql&#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>启动mysql</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>查看root账号密码</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cat &#x2F;esb&#x2F;mysql&#x2F;data&#x2F;error.log | grep -i password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>登录mysql，修改root密码</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -p# 输入上步骤得到的密码# 以下为mysql命令行alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;XXXX&#39;;set global log_bin_trust_function_creators &#x3D; 1;commit;exit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h4 id="创建ESB的数据库"><a href="#创建ESB的数据库" class="headerlink" title="创建ESB的数据库"></a>创建ESB的数据库</h4><ol><li><p>创建数据库</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 试用root账号进行登录mysql -uroot -p# 输入正确密码后，进入mysql命令行create database zjesbtest character set utf8 collate utf8_general_ci;# 查看是否成功show databases;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建远程登录用户，并授权esb数据库</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 以下均为mysql命令行create user esbtest@&#39;%&#39; identified with mysql_native_password by &#39;XXXXX&#39;;grant all privileges on esbtest.* to esbtest@&#39;%&#39;;flush privileges;exit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><ol><li><p>安装</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir &#x2F;home&#x2F;esb&#x2F;javatar -zxvf jdk-8u181-linux-x64.tar.gz -C &#x2F;home&#x2F;esb&#x2F;java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;profile# set java environmentexport JAVA_HOME&#x3D;&#x2F;home&#x2F;esb&#x2F;java&#x2F;jdk1.8.0_181export PATH&#x3D;$JAVA_HOME&#x2F;bin:$JAVA_HOME&#x2F;jre&#x2F;bin:$PATHexport CLASSPATH&#x3D;$CLASSPATH:.:$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;lib# 生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="安装ActiveMq"><a href="#安装ActiveMq" class="headerlink" title="安装ActiveMq"></a>安装ActiveMq</h3><ol><li><p>安装</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;home&#x2F;esb&#x2F;activemqtar -zxvf apache-activemq-5.15.5-bin.tar.gz -C &#x2F;home&#x2F;esb&#x2F;activemq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>配置</p><ol><li><p>调优配置</p><ul><li><p>调整JVM大小</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;bin&#x2F;linux-x86-64vi wrapper.conf# 调整wrapper.java.initmemory&#x3D;1024wrapper.java.maxmemory&#x3D;2048<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul></li><li><p>账号配置</p><ul><li><p>设置mq的web管理员账密，esbmqmgr/esbmqmgr</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;conf&#x2F;vi jetty-realm.properties# 注释如下两行，添加最后一行#admin: admin, admin#user: user, useresbmqmgr: esbmqmgr, admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>设置mq的代理访问账密，esbadminrw/esbadminrw</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;conf&#x2F;# 添加如下用户vi users.properties# 注释如下一行，添加最后两行# admin&#x3D;adminesbadminrw&#x3D;esbadminrwsystem&#x3D;manager# 设置用户角色vi groups.properties# 注释如下一行，添加最后一行#admins&#x3D;adminadmins&#x3D;esbadminrw,system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>队列权限配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;conf&#x2F;vi activemq.xml# 在&lt;&#x2F;persistenceAdapter&gt;标签后&lt;systemUsage&gt;标签前添加如下类似内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>loggingBrokerPlugin</span> <span class="token attr-name">logProducerEvents</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">logConsumerEvents</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jaasAuthenticationPlugin</span> <span class="token attr-name">configuration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>activemq<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authorizationPlugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authorizationMap</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authorizationEntries</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authorizationEntry</span> <span class="token attr-name">queue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>><span class="token punctuation">"</span></span> <span class="token attr-name">read</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token attr-name">write</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token attr-name">admin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authorizationEntry</span> <span class="token attr-name">topic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>><span class="token punctuation">"</span></span> <span class="token attr-name">read</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token attr-name">write</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token attr-name">admin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admins<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>authorizationEntries</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>authorizationMap</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>authorizationPlugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul></li></ol></li><li><p>启动MQ</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;bin# 启动.&#x2F;activemq start# 停止.&#x2F;activemq stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>开机启动MQ</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 指定JAVA_HOME，否则无法cd &#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;binecho &quot;JAVA_HOME&#x3D;\&quot;&#x2F;home&#x2F;esb&#x2F;java&#x2F;jdk1.8.0_181\&quot;&quot; &gt;&gt; envcat &gt; &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;activemq.service &lt;&lt; EOF[Unit]Description&#x3D;ActiveMQ serviceAfter&#x3D;network.target[Service]Type&#x3D;forkingWorkingDirectory&#x3D;&#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;dataExecStart&#x3D;&#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;bin&#x2F;activemq startExecStop&#x3D;&#x2F;home&#x2F;esb&#x2F;activemq&#x2F;apache-activemq-5.15.5&#x2F;bin&#x2F;activemq stopUser&#x3D;rootGroup&#x3D;root[Install]WantedBy&#x3D;multi-user.targetEOF# 开机自启动systemctl enable activemq# 启动systemctl start activemq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><ol><li><p>安装</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 安装gccyum install -y gcc-c++# 解压tar -zxvf redis-5.0.10.tar.gz -C &#x2F;home&#x2F;esbmv &#x2F;home&#x2F;esb&#x2F;redis-5.0.10 &#x2F;home&#x2F;esb&#x2F;redis# 编译安装cd &#x2F;home&#x2F;esb&#x2F;redismake MALLOC&#x3D;libc# 注意PREFIX要大写make install PREFIX&#x3D;&#x2F;home&#x2F;esb&#x2F;redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>更改配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;esb&#x2F;redismkdir logvi redis.confbind 0.0.0.0daemonize yesrequirepass 123123logfile &quot;&#x2F;home&#x2F;esb&#x2F;redis&#x2F;log&#x2F;redis.log&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>开机自启redis</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;home&#x2F;esb&#x2F;redis&#x2F;utils&#x2F;redis_init_script &#x2F;etc&#x2F;init.d&#x2F;redisdvi &#x2F;etc&#x2F;init.d&#x2F;redisdREDISPORT&#x3D;6379EXEC&#x3D;&#x2F;home&#x2F;esb&#x2F;redis&#x2F;bin&#x2F;redis-serverCLIEXEC&#x3D;&#x2F;home&#x2F;esb&#x2F;redis&#x2F;bin&#x2F;redis-cliPIDFILE&#x3D;&#x2F;var&#x2F;run&#x2F;redis_$&#123;REDISPORT&#125;.pidCONF&#x3D;&quot;&#x2F;home&#x2F;esb&#x2F;redis&#x2F;bin&#x2F;$&#123;REDISPORT&#125;.conf&quot;chkconfig redisd onservice redisd startservice redisd stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="安装Mule-Runtime"><a href="#安装Mule-Runtime" class="headerlink" title="安装Mule Runtime"></a>安装Mule Runtime</h3><ol><li><p>安装</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;home&#x2F;esb&#x2F;muletar -zxvf mule-standalone-3.9.0.tar.gz -C &#x2F;home&#x2F;esb&#x2F;mule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>配置</p><ol><li><p>调优配置，<code>cd /home/esb/mule/mule-standalone-3.9.0/conf</code>，备份老的wrapper.conf，用新的wrapper.conf替换。</p></li><li><p>Bar包替换，<code>cd /home/esb/mule/mule-standalone-3.9.0/lib/opt</code></p><div class="code-wrapper"><pre class="line-numbers language-basic" data-language="basic"><code class="language-basic">备份如下<span class="token number">5</span>个jar包：connection<span class="token operator">-</span>pool<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.33</span>.jargrizzly<span class="token operator">-</span>framework<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.33</span>.jargrizzly<span class="token operator">-</span>http<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.33</span>.jargrizzly<span class="token operator">-</span>http<span class="token operator">-</span>server<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.33</span>.jargrizzly<span class="token operator">-</span>websockets<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.33</span>.jar添加如下<span class="token number">5</span>个最新的jar包：connection<span class="token operator">-</span>pool<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.35</span>.jargrizzly<span class="token operator">-</span>framework<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.35</span>.jargrizzly<span class="token operator">-</span>http<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.35</span>.jargrizzly<span class="token operator">-</span>http<span class="token operator">-</span>server<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.35</span>.jargrizzly<span class="token operator">-</span>websockets<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.35</span>.jar添加后为新增的jar包添加可执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mv connection-pool-2.3.33.jar connection-pool-2.3.33.jar.bakmv grizzly-framework-2.3.33.jar grizzly-framework-2.3.33.jar.bakmv grizzly-http-2.3.33.jar grizzly-http-2.3.33.jar.bakmv grizzly-http-server-2.3.33.jar grizzly-http-server-2.3.33.jar.bakmv grizzly-websockets-2.3.33.jar grizzly-websockets-2.3.33.jar.bakchmod +x connection-pool-2.3.35.jarchmod +x grizzly-framework-2.3.35.jarchmod +x grizzly-http-2.3.35.jarchmod +x grizzly-http-server-2.3.35.jarchmod +x grizzly-websockets-2.3.35.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li><li><p>开机自启</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 此种方法未能实现开机自启cat &gt; &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mule.service &lt;&lt; EOF[Unit]Description&#x3D;Mule serviceAfter&#x3D;network.target[Service]Type&#x3D;forkingPIDFile&#x3D;&#x2F;tmp&#x2F;mule.pidExecStart&#x3D;&#x2F;home&#x2F;esb&#x2F;mule&#x2F;mule-standalone-3.9.0&#x2F;bin&#x2F;mule startExecStop&#x3D;&#x2F;home&#x2F;esb&#x2F;mule&#x2F;mule-standalone-3.9.0&#x2F;bin&#x2F;mule stopUser&#x3D;rootGroup&#x3D;root[Install]WantedBy&#x3D;multi-user.targetEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="安装ESB监控系统"><a href="#安装ESB监控系统" class="headerlink" title="安装ESB监控系统"></a>安装ESB监控系统</h3><h3 id="ESB运维处理"><a href="#ESB运维处理" class="headerlink" title="ESB运维处理"></a>ESB运维处理</h3><ol><li><p>zipkin与activemq冲突</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span>UnsatisfiedDependencyException</span><span class="token operator">:</span> <span class="token class-name">Error</span> creating bean <span class="token keyword">with</span> <span class="token namespace">name</span> 'czJmsListenerContainerFactory' defined in <span class="token keyword">class</span> path resource <span class="token punctuation">[</span>org<span class="token operator">/</span>springblade<span class="token operator">/</span>esblogmq<span class="token operator">/</span>config<span class="token operator">/</span><span class="token class-name">ActivemqConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token class-name">Unsatisfied</span> dependency expressed through method 'czJmsListenerContainerFactory' parameter <span class="token number">0</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span>BeanNotOfRequiredTypeException</span><span class="token operator">:</span> <span class="token class-name">Bean</span> named 'czConnectionFactory' is expected <span class="token keyword">to</span> <span class="token namespace">be</span> of type '<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activemq<span class="token punctuation">.</span></span>ActiveMQConnectionFactory</span>' but was actually of type '<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>sleuth<span class="token punctuation">.</span>instrument<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span></span>LazyTopicConnectionFactory</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>解决方案：去除链路追踪相关包，这是由于activemq中的jms连接和链路追踪的<code>LazyTopicConnectionFactory</code>冲突</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springblade<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>blade-starter-trace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="ESB主主恢复"><a href="#ESB主主恢复" class="headerlink" title="ESB主主恢复"></a>ESB主主恢复</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 1、在常州上执行stop slave;# 2、在南通上执行stop slave;# 3、两台上分别执行show master status;# 4、南通生产数据库上执行change master to master_host&#x3D;&#39;192.168.186.166&#39;,master_user&#x3D;&#39;repadmin&#39;,master_password&#x3D;&#39;RepAdmin123!&#39;,master_log_file&#x3D;&#39;mysql-bin.000328&#39;,master_log_pos&#x3D;26733379;其中master_log_file和master_log_pos是在常州生产数据库上通过show master status;查看得到的值。# 5、常州生产数据库上执行change master to master_host&#x3D;&#39;172.16.8.166&#39;,master_user&#x3D;&#39;repadmin&#39;,master_password&#x3D;&#39;RepAdmin123!&#39;,master_log_file&#x3D;&#39;mysql-bin.001269&#39;,master_log_pos&#x3D;2644808;其中master_log_file和master_log_pos是在南通生产数据库上通过show master status;查看得到的值。# 6、在南通上执行start slave;# 7、在常州上执行start slave;# 8、查看状态show slave status\G;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ESB</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ESB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NFS服务搭建</title>
    <link href="/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="Centos7安装及配置-NFS-服务器"><a href="#Centos7安装及配置-NFS-服务器" class="headerlink" title="Centos7安装及配置 NFS 服务器"></a>Centos7安装及配置 NFS 服务器</h2><h3 id="步骤-1：安装-NFS-服务器-NFS-kernel-server"><a href="#步骤-1：安装-NFS-服务器-NFS-kernel-server" class="headerlink" title="步骤 1：安装 NFS 服务器 (NFS kernel server)"></a>步骤 1：安装 NFS 服务器 (NFS kernel server)</h3><p>若要设置服务器机器，就必须在机器上安装 NFS 服务器。</p><ol><li>安装 NFS 服务器。<div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum -y install nfs-utils rpcbind<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="步骤-2：创建输出目录"><a href="#步骤-2：创建输出目录" class="headerlink" title="步骤 2：创建输出目录"></a>步骤 2：创建输出目录</h3><p>NFS 客户端将在服务器机器上挂载一个目录，该目录已由 NFS 服务器输出。</p><ol><li>运行以下命令来指定挂载文件夹名称<div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;home&#x2F;zjnfschmod -R a+w &#x2F;home&#x2F;zjnfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="步骤-3：授予客户端机器访问-NFS-服务器的权限"><a href="#步骤-3：授予客户端机器访问-NFS-服务器的权限" class="headerlink" title="步骤 3：授予客户端机器访问 NFS 服务器的权限"></a>步骤 3：授予客户端机器访问 NFS 服务器的权限</h3><ol><li><p>运行以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;exports<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>将客户端信息添加到文件中。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">&#x2F;home&#x2F;zjnfs *(rw,sync,no_root_squash)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="步骤4：启动服务"><a href="#步骤4：启动服务" class="headerlink" title="步骤4：启动服务"></a>步骤4：启动服务</h3><ol><li><p>启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl start rpcbindsystemctl start nfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="步骤-4：应用配置"><a href="#步骤-4：应用配置" class="headerlink" title="步骤 4：应用配置"></a>步骤 4：应用配置</h3><ol><li><p>运行以下命令输出共享目录。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">exportfs -arv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="使用showmount命令测试NFS输出目录状态"><a href="#使用showmount命令测试NFS输出目录状态" class="headerlink" title="使用showmount命令测试NFS输出目录状态"></a>使用showmount命令测试NFS输出目录状态</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">showmount -e# 客户端测试showmount -e [NFS服务器IP]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>NFS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NFS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>maven常用操作</title>
    <link href="/2022/05/07/maven%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/07/maven%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="maven安装、配置"><a href="#maven安装、配置" class="headerlink" title="maven安装、配置"></a>maven安装、配置</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置MAVEN-HOME"><a href="#配置MAVEN-HOME" class="headerlink" title="配置MAVEN_HOME"></a>配置MAVEN_HOME</h4><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E9%85%8D%E7%BD%AE.png" alt="mvn配置"></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">C:\Users\Administrator&gt;mvn -vApache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-05T03:00:29+08:00)Maven home: D:\develop\apache-maven-3.6.1\bin\..Java version: 1.8.0_152, vendor: Oracle Corporation, runtime: D:\Java\jdk1.8.0_152\jreDefault locale: zh_CN, platform encoding: GBKOS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>看到此字样，即为成功。</p><h4 id="配置settings-conf，一般在maven根目录下的conf文件下"><a href="#配置settings-conf，一般在maven根目录下的conf文件下" class="headerlink" title="配置settings.conf，一般在maven根目录下的conf文件下"></a>配置settings.conf，一般在maven根目录下的conf文件下</h4><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/SETTINGS/1.0.0<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置jar包本地下载地址 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>D:\my_maven\repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroups</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>org.pentaho.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>com.pentaho.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginGroup</span><span class="token punctuation">></span></span>com.github.spotbugs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginGroups</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>devreaduser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>&#123;zIMyJWfHKfoHiBJAVsAgW4E5BcJzR+nhTtgPy0J+/rs=&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置私服认证 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>[username]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>[password]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 配置阿里仓库，加快下载 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>alimaven in central RELEASE.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun Maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>xxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://ip/repository/maven-ztgt/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Pentaho Public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>pentaho-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Pentaho Public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="maven常用操作"><a href="#maven常用操作" class="headerlink" title="maven常用操作"></a>maven常用操作</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><code>mvn -Dmaven.test.skip=true clean package</code></p><p>-Dmaven.test.skip=true：跳过测试</p><p>clean：先进行清理</p><h3 id="安装jar"><a href="#安装jar" class="headerlink" title="安装jar"></a>安装jar</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mvn install:install-file \ # 操作    -Dfile&#x3D;[XXX.jar] \ # jar包名称    -DgroupId&#x3D;[com.hmifo] \ # groupid    -DartifactId&#x3D;[hm-core-tool] \ # artifactid    -Dversion&#x3D;[1.0.0.RELEASE] \ # 版本    -Dpackaging&#x3D;jar # 格式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>需要和当前jar在同一级目录下执行</p><h3 id="上传jar到私服"><a href="#上传jar到私服" class="headerlink" title="上传jar到私服"></a>上传jar到私服</h3><ol><li>配置上传目标</li></ol><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distributionManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 这里和私服配置的id必须一致 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://ip/repository/maven-ztgt/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distributionManagement</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="2"><li>上传</li></ol><ul><li>命令上传</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mvn deploy:deploy-file \ # 上传操作    -DgroupId&#x3D;[com.hmifo] \ # groupid    -DartifactId&#x3D;[XXX] \ # artifactid    -Dversion&#x3D;[1.0.0] \ # 版本    -Dpacckaging&#x3D;jar \ # 格式    -Dfile&#x3D;[XXX.jar] \ # 文件名称    -DrepositoryId&#x3D;[ztgt-release] \ # 仓库id，和私服配置的必须一致    -Durl&#x3D;[http:&#x2F;&#x2F;192.168.182.187:82&#x2F;repository&#x2F;maven-ztgt&#x2F;] # 私服地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>idea上传</li></ul><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E4%B8%8A%E4%BC%A0.png" alt="mvn上传"></p><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ol><li><p>更新版本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 更新版本号 -DgenerateBackupPoms&#x3D;false  不生成备份文件mvn versions:set -DnewVersion&#x3D;[1.0.2-SNAPSHOT]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>更新子模块版本</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn -N versions:update-child-modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>版本回退</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 版本回滚，提交后就无法回滚了mvn versions:revert<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>版本提交</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn versions:commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h2 id="maven制作archetype"><a href="#maven制作archetype" class="headerlink" title="maven制作archetype"></a>maven制作archetype</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Archetype是Maven工程的模板工具包。使用Archetype提供的方法可以快速的构建和组织一致化的工程，解决在工作过程中创建一个新项目时需一堆繁琐的配置工作等。</p><h3 id="基于maven项目制作archetype"><a href="#基于maven项目制作archetype" class="headerlink" title="基于maven项目制作archetype"></a>基于maven项目制作archetype</h3><ol><li><p>准备好maven项目，将无关代码全部删除，只保留最基础的项目和结构</p></li><li><p>在项目的根目录下的pom中添加依赖</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>进入项目根目录，执行<code>mvn archetype:create-from-project</code>进行模板生成</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvncreatearchetype.png" alt="mvncreatearchetype"></p></li><li><p>进入项目的<font style="font-weight:bold;">/target/generated-sources/archetype</font>目录，执行<code>mvn clean install</code></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvninstallarchetypr.png" alt="mvninstallarchetypr"></p></li><li><p>idea使用自定义archetype</p><ol><li><p>建立自己的项目模板</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype.png" alt="createproformarchetype"></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype2.png" alt="createproformarchetype2"></p><blockquote><p>1.<font style="background:#EFDAA2">archetype-catalog.xml</font>一般在<font style="background:#EFDAA2">.m2</font>的目录下，默认为用户家目录</p><p>2.如果修改过maven的仓库保存路径的，一般就在修改过的目录下，可以找到a<font style="background:#EFDAA2">rchetype-catalog.xml</font>文件</p><p>3.为了正确执行生成操作，建议在用户家目录下新建<font style="background:#EFDAA2">.m2</font>文件夹，然后把maven的<font style="background:#EFDAA2">settings.xml</font>和<font style="background:#EFDAA2">archetype-catlog.xml</font>放进去</p></blockquote></li><li><p>填写自己项目的信息，即可进行生成</p></li></ol></li><li><p>删除自定义的archetype</p><p>一般在<font style="background:#EFDAA2">C:\Users\Administrator\AppData\Local\JetBrains\IntelliJIdea2020.1\Maven\Indices</font>或者<font style="background:#EFDAA2">C:\Users\Administrator.idea\Maven\Indices</font>文件夹下，找到<font style="background:#EFDAA2">UserArchetypes.xml</font>文件，去除想要删除archetype模板，重启idea即可</p></li></ol><h3 id="maven的配置文件使用密文"><a href="#maven的配置文件使用密文" class="headerlink" title="maven的配置文件使用密文"></a>maven的配置文件使用密文</h3><blockquote><p>使用场景：如果把明文设置在 <code>settings.xml</code> 中，产生安全隐患，为此需要使用密文存储。</p></blockquote><ol><li><p>使用maven提供的加密功能</p><p>在 Maven Password Encryption中有两个概念，</p><ul><li>master password （加密其他密码的密码），一般配置在<code>settings-security.xml</code>文件中</li><li>实际使用密码，配置在<code>settings.xml</code>文件中</li></ul></li><li><p>具体步骤</p><ol><li><p>设置master密码</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn --encrypt-master-password [pwd]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>配置<code>$&#123;MAVEN_HOME&#125;\.m2\settings-security.xml</code>，如果不存在，则手动创建</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settingsSecurity</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>master</span><span class="token punctuation">></span></span>[上一步生成的密码]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>master</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settingsSecurity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>设置实际使用的密码</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn --encrpty-password [pwd] <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>配置<code>settings.xml</code>文件</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>ztgt-release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>[上一步生成的密钥]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>maven</category>
      
    </categories>
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下skywalking8.3实践，监控JAVA应用</title>
    <link href="/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/"/>
    <url>/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前提：需要提前配置JDK，至少在1.8版本以上。</p><p>skywalking8.3-es7版本，下载地址：<a href="https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz">https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz</a></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget https:&#x2F;&#x2F;archive.apache.org&#x2F;dist&#x2F;skywalking&#x2F;8.3.0&#x2F;apache-skywalking-apm-es7-8.3.0.tar.gztar -zxvf apache-skywalking-apm-es7-8.3.0.tar.gzmv apache-skywalking-apm-es7-bin &#x2F;usr&#x2F;local&#x2F;skwalking-es7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;usr&#x2F;local&#x2F;skywalking-es7vi webapp&#x2F;webapp.yml# 修改端口号，如果端口没被占用，可以不修改server:  port: 8080 # UI默认端口collector:  path: &#x2F;graphql  ribbon:    ReadTimeout: 10000    listOfServers: 172.16.214.41:12800 # 这里改成自己电脑的IP    vi config&#x2F;application.yml# 主要修改存储为es7storage:  selector: $&#123;SW_STORAGE:elasticsearch7&#125; # 修改后端存储  elasticsearch7:    nameSpace: $&#123;SW_NAMESPACE:&quot;skywalking&quot;&#125; # 修改es中索引的前缀    clusterNodes: $&#123;SW_STORAGE_ES_CLUSTER_NODES:172.16.214.107:9200&#125; # 配置es的地址    user: $&#123;SW_ES_USER:&quot;elastic&quot;&#125; # es登录用户名，如果没有则为空    password: $&#123;SW_ES_PASSWORD:&quot;ccc7711866&quot;&#125; # es登录密码，如果没有则为空<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">bin&#x2F;startup.shtail -f logs&#x2F;skywalking-oap-server.log # 可以看到启动情况netstat -nlp|grep java# 需要看到三个端口，8080为UI端口，11800为grpc通讯端口，12800为http通讯端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="监控JAVA应用"><a href="#监控JAVA应用" class="headerlink" title="监控JAVA应用"></a>监控JAVA应用</h3><h4 id="方式1，本地通过java的vm启动参数进行"><a href="#方式1，本地通过java的vm启动参数进行" class="headerlink" title="方式1，本地通过java的vm启动参数进行"></a>方式1，本地通过java的vm启动参数进行</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-Dskywalking.agent.service_name&#x3D;blade-user-local \ # swywalking监控显示应用名称-Dskywalking.collector.backend_service&#x3D;192.168.186.66:11800 \ # skywalking后端地址-jar XXXX.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-javavm.png" alt="sk-javavm"></p><h4 id="方式2，通过将skywalking-agent打入镜像包进行"><a href="#方式2，通过将skywalking-agent打入镜像包进行" class="headerlink" title="方式2，通过将skywalking-agent打入镜像包进行"></a>方式2，通过将skywalking-agent打入镜像包进行</h4><div class="code-wrapper"><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM alpine-java:openjdk8-openj9ENV LANG&#x3D;C.UTF-8RUN set -eux \&amp;&amp; mkdir &#x2F;biz \&amp;&amp; mkdir &#x2F;usr&#x2F;skywalking&#x2F;agentADD .&#x2F;*.jar .&#x2F;app.jarADD .&#x2F;skywalking-agent &#x2F;usr&#x2F;skywalking&#x2F;agentWORKDIR &#x2F;bizENTRYPOINT [&quot;java&quot;, &quot;-javaagent:&#x2F;usr&#x2F;skywalking&#x2F;agent&#x2F;skywalking-agent.jar&quot;, &quot;-Dskywalking.agent.service_name&#x3D;blade-user-linux&quot;, &quot;-Dskywalking.collector.backend_service&#x3D;[skywalking-oap服务的地址]:11800&quot;, &quot;-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom&quot;, &quot;-jar&quot;, &quot;app.jar&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="方式3，通过Kubernetes的sidecar模式进行（推荐）"><a href="#方式3，通过Kubernetes的sidecar模式进行（推荐）" class="headerlink" title="方式3，通过Kubernetes的sidecar模式进行（推荐）"></a>方式3，通过Kubernetes的sidecar模式进行（推荐）</h4><p>方式1，通过参数输入方式只能在本地和不进行容器化的时候使用，而且服务器上必须有skywalking-agent的包；方式2，通过制作镜像时将skywalking相关文件集成进去，制作的业务镜像大小变大，而且没办法动态修改监控内容。采用sidecar模式，本身不需要改变原有镜像的打包方式，其次，对于业务开发来说透明，开发人员无需关系skywalking内容。</p><h5 id="1-制作自己的skywalking-agengt镜像"><a href="#1-制作自己的skywalking-agengt镜像" class="headerlink" title="1. 制作自己的skywalking-agengt镜像"></a>1. 制作自己的skywalking-agengt镜像</h5><div class="code-wrapper"><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM busybox:latestENV LANG&#x3D;C.UTF-8RUN set -eux \&amp;&amp; mkdir -p &#x2F;usr&#x2F;skywalking&#x2F;agentadd .&#x2F;skywalking-agent &#x2F;usr&#x2F;skywalking&#x2F;agentWORKDIR &#x2F;usr&#x2F;skywalking&#x2F;agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h5 id="2-在yaml文件中，通过initContainer方式进行集成"><a href="#2-在yaml文件中，通过initContainer方式进行集成" class="headerlink" title="2.在yaml文件中，通过initContainer方式进行集成"></a>2.在yaml文件中，通过initContainer方式进行集成</h5><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>deploy  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent<span class="token punctuation">-</span>sidecar          <span class="token key atrule">image</span><span class="token punctuation">:</span> harbor.zt.net.cn/library/skywalking<span class="token punctuation">-</span>agent<span class="token punctuation">-</span>sidecar<span class="token punctuation">:</span>8.3.0 <span class="token comment"># 自己的agent镜像</span>          <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"sh"</span><span class="token punctuation">]</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">[</span>              <span class="token string">"-c"</span><span class="token punctuation">,</span>              <span class="token string">"mkdir -p /skywalking/agent &amp;&amp; cp -r /usr/skywalking/agent/* /skywalking/agent"</span>            <span class="token punctuation">]</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span> <span class="token comment"># 文件挂在点</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /skywalking/agent              <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo          <span class="token key atrule">image</span><span class="token punctuation">:</span> harbor.zt.net.cn/bladex/skywalking<span class="token punctuation">-</span>test<span class="token punctuation">-</span>demo<span class="token punctuation">:</span>v1          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> JAVA_TOOL_OPTIONS <span class="token comment"># 通过JAVA_TOOL_OPTIONS参数进行集成</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>javaagent<span class="token punctuation">:</span>/usr/skywalking/agent/skywalking<span class="token punctuation">-</span>agent.jar            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SW_AGENT_NAME <span class="token comment"># 应用在skywalking中的名称</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> skywalking<span class="token punctuation">-</span>demo            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SW_AGENT_COLLECTOR_BACKEND_SERVICES <span class="token comment"># skywalking的oap服务地址</span>              <span class="token key atrule">value</span><span class="token punctuation">:</span> 192.168.186.34<span class="token punctuation">:</span><span class="token number">11800</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">limits</span><span class="token punctuation">:</span>              <span class="token key atrule">memory</span><span class="token punctuation">:</span> <span class="token string">"1000Mi"</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"500m"</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span> <span class="token comment"># 文件挂在点</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /usr/skywalking/agent      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sw<span class="token punctuation">-</span>agent <span class="token comment"># 文件挂在点，这里给一个空文件</span>          <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always      <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> harbor<span class="token punctuation">-</span>secret<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo  <span class="token key atrule">name</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>svc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> skywalk<span class="token punctuation">-</span>demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-apm.png" alt="sk-apm"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-db.png" alt="sk-db"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-topology.png" alt="sk-topology"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>skywalking</category>
      
    </categories>
    
    
    <tags>
      
      <tag>skywalking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各种运维处理</title>
    <link href="/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/"/>
    <url>/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="kubectl操作"><a href="#kubectl操作" class="headerlink" title="kubectl操作"></a>kubectl操作</h3><ol><li>批量操作<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 批量删除kube-system空间下状态为“驱逐”的podkubectl get pod -n kube-system|grep Evicted|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div>批量操作说明，所有批量操作都可以采用此方案<br></li></ol><ul><li>使用命令查询出需要批量操作的内容</li><li>使用 <code>awk</code> 打印出内容的标识</li><li>使用 <code>xargs</code> 进行命令的拼接</li></ul><ol start="2"><li>产生集群管理员的密钥<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adm_account&#x3D;&quot;k8s-dash-admin&quot;# 产生sakubectl create serviceaccount $&#123;adm_account&#125; -n kube-system# 产生集群角色绑定kubectl create clusterrolebinding $&#123;adm_account&#125; --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:$&#123;adm_account&#125;# 查看密钥kubectl -n kube-system describe secrets $(kubectl -n kube-system get secret | grep $&#123;adm_account&#125; | awk &#39;&#123;print $1&#125;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="docker操作"><a href="#docker操作" class="headerlink" title="docker操作"></a>docker操作</h3><ol><li>解决overlay2空间越来越大问题<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 进入目录cd cd &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2# 查看文件大小du -h --max-depth&#x3D;1# 查看占用空间的pid，以及对应的容器名称docker ps -q | xargs docker inspect --format &#39;&#123;&#123;.State.Pid&#125;&#125;, &#123;&#123;.Name&#125;&#125;, &#123;&#123;.GraphDriver.Data.WorkDir&#125;&#125;&#39; | grep &quot;[overlay2的文件名称]&quot;# 解决方法（会删除对应的容器和对应镜像）docker stop [容器名称] &amp;&amp; docker rm [容器名称] &amp;&amp; docker rmi [镜像id]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="curl操作"><a href="#curl操作" class="headerlink" title="curl操作"></a>curl操作</h3><ol><li>发送get请求<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl [-X GET] &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;api&#x2F;ztgt-mdm&#x2F;getMdmInfo&#x2F;deptInfo&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li>发送post请求<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl -H &quot;Content-Type: application&#x2F;json&quot; -H &quot;serviceCode: 1052125D01&quot; -H &quot;sourceCode: 1052&quot; -H &quot;requestId: fc7deb67-6168-4d70-9c22-cbdd16a99f28&quot; -X POST -d &#39;&#123;&quot;COMPID&quot;:&quot;1339&quot;,&quot;PROJECTNO&quot;:&quot;NTGC20201015&quot;,&quot;AMT&quot;:0,&quot;TYPE&quot;:&quot;GC&quot;,&quot;PROJECTNAME&quot;:&quot;加油点（柴油）单元&quot;&#125;&#39; &quot;http:&#x2F;&#x2F;esb-pre.zt.net.cn:18080&#x2F;esb&#x2F;comm&#x2F;api&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol><h3 id="Linux防火墙操作"><a href="#Linux防火墙操作" class="headerlink" title="Linux防火墙操作"></a>Linux防火墙操作</h3><ol><li><p>firewalld的基本使用</p><table><thead><tr><th></th><th>操作</th><th align="left">命令</th></tr></thead><tbody><tr><td></td><td>启动</td><td align="left"><code>systemctl start firewalld</code></td></tr><tr><td></td><td>关闭</td><td align="left"><code>systemctl stop firewalld</code></td></tr><tr><td></td><td>查看状态</td><td align="left"><code>systemctl status firewalld</code></td></tr><tr><td></td><td>开机禁用</td><td align="left"><code>systemctl disable firewalld</code></td></tr><tr><td></td><td>开机启动</td><td align="left"><code>systemctl enable firewalld</code></td></tr></tbody></table></li><li><p>firewalld-cmd操作</p><table><thead><tr><th></th><th>操作</th><th>命令</th></tr></thead><tbody><tr><td></td><td>查看版本</td><td><code>firewall-cmd --version</code></td></tr><tr><td></td><td>显示状态</td><td><code>firewall-cmd --state</code></td></tr><tr><td></td><td>查看所有打开的端口</td><td><code>firewall-cmd --zone=public --list-ports</code></td></tr><tr><td></td><td>更新防火墙规则</td><td><code>firewall-cmd --reload</code></td></tr><tr><td></td><td>查看区域信息</td><td><code>firewall-cmd --get-active-zones</code></td></tr><tr><td></td><td>查看指定接口所属区域</td><td><code>firewall-cmd --get-zone-of-interface=eth0</code></td></tr><tr><td></td><td>拒绝所有包</td><td><code>firewall-cmd --panic-on</code></td></tr><tr><td></td><td>取消拒绝状态</td><td><code>firewall-cmd --panic-off</code></td></tr><tr><td></td><td>查看是否拒绝</td><td><code>firewall-cmd --query-panic</code></td></tr><tr><td></td><td>添加</td><td><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></td></tr><tr><td></td><td>删除</td><td><code>firewall-cmd --zone= public --remove-port=80/tcp --permanent</code></td></tr></tbody></table></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>kubectl</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装sonarqube-8.9.7</title>
    <link href="/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/"/>
    <url>/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/</url>
    
    <content type="html"><![CDATA[<h3 id="下载sonarqube"><a href="#下载sonarqube" class="headerlink" title="下载sonarqube"></a>下载sonarqube</h3><p>社区版下载：<a href="https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip">https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip</a></p><p>sonarqube从7.9开始已经不支持mysql了，所以需要提前安装jdk和pg。</p><p>本次环境前提：</p><table><thead><tr><th>序号</th><th>环境</th><th>版本</th></tr></thead><tbody><tr><td>1</td><td>jdk</td><td>14</td></tr><tr><td>2</td><td>postgresql</td><td>14</td></tr><tr><td>3</td><td>sonarqube</td><td>8.9.7</td></tr></tbody></table><h3 id="新建sqonarqube数据库"><a href="#新建sqonarqube数据库" class="headerlink" title="新建sqonarqube数据库"></a>新建sqonarqube数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#创建sonar数据库create database sonar;#创建sonar用户create user sonar;#设置sonar用户密码(否则会导致连不上数据库)alter user sonar with password &#39;postgres&#39;;#给sonar授权alter role sonar createdb;alter role sonar superuser;alter role sonar createrole;    #更改sonar数据库拥有者(这一步是必须的，否则会sonarqube会连接失败)alter database sonar owner to sonar；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="修改系统配置"><a href="#修改系统配置" class="headerlink" title="修改系统配置"></a>修改系统配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;sysctl.conf# 在文件末尾添加如下vm.max_map_count&#x3D;262144fs.file-max&#x3D;65536# 生效&#x2F;sbin&#x2F;sysctl -pvi &#x2F;etc&#x2F;profile# 在文件末尾添加如下ulimit -n 65536# 生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="创建sonar用户"><a href="#创建sonar用户" class="headerlink" title="创建sonar用户"></a>创建sonar用户</h3><p>因为sonarquber无法使用<code>root</code>用户启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 添加用户useradd sonar# 设置密码passwd sonar# 分配权限chown -R sonar:sonar &#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置数据库连接和ES"><a href="#配置数据库连接和ES" class="headerlink" title="配置数据库连接和ES"></a>配置数据库连接和ES</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7&#x2F;conf&#x2F;sonar.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonardb.png" alt="sonardb"></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarhost.png" alt="sonarhost"></p><p>默认情况下，Elasticsearch数据存储在$ SONARQUBE-HOME / data中，但不建议将其用于生产实例。相反，您应该将此数据存储在其他位置，最好是在具有快速I / O的专用卷中。除了保持可接受的性能外，这样做还可以简化SonarQube的升级</p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonares.png" alt="sonares"></p><h3 id="创建必要的目录、权限"><a href="#创建必要的目录、权限" class="headerlink" title="创建必要的目录、权限"></a>创建必要的目录、权限</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;sonarqube&#x2F;datamkdir -p &#x2F;data&#x2F;sonarqube&#x2F;tempchown -R sonar:sonar &#x2F;data&#x2F;sonarqube<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="安装sonar-scanner扫描器"><a href="#安装sonar-scanner扫描器" class="headerlink" title="安装sonar-scanner扫描器"></a>安装sonar-scanner扫描器</h3><p>下载地址：<a href="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip">https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip</a></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压，放到&#x2F;usr&#x2F;local下unzip sonar-scanner-cli-4.7.0.2747-linux.zipvi &#x2F;usr&#x2F;local&#x2F;sonar-scanner-4.7.0.2747-linux&#x2F;conf&#x2F;sonar-scanner.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarscanner.png" alt="sonarscanner"></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 创建软连接，将sonar-scanner改为全局即可使用ln -s &#x2F;usr&#x2F;local&#x2F;sonar-scanner-4.7.0.2747-linux&#x2F;bin&#x2F;sonar-scanner &#x2F;usr&#x2F;bin&#x2F;sonar-scanner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p><font color='red' size='12px'>sonarqube必须以非<code>root</code>用户权限</font></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">su - sonar&#x2F;usr&#x2F;local&#x2F;sonarqube-8.9.7&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>登录<code>http://[IP]:9000</code>，看到登录页面即为成功。初始账密：<code>admin/admin</code></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarsucc.png" alt="登陆页面"></p>]]></content>
    
    
    <categories>
      
      <category>sonarqube</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>sonarqube</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9离线安装postgresql的14版本</title>
    <link href="/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/"/>
    <url>/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="下载必要安装包"><a href="#下载必要安装包" class="headerlink" title="下载必要安装包"></a>下载必要安装包</h3><table><thead><tr><th>序号</th><th>软件名称</th><th>下载地址</th></tr></thead><tbody><tr><td>1</td><td>libicu-50.2-4.el7_7.x86_64.rpm</td><td><a href="http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm">http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm</a></td></tr><tr><td>2</td><td>postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>3</td><td>postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>4</td><td>postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr></tbody></table><h3 id="安装postgresql并启动"><a href="#安装postgresql并启动" class="headerlink" title="安装postgresql并启动"></a>安装postgresql并启动</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rpm -ivh libicu-50.2-4.el7_7.x86_64.rpmrpm -ivh postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpmrpm -ivh postgresql14-14.2-1PGDG.rhel7.x86_64.rpmrpm -ivh postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm# 启动&#x2F;usr&#x2F;pgsql-14&#x2F;bin&#x2F;postgresql-14-setup initdb# 设置开机启动systemctl enable postgresql-14systemctl start postgresql-14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置postgresql"><a href="#配置postgresql" class="headerlink" title="配置postgresql"></a>配置postgresql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;14&#x2F;data&#x2F;postgresql.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgseting.png" alt="pgseting"></p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;14&#x2F;data&#x2F;pg_hba.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pghba.png" alt="pghba"></p><h3 id="重启postgresql"><a href="#重启postgresql" class="headerlink" title="重启postgresql"></a>重启postgresql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl restart postgresql-14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>以上方式安装默认会创建<code>postgres</code>用户</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 切换用户su - postgrespsql# 创建数据库用户create user pg password &#39;pg&#39;;# 赋予账号权限alter user pg supperuser;# 新建数据库create database pg;exit# 重新登录su postgrespsql -U pg -h localhost -W# 输入密码 pg# 显示数据库\l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgdb.png" alt="pghba"></p><p>到此，数据库成功。</p>]]></content>
    
    
    <categories>
      
      <category>postgresql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>postgresql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装Mysql-5.7.21</title>
    <link href="/2022/03/31/mysql%E5%AE%89%E8%A3%85/"/>
    <url>/2022/03/31/mysql%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="解压到目录"><a href="#解压到目录" class="headerlink" title="解压到目录"></a>解压到目录</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压tar -zxvf mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz# 移动目录mv mysql-5.7.21-linux-glibc2.12-x86_64 &#x2F;usr&#x2F;local&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="新增用户、组和数据目录"><a href="#新增用户、组和数据目录" class="headerlink" title="新增用户、组和数据目录"></a>新增用户、组和数据目录</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 新增组groupadd mysql# 新增用户useradd -r -g mysql mysql# 创建目录mkdir -p &#x2F;data&#x2F;mysql# 分配权限chown mysql:mysql -R &#x2F;data&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置my-cnf"><a href="#配置my-cnf" class="headerlink" title="配置my.cnf"></a>配置my.cnf</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;my.cnf# 可以采用这个[mysqld]bind-address&#x3D;0.0.0.0port&#x3D;3306user&#x3D;mysqlbasedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysqldatadir&#x3D;&#x2F;data&#x2F;mysqlsocket&#x3D;&#x2F;tmp&#x2F;mysql.socklog-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.errpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.pid#character configcharacter_set_server&#x3D;utf8mb4symbolic-links&#x3D;0explicit_defaults_for_timestamp&#x3D;true# 也可以采用这个[mysql]# 设置mysql客户端默认字符集default-character-set&#x3D;utf8socket&#x3D;&#x2F;tmp&#x2F;mysql.sock[mysqld]#skip-name-resolve#skip-grant-tables#设置3306端口port&#x3D;3306socket&#x3D;&#x2F;tmp&#x2F;mysql.sock# 设置mysql的真正的安装目录 （看自己的是在哪里)basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql# 设置mysql数据库的数据的存放目录 （看自己的是在哪里)datadir&#x3D;&#x2F;data&#x2F;mysql# 允许最大连接数max_connections&#x3D;200# 服务端使用的字符集默认为8比特编码的latin1字符雿character-set-server&#x3D;utf8# 创建新表时将使用的默认存储引擿default-storage-engine&#x3D;INNODB#lower_case_table_name&#x3D;1max_allowed_packet&#x3D;16M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin.&#x2F;mysqld --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F; --user&#x3D;mysql --initialize# 成功以后，查看密码cat &#x2F;data&#x2F;mysql&#x2F;mysql.err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqlservice start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -p# 输入刚刚获得的密码# 修改密码SET PASSWORD &#x3D; PASSWORD(&#39;root&#39;);ALTER USER &#39;root&#39;@&#39;localhost&#39; PASSWORD EXPIRE NEVER;FLUSH PRIVILEGES;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="新增软连接"><a href="#新增软连接" class="headerlink" title="新增软连接"></a>新增软连接</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 不用每次都进入mysql目录运行命令ln -s  &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql    &#x2F;usr&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="mysql数据丢失恢复"><a href="#mysql数据丢失恢复" class="headerlink" title="mysql数据丢失恢复"></a>mysql数据丢失恢复</h3><blockquote><p>当mysql由于某些原因突然无法启动，且没有做过备份的情况下，使用mysql的data目录进行数据恢复</p></blockquote><ol><li><p>修改原my.cnf文件，重新知道一个data目录</p></li><li><p>启动mysql，进入mysql命令行，看是否启动成功</p></li><li><p>停止mysql，否则无法备份</p></li><li><p>在新的data目录下，备份文件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp auto.cnf auto.cnf.bakcp ib_buffer_pool ib_buffer_pool.bakcp ibdata1 ibdata1.bakcp ib_logfile0 ib_logfile0.bakcp ib_logfile1 ib_logfile1.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>将需要恢复的目录和文件进行打包</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">tar -zcvf backup.tar.gz auto.cnf ib_buffer_pool ibdata1 ib_logfile0 ib_logfile1 [需要恢复的数据库目录]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>将压缩包导入进新的data目录，并解压</p></li><li><p>重新启动mysql，查看数据是否恢复</p></li><li><p>重新在新的mysql上分配用户和权限</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>调用ES的Rest Api</title>
    <link href="/2022/03/28/ES/"/>
    <url>/2022/03/28/ES/</url>
    
    <content type="html"><![CDATA[<h3 id="ES介绍"><a href="#ES介绍" class="headerlink" title="ES介绍"></a>ES介绍</h3><p><strong><a href="https://www.elastic.co/cn/elasticsearch/">Elasticsearch</a> 是一个分布式、高扩展、高实时的搜索与数据分析引擎。它能很方便的使大量数据具有搜索、分析和探索的能力。充分利用Elasticsearch的水平伸缩性，能使数据在生产环境变得更有价值。Elasticsearch 的实现原理主要分为以下几个步骤，首先用户将数据提交到Elasticsearch 数据库中，再通过分词控制器去将对应的语句分词，将其权重和分词结果一并存入数据，当用户搜索数据时候，再根据权重将结果排名，打分，再将返回结果呈现给用户。</strong></p><h3 id="Rest-Api使用"><a href="#Rest-Api使用" class="headerlink" title="Rest Api使用"></a>Rest Api使用</h3><ol><li><p>新建索引</p><p><strong>PUT</strong> <code>http://192.168.186.34:9200/[索引名称]?pretty</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"acknowledged"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"shards_acknowledged"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"index"</span><span class="token operator">:</span> <span class="token string">"esb01"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询所有[指定索引名称]索引</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/_cat/indices/[指定查看索引名称]?v</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">health status index          uuid                   pri rep docs.count docs.deleted store.size pri.store.sizeyellow open   esb01          YGAh5h_kRoCsPloXy-izxg   1   1          0            0       208b           208byellow open   esb1           oQKqdAQXShCJuMOzVdfs7A   1   1          2            0     11.6kb         11.6kbyellow open   esb            -b6_v24FRS2tp9y-ohdouw   1   1     156566            0     68.8mb         68.8mbyellow open   esb-2022-03-28 PSwgzv8rR3iZcPOxbZuPTw   1   1         88            0    205.9kb        205.9kbgreen  open   .kibana_1      UF0_tkz0QjChT-ToRowqUQ   1   0       1479           40    336.4kb        336.4kbyellow open   t1             uXd6GoLyQpK82YkagbO_ag   1   1          2            0     11.7kb         11.7kbyellow open   t2             tvbutoedSNWYxmy6TTFhTw   1   1          2            0     11.7kb         11.7kbyellow open   esb-2022-03-26 i8e4g_0fTzqFtn-OYN27pA   1   1       4762            0      2.6mb          2.6mbyellow open   esb-2022-03-27 wrm87nSJT-K-pRFG0oofXg   1   1        576            0    705.6kb        705.6kbyellow open   t3             -nBkF1RzRxWUOlYVExZhTw   1   1          1            0      5.9kb          5.9kb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询索引默认索引配置</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称]/_mapping?pretty</code></p><p>返回结果：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"esb-2022-03-27"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"mappings"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"ACCTDATE"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token property">"requestId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token property">"ignore_above"</span><span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>新增数据</p><p><strong>POST</strong> <code>http://192.168.186.34:9200/[索引名称]/[type，一般为json/doc]?pretty</code></p><p>请求Body：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"transTime"</span><span class="token operator">:</span> <span class="token number">1648373786067</span><span class="token punctuation">,</span><span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"pass"</span><span class="token operator">:</span> <span class="token string">"1111111111"</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"11111111"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token string">"1090109102"</span><span class="token punctuation">,</span><span class="token property">"requestId"</span><span class="token operator">:</span> <span class="token string">"aeb9adf2-618f-4c6b-a965-5bea4698e893"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>返回结果：（以json为例）</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"_index"</span><span class="token operator">:</span> <span class="token string">"esb-2022-03-27"</span><span class="token punctuation">,</span><span class="token property">"_type"</span><span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span><span class="token property">"_id"</span><span class="token operator">:</span> <span class="token string">"h_XCyn8Bthbf_40jLeF_"</span><span class="token punctuation">,</span><span class="token property">"_version"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"result"</span><span class="token operator">:</span> <span class="token string">"created"</span><span class="token punctuation">,</span><span class="token property">"_shards"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"total"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"successful"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"failed"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token number">535</span><span class="token punctuation">,</span><span class="token property">"_primary_term"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查询数据</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称，支持通配符，可实现多个索引一起查询]/_search?pretty=true</code></p><p>请求Body：</p><ul><li>查询所有数据</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"query"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"match_all"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"from"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"size"</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>    <span class="token property">"sort"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"_seq_no"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token property">"order"</span><span class="token operator">:</span><span class="token string">"desc"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>根据某个字段查询（精确）</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"match_phrase[match]"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"[serviceCode，查询的某个字段]"</span><span class="token operator">:</span><span class="token string">"test001"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>查询某个字段是否存在</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"exists"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token property">"field"</span><span class="token operator">:</span><span class="token string">"[字段名称]"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>检索某个值</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"simple_query_string"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token string">"[具体值]"</span><span class="token punctuation">,</span><span class="token property">"default_operator"</span><span class="token operator">:</span> <span class="token string">"and"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>多条件查询</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"must"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"match_phrase"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"serviceCode"</span><span class="token operator">:</span> <span class="token string">"1090109102"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"exists"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"field"</span><span class="token operator">:</span> <span class="token string">"data.name"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"from"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token property">"sort"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"_seq_no"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"order"</span><span class="token operator">:</span> <span class="token string">"desc"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>范围查询</li></ul><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"range"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"[transTime,范围字段]"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"gte"</span><span class="token operator">:</span> <span class="token number">1648426657334</span><span class="token punctuation">,</span>        <span class="token property">"lte"</span><span class="token operator">:</span> <span class="token number">1648430679534</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="实际应用示例，以ESB消息检索为例"><a href="#实际应用示例，以ESB消息检索为例" class="headerlink" title="实际应用示例，以ESB消息检索为例"></a>实际应用示例，以ESB消息检索为例</h3><p><img src="/img/ES/es%E6%B6%88%E6%81%AF%E6%A3%80%E7%B4%A2.png" alt="es消息检索"></p><ul><li><p>查询所有消息</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><h3 id="ES报错处理"><a href="#ES报错处理" class="headerlink" title="ES报错处理"></a>ES报错处理</h3><ol><li><p><strong>==<font color="red">Limit of total fields [1000] has been exceeded</font>==</strong></p><p>原因：ES对mapping做了映射保护，防止mapping爆炸。</p><p>解决方法：<strong>index.mapping.total_fields.limit：</strong>本设置允许您限制可手动或动态创建的字段映射的数量，以防止错误的文档导致映射爆炸，索引中的最大字段数。默认值为1000。</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT http:&#x2F;&#x2F;192.168.186.34:9200&#x2F;[索引名称]&#x2F;_settings -d &#39;&#123;&quot;index.mapping.total_fields.limit&quot;: [mapping数量,50000]&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>Elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Http</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx常用配置</title>
    <link href="/2022/03/25/ngcfg/"/>
    <url>/2022/03/25/ngcfg/</url>
    
    <content type="html"><![CDATA[<h3 id="location匹配规则"><a href="#location匹配规则" class="headerlink" title="location匹配规则"></a>location匹配规则</h3><ol><li>= 表示精确匹配。只有请求的url路径与后面的字符串完全相等时，才会命中。</li><li>^~ 表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找。</li><li>~ 表示该规则是使用正则定义的，区分大小写。</li><li>~* 表示该规则是使用正则定义的，不区分大小写。<br>注意：nginx按照上面的顺序进行优先匹配，一旦匹配直接退出。</li></ol><p>剩下的匹配，会按照<strong>最长匹配长度优先级来匹配</strong>，就是谁匹配的多就用谁。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location &#x2F;document &#123;        return 701;    &#125;    location ~* ^&#x2F;docume.*$ &#123;        return 702;    &#125;    location ~* ^&#x2F;document$ &#123;        return 703;    &#125;&#125;curl -I  website.com:8080&#x2F;document 702# 匹配702 因为正则的优先级更高,而且正则是一旦匹配到就直接退出 所以不会再匹配703<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location ~* ^&#x2F;docume.*$ &#123;        return 701;    &#125;    location ^~ &#x2F;doc &#123;        return 702;    &#125;    location ~* ^&#x2F;document$ &#123;        return 703;    &#125;&#125;curl http:&#x2F;&#x2F;website.com&#x2F;documentHTTP&#x2F;1.1 702# 匹配702 因为 ^~精确匹配的优先级比正则高 也是匹配到之后支持退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    server_name website.com;    location &#x2F;doc &#123;        return 702;    &#125;    location &#x2F;docu &#123;        return 701;    &#125;&#125;# 701 前缀匹配匹配是按照最长匹配，跟顺序无关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="history模式、跨域、缓存、反向代理"><a href="#history模式、跨域、缓存、反向代理" class="headerlink" title="history模式、跨域、缓存、反向代理"></a>history模式、跨域、缓存、反向代理</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># html设置history模式location &#x2F; &#123;    index index.html index.htm;    proxy_set_header Host $host;    # history模式最重要就是这里    try_files $uri $uri&#x2F; &#x2F;index.html;    # index.html文件不可以设置强缓存 设置协商缓存即可    add_header Cache-Control &#39;no-cache, must-revalidate, proxy-revalidate, max-age&#x3D;0&#39;;&#125;# 接口反向代理location ^~ &#x2F;api&#x2F; &#123;    # 跨域处理 设置头部域名    add_header Access-Control-Allow-Origin *;    # 跨域处理 设置头部方法    add_header Access-Control-Allow-Methods &#39;GET,POST,DELETE,OPTIONS,HEAD&#39;;    # 改写路径    rewrite ^&#x2F;api&#x2F;(.*)$ &#x2F;$1 break;    # 反向代理    proxy_pass http:&#x2F;&#x2F;static_env;    proxy_set_header Host $http_host;&#125;location ~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ &#123;    # 静态资源设置七天强缓存    expires 7d;    access_log off;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="以目录区分多个history单文件"><a href="#以目录区分多个history单文件" class="headerlink" title="以目录区分多个history单文件"></a>以目录区分多个history单文件</h3><p>因为不可能每一个项目开启一个域名，仅仅指向通过增加路径来划分多个网站，比如：</p><ol><li><strong>ntu820.top/abc/login</strong> 访问abc登录页</li><li><strong>ntu820.top/def/login</strong> 访问def登录页<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">server &#123;    listen 80;    server_name ntu820.top;    index index.html index.htm;    # 通过正则来匹配捕获 [abc|def]中间的这个路径    location ~ ^&#x2F;([^\&#x2F;]+)&#x2F;(.*)$ &#123;        try_files $uri $uri&#x2F; &#x2F;$1&#x2F;dist&#x2F;index.html &#x3D;404;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>基于upstream做负载均衡,中间会涉及一些相关的策略比如<strong>ip_hash、weight</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream backserver&#123;     # 哈希算法，自动定位到该服务器 保证唯一ip定位到同一部机器 用于解决session登录态的问题    ip_hash;     server 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)     server 127.0.0.1:8080 weight&#x3D;2; (weight 默认为1.weight越大，负载的权重就越大)     server 127.0.0.1:6060;     server 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器) &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="灰度部署"><a href="#灰度部署" class="headerlink" title="灰度部署"></a>灰度部署</h3><p>获取头部值，在nginx中可以通过$http_xxx来获取变量，然后根据header值来进行回复发布</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream stable &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60; &#125;upstream canara &#123;   server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;&#125;server &#123;    listen 80;    server_name  xxx;    # 设置默认    set $group &quot;stable&quot;;    # 根据cookie头部设置接入的服务    if ($http_cookie ~* &quot;tts_version_id&#x3D;canara&quot;)&#123;        set $group canara;    &#125;    if ($http_cookie ~* &quot;tts_version_id&#x3D;stable&quot;)&#123;        set $group stable;    &#125;    location &#x2F; &#123;        proxy_pass http:&#x2F;&#x2F;$group;        proxy_set_header   Host             $host;        proxy_set_header   X-Real-IP        $remote_addr;        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;        index  index.html index.htm;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="优雅降级"><a href="#优雅降级" class="headerlink" title="优雅降级"></a>优雅降级</h3><p>常用于ssr的node服务挂了返回500错误码然后降级到csr的cos桶或者nginx中，优雅降级主要用<strong>error_page</strong>参数来进行降级指向备用地址。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">upstream ssr &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60; &#125;upstream csr &#123;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;    server xxx max_fails&#x3D;1 fail_timeout&#x3D;60;&#125;location ^~ &#x2F;ssr&#x2F; &#123;    proxy_pass http:&#x2F;&#x2F;ssr;    # 开启自定义错误捕获 如果这里不设置为on的话 会走向nginx处理的默认错误页面    proxy_intercept_errors on;    # 捕获500系列错误 如果500错误的话降级为下面的csr渲染    error_page 500 501 502 503 504 &#x3D; @csr_location    # error_page 500 501 502 503 504 &#x3D; 200 @csr_location    # 注意这上面的区别 等号前面没有200 表示 最终返回的状态码已 @csr_location为准 加了200的话表示不管@csr_location返回啥都返回200状态码&#125;location @csr_location &#123;    # 这时候地址还是带着&#x2F;ssr&#x2F;的要去除    rewrite ^&#x2F;ssr&#x2F;(.*)$ &#x2F;$1 break;    proxy_pass http:&#x2F;&#x2F;csr;    rewrite_log on;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="webp根据浏览器自动降级为png"><a href="#webp根据浏览器自动降级为png" class="headerlink" title="webp根据浏览器自动降级为png"></a>webp根据浏览器自动降级为png</h3><p>这套方案不像常见的由nginx把png转为webp的方案，而是先经由图床系统（node服务）上传两份图片:</p><ol><li>一份是原图png</li><li>一份是png压缩为webp的图片（使用的是imagemin-webp)</li></ol><p>然后通过nginx检测头部是否支持webp来返回webp图片，不支持的话就返回原图即可。这其中还做了错误拦截，如果cos桶丢失webp图片及时浏览器支持webp也要降级为png。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http &#123;  include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;  default_type  application&#x2F;octet-stream;  # 设置日志格式  log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;  &#39;&quot;$proxy_host&quot; &quot;$upstream_addr&quot;&#39;;  access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  main;  sendfile        on;  keepalive_timeout  65;  # 开启gzip  gzip on;  gzip_vary on;  gzip_proxied any;  gzip_comp_level 6;  gzip_types text&#x2F;plain text&#x2F;css text&#x2F;xml application&#x2F;json application&#x2F;javascript application&#x2F;rss+xml application&#x2F;atom+xml image&#x2F;svg+xml;  # 负载均衡 这里可以是多个cos桶地址即可  upstream static_env &#123;    server xxx;    server xxx;  &#125;  # map 设置变量映射 第一个变量指的是要通过映射的key值 Accpet 第二个值的是变量别名  map $http_accept $webp_suffix &#123;    # 默认为 空字符串    default   &quot;&quot;;    # 正则匹配如果Accep含有webp字段 设置为.webp值    &quot;~*webp&quot;  &quot;.webp&quot;;  &#125;  server &#123;    listen 8888;    absolute_redirect off;    #取消绝对路径的重定向    #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。    root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;    location &#x2F; &#123;      index index.html index.htm;      proxy_set_header Host $host;      try_files $uri $uri&#x2F; &#x2F;index.html;      add_header Cache-Control &#39;no-cache, max-age&#x3D;0&#39;;    &#125;    # favicon.ico    location &#x3D; &#x2F;favicon.ico &#123;      log_not_found off;      access_log off;    &#125;    # robots.txt    location &#x3D; &#x2F;robots.txt &#123;      log_not_found off;      access_log off;    &#125;    #     location ~* \.(png|jpe?g)$ &#123;      # Pass WebP support header to backend      # 如果header头部中支持webp      if ($webp_suffix ~* webp) &#123;        # 先尝试找是否有webp格式图片        rewrite ^&#x2F;(.*)\.(png|jpe?g)$ &#x2F;$1.webp break;        # 找不到的话 这里捕获404错误 返回原始错误 注意这里的&#x3D;号 代表最终返回的是@static_img的状态吗        error_page 404 &#x3D; @static_img;      &#125;      proxy_intercept_errors on;      add_header Vary Accept;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;      access_log off;    &#125;    location @static_img &#123;      #set $complete $schema $server_addr $request_uri;      rewrite ^&#x2F;.+$ $request_uri break;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;    &#125;    # assets, media    location ~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ &#123;      proxy_pass http:&#x2F;&#x2F;static_env;      proxy_set_header Host $http_host;      expires 7d;      access_log off;    &#125;    error_page   500 502 503 504  &#x2F;50x.html;    location &#x3D; &#x2F;50x.html &#123;      root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>haproxy+keepalived实现高可用</title>
    <link href="/2022/01/30/keepha/"/>
    <url>/2022/01/30/keepha/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://www.keepalived.org/">Keepalived</a> 提供 VRPP 实现，并允许您配置 Linux 机器使负载均衡，预防单点故障。<a href="http://www.haproxy.org/">HAProxy</a> 提供可靠、高性能的负载均衡，能与 Keepalived 完美配合。</strong></p><p><img src="/img/keepha/%E6%9E%B6%E6%9E%84.jpg" alt="架构图"></p><p>安装规定组件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install keepalived haproxy psmisc -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="HAproxy"><a href="#HAproxy" class="headerlink" title="HAproxy"></a>HAproxy</h3><ol><li><p>编辑haproxy配置，（两台机器proxy配置一致）</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;haproxy&#x2F;haproxy.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>参考配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">global    log         &#x2F;dev&#x2F;log local0 warning    chroot      &#x2F;var&#x2F;lib&#x2F;haproxy    pidfile     &#x2F;var&#x2F;run&#x2F;haproxy.pid    maxconn     4000    user        haproxy    group       haproxy    daemon    stats socket &#x2F;var&#x2F;lib&#x2F;haproxy&#x2F;statsdefaults    log                     global    option                  httplog    option                  dontlognull    timeout connect         5000    timeout client          50000    timeout server          50000frontend kube-apiserver    bind                        *:6443    mode                        tcp    option                      tcplog    default_backend             kube-apiserverbackend kube-apiserver    mode        tcp    option      tcplog    option      tcp-check    balance     roundrobin    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100    server  kube-apiserver-1 172.16.214.21:6443 check    server  kube-apiserver-2 172.16.214.22:6443 check    server  kube-apiserver-3 172.16.214.23:6443 check<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h3><ol><li><p>两台机器都安装keepalived，但是配置略有不同</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>参考配置</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 主服务配置global_defs &#123;   notification_email &#123;   &#125;   router_id LVS_DEVEL01   vrrp_skip_check_adv_addr   vrrp_garp_interval 0   vrrp_gna_interval 0&#125;vrrp_script chk_haproxy &#123;   script &quot;killall -0 haproxy&quot;   interval 2   weight 2&#125;vrrp_instance haproxy-vip &#123;    state MASTER    interface eth0    virtual_router_id 60    priority 100    advert_int 1    authentication &#123;        auth_type PASS        auth_pass 1111    &#125;    unicast_src_ip 172.16.214.31    unicast_peer &#123;        172.16.214.32    &#125;    virtual_ipaddress &#123;        172.16.214.30&#x2F;24    &#125;    track_script &#123;        chk_haproxy    &#125;&#125;# 从服务配置global_defs &#123;   notification_email &#123;   &#125;   router_id LVS_DEVEL02   vrrp_skip_check_adv_addr   vrrp_garp_interval 0   vrrp_gna_interval 0&#125;vrrp_script chk_haproxy &#123;   script &quot;killall -0 haproxy&quot;   interval 2   weight 2&#125;vrrp_instance haproxy-vip &#123;    state BACKUP    interface eth0    virtual_router_id 60    priority 90    advert_int 1    authentication &#123;        auth_type PASS        auth_pass 1111    &#125;    unicast_src_ip 172.16.214.32    unicast_peer &#123;        172.16.214.31    &#125;    virtual_ipaddress &#123;        172.16.214.30&#x2F;24    &#125;    track_script &#123;        chk_haproxy    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ol><li><p>开启并开机启动</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl restart haproxy &amp;&amp; systemctl enable haproxysystemctl restart keepalived &amp;&amp; systemctl enable keepalived<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ol><h3 id="验证高可用"><a href="#验证高可用" class="headerlink" title="验证高可用"></a>验证高可用</h3><ol><li>停止keepalived，查看vip是否会漂移。</li></ol>]]></content>
    
    
    <categories>
      
      <category>keepalived</category>
      
      <category>haproxy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>keepalived</tag>
      
      <tag>软负载</tag>
      
      <tag>高可用</tag>
      
      <tag>haproxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>私有化部署yapi</title>
    <link href="/2022/01/30/yapi/"/>
    <url>/2022/01/30/yapi/</url>
    
    <content type="html"><![CDATA[<h4 id="安装nodejs环境"><a href="#安装nodejs环境" class="headerlink" title="安装nodejs环境"></a>安装nodejs环境</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v10.16.0&#x2F;node-v10.16.0-linux-x64.tar.xz# 解压tar -xvf node-v10.16.0-linux-x64.tar.xz#创建软连接ln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;nodeln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;npm# 验证node -vnpm -v# 配置淘宝源npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h4><p>在/etc/yum.repos.d/下，新建mongodb-org.repo，内容如下</p><p>[mongodb-org]<br>name=MongoDB Repository<br>baseurl=<a href="http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/">http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/</a><br>gpgcheck=0<br>enabled=1</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 安装yum install -y mongodb-org# 启动service mongod start# 配置，如果mongo只应用本地，则无需修改，否则修改&#x2F;etc&#x2F;mongod.conf的bindIp，并重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="安装yapi"><a href="#安装yapi" class="headerlink" title="安装yapi"></a>安装yapi</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir yapicd yapigit clone https:&#x2F;&#x2F;github.com&#x2F;YMFE&#x2F;yapi.git vendor# 或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 &#96;git clone --depth&#x3D;1 https:&#x2F;&#x2F;github.com&#x2F;YMFE&#x2F;yapi.git vendors&#96; 命令减少，大概 10+ M）cp vendors&#x2F;config_example.json .&#x2F;config.json # 复制完成后请修改相关配置# 需要把mongodb的用户名密码去除cd vendorsnpm install --production --registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm run install-server # 安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置node server&#x2F;app.js # 启动服务器后，请访问 127.0.0.1:&#123;config.json配置的端口&#125;，初次运行会有个编译的过程，请耐心等候# 初始化管理员账号成功,账号名：&quot;admin@admin.com&quot;，密码：&quot;ymfe.org&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="后台运行yapi"><a href="#后台运行yapi" class="headerlink" title="后台运行yapi"></a>后台运行yapi</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install -g pm2ln -s ~&#x2F;node-v10.16.0-linux-x64&#x2F;lib&#x2F;node_modules&#x2F;pm2&#x2F;bin&#x2F;pm2 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;pm2pm2 start server&#x2F;app.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>yapi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在windows上部署docker</title>
    <link href="/2022/01/30/windocker/"/>
    <url>/2022/01/30/windocker/</url>
    
    <content type="html"><![CDATA[<p>目前在windows上部署docker方式有两种。第一：采用虚拟机进行部署；第二：采用Hyper-V虚拟技术进行部署。微软自windows server2016开始将docker集成进系统。目前支持docker in windows部署方式的系统有：win10、windwos server2016/2019。本文采用Hyper-V方式进行docker部署。</p><h4 id="主板开启虚拟化，系统安装Hyper-V的windows更新。"><a href="#主板开启虚拟化，系统安装Hyper-V的windows更新。" class="headerlink" title="主板开启虚拟化，系统安装Hyper-V的windows更新。"></a>主板开启虚拟化，系统安装Hyper-V的windows更新。</h4><p>打开windows更新。将Hyper-V全部选中。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%871.png" alt="hyper"></p><h4 id="安装docker-desktop"><a href="#安装docker-desktop" class="headerlink" title="安装docker desktop"></a>安装docker desktop</h4><p>下载地址：<a href="https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe">https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe</a><br><img src="/img/windocker/%E5%9B%BE%E7%89%872.png" alt="dockerdesktop"></p><p>出现此图标，代表docker安装成功。</p><h4 id="切换windows镜像模式"><a href="#切换windows镜像模式" class="headerlink" title="切换windows镜像模式"></a>切换windows镜像模式</h4><p>由于我们需要安装运行基于windows的容器与镜像，所有在安装完后，右击图标，将docker的运行方式改位“windows containers”。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%873.png" alt="windocker"></p><h4 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h4><p>对docker进行一些配置，以达到更好的效果。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%874.png" alt="配置"></p><h4 id="拉取windowsserver的镜像"><a href="#拉取windowsserver的镜像" class="headerlink" title="拉取windowsserver的镜像"></a>拉取windowsserver的镜像</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker pull mcr.microsoft.com&#x2F;windows&#x2F;servercore:ltsc2019docker pull mcr.microsoft.com&#x2F;windows&#x2F;nanoserver:1903<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>注意：windows的docker容器拉取镜像时，镜像的tag必须要osversion的版本必须与镜像版本对应。<br>查看系统版本信息：systeminfo</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%875.png" alt="系统版本"></p><p><img src="/img/windocker/%E5%9B%BE%E7%89%876.png" alt="找到对应镜像"></p><p>拉取的镜像比较大需要耐心等待。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%877.png" alt="拉取镜像"></p><h4 id="运行windows原生镜像"><a href="#运行windows原生镜像" class="headerlink" title="运行windows原生镜像"></a>运行windows原生镜像</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run -it mcr.microsoft.com&#x2F;windows&#x2F;nanoserver:1903 cmd.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>运行后会进入容器内部。盘符会进入C盘位置。退出后，使用docker ps会发现容器也退出了，此时，输入docker start 容器ID。重新启动容器，发现容器正常启动。</p><h4 id="测试镜像"><a href="#测试镜像" class="headerlink" title="测试镜像"></a>测试镜像</h4><p>在windwos容器中部署python环境</p><ul><li>首先停止windows容器，docker stop 容器ID</li><li>使用docker cp命令，将本地宿主机上的文件拷贝进windows容器中。由于容器中不包含GUI，所以这里直接将python的免安装文件复制进容器。<code>docker cp D:\develop\python37 容器ID:\C:\Users</code></li><li>docker start 容器ID</li><li>docker exec -it 容器ID cmd.exe 进入容器内部</li><li>进入C盘下面的Users文件夹。发现python文件夹已经拷贝进来。<img src="/img/windocker/%E5%9B%BE%E7%89%878.png" alt="python"></li><li>验证python环境，进入pyhon37文件夹，运行python命令，发现可以进入。<img src="/img/windocker/%E5%9B%BE%E7%89%879.png" alt="python"></li></ul>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>seata高可用部署</title>
    <link href="/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>部署nacos</li><li>部署mysql</li></ul><h4 id="部署server端"><a href="#部署server端" class="headerlink" title="部署server端"></a>部署server端</h4><ul><li><p>创建数据库（seata）及表,以mysql为例</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- -------------------------------- The script used when storeMode is 'db' --------------------------------</span><span class="token comment">-- the table to store GlobalSession data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>global_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>                       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span>            <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span>                    <span class="token keyword">TINYINT</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_id<span class="token punctuation">`</span></span>            <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_service_group<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_name<span class="token punctuation">`</span></span>          <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>timeout<span class="token punctuation">`</span></span>                   <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>begin_time<span class="token punctuation">`</span></span>                <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_data<span class="token punctuation">`</span></span>          <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>                <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>              <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_gmt_modified_status<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_transaction_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span class="token comment">-- the table to store BranchSession data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>branch_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>         <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>               <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span>    <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_group_id<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_id<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_type<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span>            <span class="token keyword">TINYINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>client_id<span class="token punctuation">`</span></span>         <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>application_data<span class="token punctuation">`</span></span>  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>        <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>      <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_xid<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span class="token comment">-- the table to store lock data</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>lock_table<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>row_key<span class="token punctuation">`</span></span>        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>            <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>transaction_id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>      <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>resource_id<span class="token punctuation">`</span></span>    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>table_name<span class="token punctuation">`</span></span>     <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>pk<span class="token punctuation">`</span></span>             <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>     <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>   <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>row_key<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_branch_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>client端，业务数据库需要添加undo_log表，以mysql为例</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- for AT mode you must to init this sql for you business database. the seata server not need it.</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>undo_log<span class="token punctuation">`</span></span><span class="token punctuation">(</span>    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>     <span class="token keyword">BIGINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'branch transaction id'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>           <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'global transaction id'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>context<span class="token punctuation">`</span></span>       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'undo_log context,such as serialization'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>rollback_info<span class="token punctuation">`</span></span> <span class="token keyword">LONGBLOB</span>     <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'rollback info'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_status<span class="token punctuation">`</span></span>    <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'0normal status,1defense status'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_created<span class="token punctuation">`</span></span>   <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'create datetime'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>log_modified<span class="token punctuation">`</span></span>  <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'modify datetime'</span><span class="token punctuation">,</span>    <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>ux_undo_log<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>  <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COMMENT</span> <span class="token operator">=</span><span class="token string">'AT transaction mode undo table'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>添加配置到nacos配置中心，使用官方的的脚本将默认的配置文件导入nacos</p></li><li><p>修改配置，主要是数据库的连接配置</p><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">store.mode=dbstore.db.datasource=druidstore.db.dbType=mysqlstore.db.driverClassName=com.mysql.jdbc.Driverstore.db.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=truestore.db.user=rootstore.db.password=123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h4 id="部署到K8S"><a href="#部署到K8S" class="headerlink" title="部署到K8S"></a>部署到K8S</h4><ul><li><p>seata-ha-deploy.yaml</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8091</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StatefulSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>harbor<span class="token punctuation">-</span>secret      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server          <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.182.187<span class="token punctuation">:</span>81/library/seata<span class="token punctuation">-</span>server<span class="token punctuation">:</span>1.4.2          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SEATA_CONFIG_NAME              <span class="token key atrule">value</span><span class="token punctuation">:</span> file<span class="token punctuation">:</span>/root/seata<span class="token punctuation">-</span>config/registry          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8091</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>config              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /root/seata<span class="token punctuation">-</span>config      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>config          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>ha<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">registry.conf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    registry &#123;        type = "nacos"        nacos &#123;          application = "seata-server"          serverAddr = "192.168.186.79:8849"          group = "SEATA_GROUP"          namespace = "87eb1383-a697-439a-a40f-52a071b4cc6b"          cluster = "default"          username = "nacos"          password = "nacos"        &#125;    &#125;    config &#123;      type = "nacos"      nacos &#123;        serverAddr = "192.168.186.79:8849"        namespace = "87eb1383-a697-439a-a40f-52a071b4cc6b"        group = "SEATA_GROUP"        username = "nacos"        password = "nacos"      &#125;    &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>查看部署情况</p><p>1、应该会有3个pod运行，查看日志，可以看到已经连接数据。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.586</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>Server</span>                   <span class="token operator">:</span> <span class="token class-name">The</span> server is running in container<span class="token punctuation">.</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.599</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>FileConfiguration</span>        <span class="token operator">:</span> <span class="token class-name">The</span> file name of the operation is file<span class="token operator">:</span><span class="token operator">/</span>root<span class="token operator">/</span>seata<span class="token operator">-</span>config<span class="token operator">/</span>registry<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25.606</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>FileConfiguration</span>        <span class="token operator">:</span> <span class="token class-name">The</span> configuration file used is <span class="token operator">/</span>root<span class="token operator">/</span>seata<span class="token operator">-</span>config<span class="token operator">/</span>registry<span class="token punctuation">.</span>conf<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">27.127</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span>DruidDataSource</span>   <span class="token operator">:</span> <span class="token punctuation">&#123;</span>dataSource<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span> inited<span class="token number">11</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">27.367</span>  INFO <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>                     main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">i<span class="token punctuation">.</span>s<span class="token punctuation">.</span>core<span class="token punctuation">.</span>rpc<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span>NettyServerBootstrap</span>  <span class="token operator">:</span> <span class="token class-name">Server</span> started<span class="token punctuation">,</span> listen port<span class="token operator">:</span> <span class="token number">8091</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>2、去nacos中查看，应该会有3个服务。</p><p><img src="/img/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/20210720193847.png" alt="seata"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>seata</category>
      
    </categories>
    
    
    <tags>
      
      <tag>seata</tag>
      
      <tag>分布式事务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nacos集群安装</title>
    <link href="/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="1-在线安装mysql5-7"><a href="#1-在线安装mysql5-7" class="headerlink" title="1. 在线安装mysql5.7"></a>1. 在线安装mysql5.7</h3><ul><li>安装步骤</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 获取mysql yum源yum install -y wget &amp;&amp; wget https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-9.noarch.rpm# 安装yum源rpm -ivh mysql57-community-release-el7-9.noarch.rpm# 安装mysqlyum install mysql-community-server mysql-community-libs-compat mysql-community-libs mysql-community-embedded-devel mysql-community-embedded-compat mysql-community-embedded mysql-community-devel mysql-community-common mysql-community-client -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 启动mysqlsystemctl start mysqld# 开机启动systemctl enable mysqld# 需要找到mysql初始化的密码，cat &#x2F;var&#x2F;log&#x2F;mysqld.log|grep root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>运行<code>mysql_secure_installation</code>进行一些初始化操作，主要是对更改密码、是否运行远程等</li></ul><h3 id="rpm包安装mysql5-7"><a href="#rpm包安装mysql5-7" class="headerlink" title="rpm包安装mysql5.7"></a>rpm包安装mysql5.7</h3><ul><li>下载rpm包</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-common-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-libs-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-client-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-server-5.7.23-1.el7.x86_64.rpmhttps:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-community-devel-5.7.23-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>安装mysql</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载自带的mariadbyum remove mariadb mariadb-server mariadb-devel mariadb-libs# 安装rpm -ivh mysql-community-common-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.23-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.23-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>新建主库文件夹</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;data&#x2F;mysql&#x2F;&#123;data,log,pid,binary&#125;groupadd mysqluseradd -r -g mysql mysqlchown -R mysql.mysql  &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置主数据库，<code>vi /etc/my.cnf</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[mysqld]datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;datasocket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.logpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;pid&#x2F;mysqld.pid user&#x3D;mysqlserver-id&#x3D;1port&#x3D;3306 ##要给从机同步的库#binlog-do-db&#x3D; ##不给从机同步的库(多个写多行)binlog-ignore-db&#x3D;mysqlbinlog-ignore-db&#x3D;information_schemabinlog-ignore-db&#x3D;performance_schemabinlog-ignore-db&#x3D;sys ##开启二进制日志log-bin&#x3D;&#x2F;data&#x2F;mysql&#x2F;binary&#x2F;mysql1-bin ##自动清理 7 天前的log文件,可根据需要修改expire_logs_days&#x3D;7 [client]socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>新建从库文件夹</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;data&#x2F;mysql&#x2F;&#123;data,log,pid&#125;groupadd mysqluseradd -r -g mysql mysqlchown -R mysql.mysql  &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置从数据库</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[mysqld]datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;datasocket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock # Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links&#x3D;0 log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.logpid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;pid&#x2F;mysqld.pid user&#x3D;mysqlserver-id&#x3D;2port&#x3D;3306 ##从库上的参数read_only &#x3D; 1master_info_repository&#x3D;TABLErelay_log_info_repository&#x3D;TABLE#relay_log_recovery&#x3D;1   #从机禁止写#super_read_only&#x3D;1      #从机禁止写 [client]socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;data&#x2F;mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动数据库并找出root密码</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl start mysqld# 查询密码cat &#x2F;data&#x2F;mysql&#x2F;log&#x2F;mysqld.log |grep root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>登录并修改密码</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -p# 修改密码mysql-&gt; ALTER USER root@localhost identified by &#39;admin123.X&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置主从"><a href="#配置主从" class="headerlink" title="配置主从"></a>配置主从</h3><ul><li>在主服务器上授权从服务器复制帐号</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -pmysql-&gt; grant replication slave on *.* to slave@&#39;192.168.%&#39; identified by &#39;admin123.X&#39;;mysql-&gt; show master status;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ul><li>到从服务配置主数据库连接</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql -uroot -pmysql &gt; stop slave;mysql &gt; change master to master_host&#x3D;&#39;192.168.153.162&#39;,master_port&#x3D;3306,master_user&#x3D;&#39;slave&#39;,master_password&#x3D;&#39;admin123.X&#39;,master_log_file&#x3D;&#39;mysql1-bin.000093&#39;,master_log_pos&#x3D;846;mysql &gt; start slave;mysql &gt; show slave status\G# 必须看到两个YES# Slave_IO_Running: Yes# Slave_SQL_Running: Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mysql &gt; CREATE DATABASE test_ab default charset utf8;mysql &gt; CREATE TABLE test_ab.a1(id int(2),name varchar(20));mysql &gt; INSERT INTO test_ab.a1(id,name) VALUES(1,&quot;测试1&quot;);mysql&gt; select * from test_ab.a1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-安装Nacos1-3"><a href="#2-安装Nacos1-3" class="headerlink" title="2. 安装Nacos1.3"></a>2. 安装Nacos1.3</h3><ul><li>配置JDK、Maven</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 解压缩tar -zxvf jdk-8u261-linux-x64.tar.gzmv jdk1.8.0_261 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;tar -zxvf apache-maven-3.6.3-bin.tar.gzmv apache-maven-3.6.3 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;# 配置环境变量vi &#x2F;etc&#x2F;profile# 在最后添加export MAVEN_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;apache-maven-3.6.3export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;jdk1.8.0_261export PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;binexport PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin# 配置生效source &#x2F;etc&#x2F;profile# 验证生效java -versionmvn -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>为nacos创建数据库连接用户</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">create user nacos identified by &#39;nacos123.X&#39;;grant all privileges on *.* to &#39;nacos&#39;@&#39;192.168.%&#39; identified by &#39;nacos123.X&#39; with grant option;flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>解压nacos，并移动到安装目录</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">tar -zxvf nacos-server-1.3.0.tar.gzmv nacos &#x2F;usr&#x2F;local&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><ul><li>初始化数据库脚本，找到 <code>nacos-mysql.sql</code> ，将其导入到数据库中</li><li>配置文件，<code>vi application.properties</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">spring.datasource.platform&#x3D;mysqldb.num&#x3D;1db.url.0&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.153.161:3306&#x2F;nacos_config?characterEncoding&#x3D;utf8&amp;connectTimeout&#x3D;1000&amp;socketTimeout&#x3D;3000&amp;autoReconnect&#x3D;truedb.user&#x3D;nacosdb.password&#x3D;nacos123.X<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>把<code>cluster.conf.example 改名成 cluster.conf</code> ，并修改配置<code>vi cluster.conf</code></li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#it is ip10.0.0.1:884810.0.0.2:884810.0.0.3:8848<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>分别部署到服务器</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sh startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ul><li>验证，访问不同主机的地址，查看是否可以正常访问</li></ul><h3 id="3-配置nginx反向代理"><a href="#3-配置nginx反向代理" class="headerlink" title="3. 配置nginx反向代理"></a>3. 配置nginx反向代理</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 下载nginx安装包wget https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.18.0.tar.gz# 安装依赖yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel# 解压mkdir -p &#x2F;usr&#x2F;local&#x2F;nginxtar -zxvf nginx-1.18.0.tar.gzmv nginx-1.18.0 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;# 执行configurecd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;nginx-1.18.0.&#x2F;configuremakemake install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>配置nginx反向代理</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">upstream nacos &#123;        server  192.168.153.161:8848;        server  192.168.153.162:8848;        server  192.168.153.163:8848;    &#125;server &#123;        listen       80;        server_name  192.168.153.163;        location &#x2F;nacos&#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;nacos&#x2F;nacos&#x2F;;        &#125;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>启动nginx</li></ul><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload# 如果出现报错：nginx: [error] open() ＂&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid＂ failed运行： &#96;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf&#96; 再次启动即可ps -ef | grep nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nacos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>nacos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker启动各种服务</title>
    <link href="/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="启动activemq"><a href="#启动activemq" class="headerlink" title="启动activemq"></a>启动activemq</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name&#x3D;&#39;activemq&#39; -d \-e &#39;ACTIVEMQ_CONFIG_NAME&#x3D;amqp-srv1&#39; \-e &#39;ACTIVEMQ_CONFIG_DEFAULTACCOUNT&#x3D;false&#39; \-e &#39;ACTIVEMQ_ADMIN_LOGIN&#x3D;admin&#39; -e &#39;ACTIVEMQ_ADMIN_PASSWORD&#x3D;your_password&#39; \-e &#39;ACTIVEMQ_USERS_myproducer&#x3D;producerpassword&#39; -e &#39;ACTIVEMQ_GROUPS_writes&#x3D;myproducer&#39; \-e &#39;ACTIVEMQ_USERS_myconsumer&#x3D;consumerpassword&#39; -e &#39;ACTIVEMQ_GROUPS_reads&#x3D;myconsumer&#39; \-e &#39;ACTIVEMQ_JMX_user1_role&#x3D;readwrite&#39; -e &#39;ACTIVEMQ_JMX_user1_password&#x3D;jmx_password&#39; \-e &#39;ACTIVEMQ_JMX_user2_role&#x3D;read&#39; -e &#39;ACTIVEMQ_JMX_user2_password&#x3D;jmx2_password&#39;-e &#39;ACTIVEMQ_CONFIG_TOPICS_topic1&#x3D;mytopic1&#39; -e &#39;ACTIVEMQ_CONFIG_TOPICS_topic2&#x3D;mytopic2&#39;  \-e &#39;ACTIVEMQ_CONFIG_QUEUES_queue1&#x3D;myqueue1&#39; -e &#39;ACTIVEMQ_CONFIG_QUEUES_queue2&#x3D;myqueue2&#39;  \-e &#39;ACTIVEMQ_CONFIG_MINMEMORY&#x3D;1024&#39; -e  &#39;ACTIVEMQ_CONFIG_MAXMEMORY&#x3D;4096&#39; \-e &#39;ACTIVEMQ_CONFIG_SCHEDULERENABLED&#x3D;true&#39; \-v &#x2F;data&#x2F;activemq:&#x2F;data \-v &#x2F;var&#x2F;log&#x2F;activemq:&#x2F;var&#x2F;log&#x2F;activemq \-p 8161:8161 \-p 61616:61616 \-p 61613:61613 \webcenter&#x2F;activemq:5.14.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>docker run --name activemq-5.14 -d -e ACTIVEMQ_ADMIN_LOGIN=admin -e ACTIVEMQ_ADMIN_PASSWORD=admin@mq -v /home/activemq/data:/data -v /home/activemq/log:/var/log/activemq -p 8161:8161 -p 61616:61616 -p 61613:61613 webcenter/activemq:5.14.3</code></p><hr><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 简单启动docker run -p 3306:3306 --name mysql -v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -v $PWD&#x2F;logs:&#x2F;logs -v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7.23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。<br>-v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。<br>-v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。<br>-v $PWD/data:/var/lib/mysql :将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。<br>-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。<br>-d 后台运行</p><hr><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name nginx-1.16.1 -v &#x2F;home&#x2F;nginxdata&#x2F;x-springboot-ui:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html -v &#x2F;home&#x2F;nginxdata&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf -v &#x2F;home&#x2F;nginxdata&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d -v &#x2F;home&#x2F;nginxdata&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx -p 80:80 -d nginx:1.16.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>1、配置nginx.conf，设置user为root用户<br>2、配置default.conf，开启目录浏览<br>        autoindex on; # 开启目录显示<br>        autoindex_exact_size off; # 显示出文件的确切大小.关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b<br>        autoindex_localtime on; # 显示的文件时间为文件的服务器时间<br>        charset utf-8,gbk; # 避免中文乱码</p><hr><h3 id="启动oracle-11g"><a href="#启动oracle-11g" class="headerlink" title="启动oracle 11g"></a>启动oracle 11g</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 一开始无法使用挂载，必须先启动后再使用1、docker run --name oracle_11g -v &#x2F;home&#x2F;oracle:&#x2F;home&#x2F;oracle -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g:latestdocker run --name oracle11g -v &#x2F;root&#x2F;oracle_data&#x2F;helowin:&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;helowin -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g:latest2、docker exec -it oracle_11g bash3、su root 【密码】：helowin4、vi &#x2F;etc&#x2F;profileexport ORACLE_HOME&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;dbhome_2export ORACLE_SID&#x3D;helowinexport PATH&#x3D;$ORACLE_HOME&#x2F;bin:$PATHsource &#x2F;etc&#x2F;profile --加载环境变量ln -s $ORACLE_HOME&#x2F;bin&#x2F;sqlplus &#x2F;usr&#x2F;bin -- 软连接5、su - oracle6、sqlplus &#x2F;nolog7、conn &#x2F;as sysdba8、alter user system identified by system; --修改system用户账号alter user sys identified by system; --修改sys用户账号create user db identified by dbzenith; --创建内部管理员账号，设备管理系统默认使用db用户grant connect,resource,dba to db; --将dba权限授权给内部管理员账号alter profile default limit password_life_time unlimited; --修改密码规则策略为密码永不过期alter system set processes&#x3D;1000 scope&#x3D;spfile; --修改数据库最大连接数据9、重启数据库exit 退出当前操作sqlplus &#x2F;nologconn &#x2F;as sysdbashutdown immediate; --关闭数据库startup; --启动数据库10、退出，查看具体实例lsnrctl status11、删除用户操作SELECT SID,SERIAL# FROM V$SESSION WHERE USERNAME&#x3D;&#39;DEVUSER&#39;;  -- 一定都要大写ALTER  SYSTEM  KILL SESSION &#39;137,41813&#39;;drop  user sstest cascade;# --删除oracle--rm -rf &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;flash_recovery_area&#x2F;helowin&#x2F;control02.ctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h3 id="启动portainer"><a href="#启动portainer" class="headerlink" title="启动portainer"></a>启动portainer</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name portainer --restart&#x3D;always -p 9000:9000 -v &#x2F;root&#x2F;portainer:&#x2F;data -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock -d portainer&#x2F;portainer:linux-amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">–-name # 指定运行容器的名称--restart&#x3D;always # 自动重启-p 9000:9000 # 宿主机9000端口映射容器中的9000端口-d # 容器在后台运行-v &#x2F;root&#x2F;portainer:&#x2F;data # 把宿主机目录 &#x2F;root&#x2F;portainer 挂载到容器 &#x2F;data 目录-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock # 把宿主机的Docker守护进程(docker daemon)默认监听的Unix域套接字挂载到容器中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>portainer使用tls监控本地、远端docker</strong></p><ol><li><p>生成tls证书</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 产生tls的证书比较复杂，这里提供一个脚本。#!&#x2F;bin&#x2F;bash# 把$1，$2 换成地址的服务器地址和密码# 服务器域名或地址SERVER&#x3D;$1# 密码PASSWORD&#x3D;$2# 下面描述信息可改可不该COUNTRY&#x3D;&quot;CN&quot;STATE&#x3D;&quot;JiangSu&quot;CITY&#x3D;&quot;ChangZhou&quot;ORGANIZATION&#x3D;&quot;HMIFO&quot;ORGANIZATIONAL_UNIT&#x3D;&quot;HMIFO&quot;EMAIL&#x3D;&quot;hm@example.com&quot;echo &quot;开始生成文件...............&quot;mkdir tls&#x2F;cd &#96;pwd&#96;&#x2F;tls# 生成ca私钥 + ca证书openssl genrsa -aes256 -passout pass:$PASSWORD  -out ca-key.pem 2048openssl req -new -x509 -passin &quot;pass:$PASSWORD&quot; -days 36500 -key ca-key.pem -sha256 -out ca.pem -subj &quot;&#x2F;C&#x3D;$COUNTRY&#x2F;ST&#x3D;$STATE&#x2F;L&#x3D;$CITY&#x2F;O&#x3D;$ORGANIZATION&#x2F;OU&#x3D;$ORGANIZATIONAL_UNIT&#x2F;CN&#x3D;$SERVER&#x2F;emailAddress&#x3D;$EMAIL&quot;# 生成server私钥 + server证书请求文件 + 证书openssl genrsa -out server-key.pem 2048openssl req -subj &quot;&#x2F;CN&#x3D;$SERVER&quot; -new -key server-key.pem -out server.csropenssl x509 -req -days 36500 -in server.csr -CA ca.pem -CAkey ca-key.pem -passin &quot;pass:$PASSWORD&quot; -CAcreateserial  -out server-cert.pem# 生成client公钥 + client 证书请求文件 + 证书openssl genrsa -out client-key.pem 2048openssl req -subj &#39;&#x2F;CN&#x3D;client&#39; -new -key client-key.pem -out client.csrsh -c &#39;echo &quot;extendedKeyUsage&#x3D;clientAuth&quot; &gt; extfile.cnf&#39;openssl x509 -req -days 36500 -in client.csr -CA ca.pem -CAkey ca-key.pem  -passin &quot;pass:$PASSWORD&quot; -CAcreateserial -out client-cert.pem  -extfile extfile.cnf# 更改密钥权限chmod 0400 ca-key.pem client-key.pem server-key.pemchmod 0444 ca.pem server-cert.pem client-cert.pem# 删除无用文件rm  *.csr *.cnf *.srl# 将服务器证书和CA证书放到 &#x2F;etc&#x2F;docker 目录下cp ca.pem server-cert.pem server-key.pem &#x2F;etc&#x2F;dockerecho &quot;生成文件结束...............&quot;# 将客户端证书和CA证书放到客户机中 ca.pem、client-cert.pem、client-key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>docker开启2375端口</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">find &#x2F; -name docker.service # 找到docker的启动配置vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service# 在ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd后面追加# --tlsverify --tlscacert&#x3D;&#x2F;etc&#x2F;docker&#x2F;ca.pem[CA证书] --tlscert&#x3D;&#x2F;etc&#x2F;docker&#x2F;server-cert.pem[服务器证书] --tlskey&#x3D;&#x2F;etc&#x2F;docker&#x2F;server-key.pem[服务端密钥] -H tcp:&#x2F;&#x2F;0.0.0.0:2375[这个端口可以自己定义，只要是机器上没有用到的都行]# 完整的ExecStart配置ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd \--tlsverify \--tlscacert&#x3D;&#x2F;etc&#x2F;docker&#x2F;ca.pem \--tlscert&#x3D;&#x2F;etc&#x2F;docker&#x2F;server-cert.pem \--tlskey&#x3D;&#x2F;etc&#x2F;docker&#x2F;server-key.pem \-H tcp:&#x2F;&#x2F;0.0.0.0:2375 \-H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>重启docker</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl daemon-reload &amp;&amp; systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>添加远程docker</p><p><img src="/img/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/portainer-1.png" alt="portainer-addendpoints"></p><p><img src="/img/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/portainer-2.png" alt="portainer-addendpoints2"></p></li></ol><hr><h3 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 简单启动docker run --name redis-5.0.7 -p 6379:6379 -d redis:5.0.7 --requirepass &quot;admin123&quot;# 持久化docker run --name redis -v &#x2F;home&#x2F;redis&#x2F;data:&#x2F;data -p 6379:6379 -d redis:5.0.7 --requirepass &quot;admin123&quot; --appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">--name redis-test #运行的docker容器名-p 6379:6379 #宿主本地端口:docker端口(容器里的端口)-d redis #daemonize模式运行，完整-d redis:版本号，默认为最新版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><hr><h3 id="启动sonarqube"><a href="#启动sonarqube" class="headerlink" title="启动sonarqube"></a>启动sonarqube</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 采用volume挂载方式，本地文件挂载有权限问题docker run -d --name sonarqube --restart always \-p 9000:9000 \-v sonarqube_conf:&#x2F;opt&#x2F;sonarqube&#x2F;conf \-v sonarqube_extensions:&#x2F;opt&#x2F;sonarqube&#x2F;extensions \-v sonarqube_logs:&#x2F;opt&#x2F;sonarqube&#x2F;logs \-v sonarqube_data:&#x2F;opt&#x2F;sonarqube&#x2F;data \sonarqube:7.9.2-community#分析项目#1、需要先将项目打包运行#2、运行分析代码sonar-scanner -Dsonar.host.url&#x3D;http:&#x2F;&#x2F;192.168.153.150:9000 \              -Dsonar.projectKey&#x3D;simple-java-maven-app \              -Dsonar.projectName&#x3D;simple-java-maven-app \              -Dsonar.projectVersion&#x3D;1.0 \              -Dsonar.login&#x3D;admin \              -Dsonar.password&#x3D;admin \              -Dsonar.ws.timeout&#x3D;30 \              -Dsonar.projectDescription&#x3D;&quot;my first project!&quot; \              -Dsonar.links.homepage&#x3D;http:&#x2F;&#x2F;www.baidu.com \              -Dsonar.sources&#x3D;src \              -Dsonar.sourceEncoding&#x3D;UTF-8 \              -Dsonar.java.binaries&#x3D;target&#x2F;classes \              -Dsonar.java.test.binaries&#x3D;target&#x2F;test-classes \              -Dsonar.java.surefire.report&#x3D;target&#x2F;surefire-reports<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h3 id="启动sqlserver2017"><a href="#启动sqlserver2017" class="headerlink" title="启动sqlserver2017"></a>启动sqlserver2017</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name sqlserver_2017 -v &#x2F;home&#x2F;sqlserver:&#x2F;var&#x2F;opt&#x2F;mssql -e &#39;ACCEPT_EULA&#x3D;Y&#39; -e &#39;SA_PASSWORD&#x3D;admin123.X&#39; -p 1433:1433 -d mcr.microsoft.com&#x2F;mssql&#x2F;server:2017-latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用sqlcmd创建数据库</p><p>进入容器 docker exec -it 容器名称 bash</p><p>创建数据库<br>/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P XXXX</p><hr><h3 id="启动rabbitmq"><a href="#启动rabbitmq" class="headerlink" title="启动rabbitmq"></a>启动rabbitmq</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run -p 15672:15672 \-p 5672:5672 \-p 25672:25672 \-p 15674:15674 \-p 61613:61613 \-v &#x2F;home&#x2F;yzh&#x2F;Documents&#x2F;Installed&#x2F;docker&#x2F;docker_repo&#x2F;rabbitmq&#x2F;:&#x2F;var&#x2F;lib&#x2F;rabbitmq&#x2F;mnesia \--name rabbitmq3 \--restart&#x3D;always \-d rabbitmq:3.7.8-management# 启动rabbitmq的mqtt和stomp协议docker run --name rabbitmq \-p 15672:15672 \-p 5672:5672 \-p 15674:15674 \-p 61613:61613 \-p 15675:15675 \-p 1883:1883 \-d rabbitmq:3.8.14-management# 进入容器内部# rabbit开启stomprabbitmq-plugins enable rabbitmq_stomprabbitmq-plugins enable rabbitmq_web_stomp# rabbit开启mqttrabbitmq-plugins enable rabbitmq_mqttrabbitmq-plugins enable rabbitmq_web_mqtt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>15672，rabbitmq的web页面端口</p><p>5672，amqp协议端口</p><p>25672，集群使用</p><p>15674，stomp的ws端口</p><p>61613，stomp的tcp端口</p><p>1883，mqtt的tcp协议端口</p><p>15675，mqtt的ws端口</p><hr><h3 id="启动traefik"><a href="#启动traefik" class="headerlink" title="启动traefik"></a>启动traefik</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name traefik2 -d -p 8080:8080 -p 80:80 -v $PWD&#x2F;traefik.yml:&#x2F;etc&#x2F;traefik&#x2F;traefik.yml -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock traefik:v2.4.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run --name mongo -e MONGO_INITDB_ROOT_USERNAME&#x3D;admin -e MONGO_INITDB_ROOT_PASSWORD&#x3D;admin -v &#x2F;data&#x2F;mongodb:&#x2F;data&#x2F;db -p 27017:27017 -d mongo:5.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mongo</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MONGO_INITDB_ROOT_USERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">MONGO_INITDB_ROOT_PASSWORD</span><span class="token punctuation">:</span> example  <span class="token key atrule">mongo-express</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo<span class="token punctuation">-</span>express    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8081<span class="token punctuation">:</span><span class="token number">8081</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ME_CONFIG_MONGODB_ADMINUSERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">ME_CONFIG_MONGODB_ADMINPASSWORD</span><span class="token punctuation">:</span> example      <span class="token key atrule">ME_CONFIG_MONGODB_URL</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//root<span class="token punctuation">:</span>example@mongo<span class="token punctuation">:</span>27017/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>container</tag>
      
      <tag>容器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-ce安装</title>
    <link href="/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="卸载原有docker及缓存"><a href="#卸载原有docker及缓存" class="headerlink" title="卸载原有docker及缓存"></a>卸载原有docker及缓存</h4><ol><li><p>卸载</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>清缓存<br>将docker的缓存，包括镜像、图片、网络等删除。docker默认位置：/var/lib/docker</p></li></ol><h4 id="添加必要的包"><a href="#添加必要的包" class="headerlink" title="添加必要的包"></a>添加必要的包</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y yum-utils device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="添加稳定版本仓库地址"><a href="#添加稳定版本仓库地址" class="headerlink" title="添加稳定版本仓库地址"></a>添加稳定版本仓库地址</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="安装docker-ce-最新版本"><a href="#安装docker-ce-最新版本" class="headerlink" title="安装docker-ce(最新版本)"></a>安装docker-ce(最新版本)</h4><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>安装指定版本</strong></p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查询版本yum list docker-ce --showduplicates | sort -r# 安装yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h4><ol><li>下载地址：<a href="https://download.docker.com/linux/static/stable/">https://download.docker.com/linux/static/stable/</a></li><li>安装步骤<div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 解压包tar xzvf &#x2F;path&#x2F;to&#x2F;&lt;FILE&gt;.tar.gz# 移动sudo cp docker&#x2F;* &#x2F;usr&#x2F;bin&#x2F;# 启动dockersudo dockerd &amp;# 验证sudo docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h4 id="使用systemctl管理docker"><a href="#使用systemctl管理docker" class="headerlink" title="使用systemctl管理docker"></a>使用<code>systemctl</code>管理docker</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 新建docker启动服务文件vi &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service# 可以参考如下文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">[Unit]Description&#x3D;Docker Application Container EngineDocumentation&#x3D;https:&#x2F;&#x2F;docs.docker.comAfter&#x3D;network-online.target firewalld.serviceWants&#x3D;network-online.target[Service]Type&#x3D;notifyExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerdExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPIDLimitNOFILE&#x3D;infinityLimitNPROC&#x3D;infinityLimitCORE&#x3D;infinityTimeoutStartSec&#x3D;0Delegate&#x3D;yesKillMode&#x3D;processRestart&#x3D;on-failureStartLimitBurst&#x3D;3StartLimitInterval&#x3D;60s[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 赋予可执行权限chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service# 生效配置systemctl daemon-reload# 配置docker开机启动systemctl enable docker# 查看docker状态systemctl status docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="修改docker默认存储位置"><a href="#修改docker默认存储位置" class="headerlink" title="修改docker默认存储位置"></a>修改docker默认存储位置</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 这里使用软链接的方式进行# 查看docker默认路径docker info | grep &quot;Docker Root Dir&quot;# 停止docker服务systemctl stop docker# 如果docker没有受systemctl管控# ps -ef|grep dockerd# kill -9 [dockerd的进程号]# 移动原有的内容$ mv &#x2F;var&#x2F;lib&#x2F;docker &#x2F;data&#x2F;# 进行链接$ ln -sf &#x2F;data&#x2F;docker &#x2F;var&#x2F;lib&#x2F;docker# 启动dockersystemctl start docker# 查看目录是否更改docker info | grep &quot;Docker Root Dir&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="添加镜像加速"><a href="#添加镜像加速" class="headerlink" title="添加镜像加速"></a>添加镜像加速</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vi &#x2F;etc&#x2F;docker&#x2F;daemon.json# 配置阿里镜像加速&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;j54517kd.mirror.aliyuncs.com&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>自动安装docker脚本</strong></p><p><a href="/img/docker-ce%E5%AE%89%E8%A3%85/install-docker.sh" title=":include :type=code">install-docker.sh</a></p><hr><h3 id="Ubuntu下在线安装docker"><a href="#Ubuntu下在线安装docker" class="headerlink" title="Ubuntu下在线安装docker"></a>Ubuntu下在线安装docker</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 新增更新源sudo echo &quot;deb https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu zesty edge&quot; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list# step 1: 安装必要的一些系统工具sudo apt-get updatesudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common# step 2: 安装GPG证书curl -fsSL https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -# Step 3: 写入软件源信息sudo add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;# Step 4: 更新并安装Docker-CEsudo apt-get -y updatesudo apt-get -y install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis6集群安装</title>
    <link href="/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="redis6-集群安装"><a href="#redis6-集群安装" class="headerlink" title="redis6 集群安装"></a>redis6 集群安装</h2><h3 id="gcc升级"><a href="#gcc升级" class="headerlink" title="gcc升级"></a>gcc升级</h3><p>安装redis6最主要的一点是要用GCC5以上，而CentOS6.9的GCC版本为4.8.x, 所以安装之前必须升级GCC。</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install gcc tclyum -y install centos-release-sclyum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>启用gcc</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">echo &quot;source &#x2F;opt&#x2F;rh&#x2F;devtoolset-9&#x2F;enable&quot; &gt;&gt; &#x2F;etc&#x2F;profilesource &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd &#x2F;optwget https:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-6.2.6.tar.gztar -xvf redis-6.2.6.tar.gzcd redis-6.2.6make MALLOC&#x3D;libcmake install PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;runmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;logmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7000mkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>设置redis配置文件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;opt&#x2F;redis-6.0.9&#x2F;redis.conf &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.confvi &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>文件配置内容</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">bind 192.168.146.199   #添加本机的ipport 7000  #端口　　pidfile &#x2F;usr&#x2F;local&#x2F;redis&#x2F;run&#x2F;redis_7000.pid   #pid存储目录logfile &#x2F;usr&#x2F;local&#x2F;redis&#x2F;log&#x2F;redis_7000.log   #日志存储目录dir &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7000                #数据存储目录，目录要提前创建好cluster-enabled yes  #开启集群cluster-config-file nodes-7000.conf   #集群节点配置文件，这个文件是不能手动编辑的。确保每一个集群节点的配置文件不通cluster-node-timeout 15000   #集群节点的超时时间，单位：ms，超时后集群会认为该节点失败appendonly yes  #持久化daemonize yes   #守护进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="建立不通的端口实例"><a href="#建立不通的端口实例" class="headerlink" title="建立不通的端口实例"></a>建立不通的端口实例</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7000.conf &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7001.confmkdir -p &#x2F;usr&#x2F;local&#x2F;redis&#x2F;data&#x2F;7001vi &#x2F;usr&#x2F;local&#x2F;redis&#x2F;conf&#x2F;redis_7001.conf # 配置文件和上述一样，只是端口不同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="制作启动文件"><a href="#制作启动文件" class="headerlink" title="制作启动文件"></a>制作启动文件</h3><p>启动脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi cluster_start.sh.&#x2F;redis-server ..&#x2F;conf&#x2F;redis_7000.conf.&#x2F;redis-server ..&#x2F;conf&#x2F;redis_7001.confchmod +x cluster_start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>关闭脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi cluster_shutdown.shpgrep redis-server | xargs -exec kill -9chmod +x cluster_shutdown.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>建立集群前需先启动各个节点的redis服务，并在其中一个redis服务器中执行以下指令建立集群。在5.0之后，可以直接使用redis-cli直接创建集群。</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">redis-cli --cluster create 192.168.146.199:7000 192.168.146.200:7000 192.168.146.201:7000 192.168.146.199:7001 192.168.146.200:7001 192.168.146.201:7001 --cluster-replicas 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>–cluster-replicas 1 参数表示希望每个主服务器都有一个从服务器，这里则代表3主3从，前3个代表3个master，后3个代表3个slave。</p><p>通过该方式创建的带有从节点的机器不能够自己手动指定主节点，redis集群会尽量把主从服务器分配在不同机器上。</p><h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">redis-cli -c -h 192.168.146.199 -p 7000 cluster info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7安装nginx</title>
    <link href="/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/"/>
    <url>/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/</url>
    
    <content type="html"><![CDATA[<h3 id="Centos7安装nginx"><a href="#Centos7安装nginx" class="headerlink" title="Centos7安装nginx"></a>Centos7安装nginx</h3><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install -y gcc automake autoconf libtool makeyum install -y gcc-c++yum install -y pcre pcre-develyum install -y zlib zlib-develyum install -y openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="下载nginx安装包"><a href="#下载nginx安装包" class="headerlink" title="下载nginx安装包"></a>下载nginx安装包</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.20.1.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">tar -zxvf  nginx-1.20.1.tar.gzcd nginx-1.20.1.&#x2F;configuremake &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 切换到nginx默认安装目录cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin# 启动.&#x2F;nginx# 查看nginx启动情况netstat -nlp|grep 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="配置及开机自启动"><a href="#配置及开机自启动" class="headerlink" title="配置及开机自启动"></a>配置及开机自启动</h4><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 配置nginx命令ln -s &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;bin&#x2F;nginx# 开机自启systemctl status rc-local # 查看自启文件，centos一般默认为 &#x2F;etc&#x2F;rc.d&#x2F;rc.localvi &#x2F;etc&#x2F;rc.d&#x2F;rc.local# 在最后一行添加nginx启动&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx# 赋予可执行权限chmod +x &#x2F;etc&#x2F;rc.d&#x2F;ec.local# 重新加载，需要先停止nginx服务，否付会出现端口已经占用的错误systemctl reload rc-local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes运维处理</title>
    <link href="/2022/01/29/kubernetes%E8%BF%90%E7%BB%B4/"/>
    <url>/2022/01/29/kubernetes%E8%BF%90%E7%BB%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="1-手动续期k8s证书"><a href="#1-手动续期k8s证书" class="headerlink" title="1. 手动续期k8s证书"></a>1. 手动续期k8s证书</h3><p>使用kubeadm搭建的k8s集群默认的kubectl只有一年有效期。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p>备份当前k8s证书</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp -r &#x2F;etc&#x2F;kubernetes &#x2F;etc&#x2F;kubernetes.bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>查看过期时间</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubeadm alpha certs check-expiration<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>更新证书</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubeadm alpha certs renew allsystemctl restart kubeletcp -a &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf &#x2F;root&#x2F;.kube&#x2F;config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>需要更新的文件</p><div class="code-wrapper"><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">└─etc    └─kubernetes        │  admin.conf        │  config        │  controller-manager.conf        │  scheduler.conf        │          ├─etcd        │   healthcheck-client.crt        │   healthcheck-client.key        │   peer.crt        │   peer.key        │   server.crt        │   server.key        │              └─pki            apiserver-etcd-client.crt            apiserver-etcd-client.key            apiserver-kubelet-client.crt            apiserver-kubelet-client.key            apiserver.crt            apiserver.key            front-proxy-client.crt            front-proxy-client.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>自动化脚本</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubeadm alpha certs renew alldocker ps -af &#39;name&#x3D;k8s_POD_(kube-apiserver|kube-controller-manager|kube-scheduler|etcd)-*&#39; -q | xargs docker restartcp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf &#x2F;root&#x2F;.kube&#x2F;configkubeadm alpha certs check-expiration<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h3 id="2-修改源码，证书调整为100年"><a href="#2-修改源码，证书调整为100年" class="headerlink" title="2. 修改源码，证书调整为100年"></a>2. 修改源码，证书调整为100年</h3><ol><li><p>下载源码，解压</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">wget https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kubernetes&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;v1.19.8.zipunzip kubernetes-v1.19.8.zipcd kubernetes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>修改ca证书时间</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi staging&#x2F;src&#x2F;k8s.io&#x2F;client-go&#x2F;util&#x2F;cert&#x2F;cert.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">NewSelfSignedCACert</span><span class="token punctuation">(</span>cfg Config<span class="token punctuation">,</span> key crypto<span class="token punctuation">.</span>Signer<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>x509<span class="token punctuation">.</span>Certificate<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        tmpl <span class="token operator">:=</span> x509<span class="token punctuation">.</span>Certificate<span class="token punctuation">&#123;</span>                SerialNumber<span class="token punctuation">:</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetInt64</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                Subject<span class="token punctuation">:</span> pkix<span class="token punctuation">.</span>Name<span class="token punctuation">&#123;</span>                        CommonName<span class="token punctuation">:</span>   cfg<span class="token punctuation">.</span>CommonName<span class="token punctuation">,</span>                        Organization<span class="token punctuation">:</span> cfg<span class="token punctuation">.</span>Organization<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                NotBefore<span class="token punctuation">:</span>             now<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment">// NotAfter:              now.Add(duration365d * 10).UTC(), 原本为10年</span>                NotAfter<span class="token punctuation">:</span>              now<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>duration365d <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 调整到100年</span>                KeyUsage<span class="token punctuation">:</span>              x509<span class="token punctuation">.</span>KeyUsageKeyEncipherment <span class="token operator">|</span> x509<span class="token punctuation">.</span>KeyUsageDigitalSignature <span class="token operator">|</span> x509<span class="token punctuation">.</span>KeyUsageCertSign<span class="token punctuation">,</span>                BasicConstraintsValid<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                IsCA<span class="token punctuation">:</span>                  <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        certDERBytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">CreateCertificate</span><span class="token punctuation">(</span>cryptorand<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> <span class="token operator">&amp;</span>tmpl<span class="token punctuation">,</span> <span class="token operator">&amp;</span>tmpl<span class="token punctuation">,</span> key<span class="token punctuation">.</span><span class="token function">Public</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> x509<span class="token punctuation">.</span><span class="token function">ParseCertificate</span><span class="token punctuation">(</span>certDERBytes<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// ...省略代码</span><span class="token keyword">func</span> <span class="token function">GenerateSelfSignedCertKeyWithFixtures</span><span class="token punctuation">(</span>host <span class="token builtin">string</span><span class="token punctuation">,</span> alternateIPs <span class="token punctuation">[</span><span class="token punctuation">]</span>net<span class="token punctuation">.</span>IP<span class="token punctuation">,</span> alternateDNS <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> fixtureDirectory <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        validFrom <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">-</span>time<span class="token punctuation">.</span>Hour<span class="token punctuation">)</span> <span class="token comment">// valid an hour earlier to avoid flakes due to clock skew</span>        <span class="token comment">// maxAge := time.Hour * 24 * 365          // one year self-signed certs</span>        maxAge <span class="token operator">:=</span> time<span class="token punctuation">.</span>Hour <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">*</span> <span class="token number">100</span>    <span class="token comment">// 同样调整到100年</span>        baseName <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s_%s_%s"</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token function">ipsToStrings</span><span class="token punctuation">(</span>alternateIPs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>alternateDNS<span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        certFixturePath <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>fixtureDirectory<span class="token punctuation">,</span> baseName<span class="token operator">+</span><span class="token string">".crt"</span><span class="token punctuation">)</span>        keyFixturePath <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>fixtureDirectory<span class="token punctuation">,</span> baseName<span class="token operator">+</span><span class="token string">".key"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>fixtureDirectory<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>                cert<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>certFixturePath<span class="token punctuation">)</span>                <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                        key<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>keyFixturePath<span class="token punctuation">)</span>                        <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">return</span> cert<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token boolean">nil</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"cert %s can be read, but key %s cannot: %v"</span><span class="token punctuation">,</span> certFixturePath<span class="token punctuation">,</span> keyFixturePath<span class="token punctuation">,</span> err<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                maxAge <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Hour <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">365</span> <span class="token comment">// 100 years fixtures</span>        <span class="token punctuation">&#125;</span>        caKey<span class="token punctuation">,</span> err <span class="token operator">:=</span> rsa<span class="token punctuation">.</span><span class="token function">GenerateKey</span><span class="token punctuation">(</span>cryptorand<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err        <span class="token punctuation">&#125;</span><span class="token comment">// ...省略代码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>修改普通证书时间</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi cmd&#x2F;kubeadm&#x2F;app&#x2F;constants&#x2F;constants.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// ...省略代码</span><span class="token keyword">const</span> <span class="token punctuation">(</span>        <span class="token comment">// KubernetesDir is the directory Kubernetes owns for storing various configuration files</span>        KubernetesDir <span class="token operator">=</span> <span class="token string">"/etc/kubernetes"</span>        <span class="token comment">// ManifestsSubDirName defines directory name to store manifests</span>        ManifestsSubDirName <span class="token operator">=</span> <span class="token string">"manifests"</span>        <span class="token comment">// TempDirForKubeadm defines temporary directory for kubeadm</span>        <span class="token comment">// should be joined with KubernetesDir.</span>        TempDirForKubeadm <span class="token operator">=</span> <span class="token string">"tmp"</span>        <span class="token comment">// CertificateValidity defines the validity for all the signed certificates generated by kubeadm</span>        <span class="token comment">// CertificateValidity = time.Hour * 24 * 365         // 注释掉原来只有1年的认证</span>        CertificateValidity <span class="token operator">=</span> time<span class="token punctuation">.</span>Hour <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">*</span> <span class="token number">100</span>  <span class="token comment">// 调整新的认证为100年 </span>        <span class="token comment">// CACertAndKeyBaseName defines certificate authority base name</span>        CACertAndKeyBaseName <span class="token operator">=</span> <span class="token string">"ca"</span>        <span class="token comment">// CACertName defines certificate name</span>        CACertName <span class="token operator">=</span> <span class="token string">"ca.crt"</span>        <span class="token comment">// CAKeyName defines certificate name</span>        CAKeyName <span class="token operator">=</span> <span class="token string">"ca.key"</span><span class="token comment">// ...省略代码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>重新编译源码</p><ol><li><p>安装go环境</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 查询当前kubernetes所使用的go版本cat .&#x2F;build&#x2F;build-image&#x2F;cross&#x2F;VERSION  # v1.19.8使用 v1.15.8-legacy-1的go版本，直接下载v1.15.8即可。wget https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.15.8.linux-amd64.tar.gz  # 下载其他版本，更改版本号tar -zxvf go1.15.8.linux-amd64.tar.gz  -C &#x2F;usr&#x2F;local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>配置go</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;profile# 写入以下内容export GO_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;goexport PATH&#x3D;$PATH:$GO_HOME&#x2F;bin# 生效source &#x2F;etc&#x2F;profile# 验证go version  # go version go1.15.8 linux&#x2F;amd64  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>安装编译所需组件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">yum install -y gcc make rsync jq <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>重新编译</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 重新编译kubeadmmake all WHAT&#x3D;cmd&#x2F;kubeadm GOFLAGS&#x3D;-v# 编译kubeletmake all WHAT&#x3D;cmd&#x2F;kubelet GOFLAGS&#x3D;-v# 编译kubectlmake all WHAT&#x3D;cmd&#x2F;kubectl GOFLAGS&#x3D;-v# 编译完的kubeadm在 _output&#x2F;bin&#x2F;kubeadm 目录下，其中bin是使用了软连接# 真实路径是_output&#x2F;local&#x2F;bin&#x2F;linux&#x2F;amd64&#x2F;kubeadm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li><li><p>执行证书更换</p><ol><li><p>备份文件</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp -r &#x2F;etc&#x2F;kubernetes&#x2F;pki &#x2F;etc&#x2F;kubernetes&#x2F;pki.backupmkdir -p &#x2F;etc&#x2F;kubernetes&#x2F;back &amp;&amp;  cp *.conf   &#x2F;etc&#x2F;kubernetes&#x2F;back<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>按照上面方法进行证书更新</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubeadm alpha certs renew alldocker ps -af &#39;name&#x3D;k8s_POD_(kube-apiserver|kube-controller-manager|kube-scheduler|etcd)-*&#39; -q | xargs docker restartcp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf &#x2F;root&#x2F;.kube&#x2F;configkubeadm alpha certs check-expiration<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol></li><li><p>目前存在的问题</p><p><font style='color:red;font-size:20px;font-weight:900;'>替换后可使用命令<code>kubeadm alpha certs renew all</code>续期证书，但无法更改ca证书，集群需重建才可以；<br>后续需继续研究，如何在已经运行的集群中，并且保证不中断业务的情况下续期ca及其他相关证书；</font></p></li></ol><h3 id="3-批量处理pod"><a href="#3-批量处理pod" class="headerlink" title="3. 批量处理pod"></a>3. 批量处理pod</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 查询所有不正常的podkubectl get pod -A|grep [Evicted]# 删除命名空间下不正常的podkubectl get pod -n [NS]|grep &#39;[Evicted]&#39;|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n [NS]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>自动处理不正常的pod</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vi opt.sh# opt.sh的内容for i in $(kubectl get pod -A|grep [Evicted]|awk &#39;!a[$1]++&#123;print&#125;&#39;|awk &#39;&#123;print$1&#125;&#39;)dokubectl get pod -n $i|grep &#39;[Evicted]&#39;|awk &#39;&#123;print$1&#125;&#39;|xargs kubectl delete pod -n $idone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>强制删除pod</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubectl delete pod [pod name] --force --grace-period&#x3D;0 -n [namespace]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>强制删除命名空间</p><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">kubectl delete namespace NAMESPACENAME --force --grace-period&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="4-产生k8s管理源密钥"><a href="#4-产生k8s管理源密钥" class="headerlink" title="4. 产生k8s管理源密钥"></a>4. 产生k8s管理源密钥</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 产生k8s管理员密钥adm_account&#x3D;&quot;k8s-dash-admin&quot;kubectl create serviceaccount $&#123;adm_account&#125; -n kube-systemkubectl create clusterrolebinding $&#123;adm_account&#125; --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:$&#123;adm_account&#125;kubectl -n kube-system describe secrets $(kubectl -n kube-system get secret | grep $&#123;adm_account&#125; | awk &#39;&#123;print $1&#125;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-kubeadm添加新的工作节点"><a href="#5-kubeadm添加新的工作节点" class="headerlink" title="5. kubeadm添加新的工作节点"></a>5. kubeadm添加新的工作节点</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 1、安装docker及kubelet，每次安装都是可能安装的最新版的docker，无法指定版本export REGISTRY_MIRROR&#x3D;https:&#x2F;&#x2F;registry.cn-hangzhou.aliyuncs.comcurl -sSL https:&#x2F;&#x2F;kuboard.cn&#x2F;install-script&#x2F;v1.17.x&#x2F;install_kubelet.sh | sh -s 1.17.2# 2、导入工作节点中需要的images，如果网络好，可以省略# 工作节点必要：使用calico网络插件# calico-cni，calico-node，calico-pod2daemon-flexvol，kube-proxy，pausek8s.gcr.io&#x2F;kube-apiserver:v1.17.2k8s.gcr.io&#x2F;kube-controller-manager:v1.17.2k8s.gcr.io&#x2F;kube-scheduler:v1.17.2k8s.gcr.io&#x2F;kube-proxy:v1.17.2k8s.gcr.io&#x2F;pause:3.1k8s.gcr.io&#x2F;etcd:3.4.3-0k8s.gcr.io&#x2F;coredns:1.6.5docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;kube-proxy:v1.17.2 k8s.gcr.io&#x2F;kube-proxy:v1.17.2docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;kube-apiserver:v1.17.2 k8s.gcr.io&#x2F;kube-apiserver:v1.17.2docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;kube-controller-manager:v1.17.2 k8s.gcr.io&#x2F;kube-controller-manager:v1.17.2docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;kube-scheduler:v1.17.2 k8s.gcr.io&#x2F;kube-scheduler:v1.17.2docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;coredns:1.6.5 k8s.gcr.io&#x2F;coredns:1.6.5docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;etcd:3.4.3-0 k8s.gcr.io&#x2F;etcd:3.4.3-0docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;pause:3.1 k8s.gcr.io&#x2F;pause:3.1# 3、在master上执行，获取加入tokenkubeadm token create --print-join-command# 4、将上面输出的语句，复制进工作节点运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
      <tag>kubeadm</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

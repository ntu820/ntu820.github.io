<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NFS服务搭建</title>
    <link href="/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/19/NFS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="Centos7安装及配置-NFS-服务器"><a href="#Centos7安装及配置-NFS-服务器" class="headerlink" title="Centos7安装及配置 NFS 服务器"></a>Centos7安装及配置 NFS 服务器</h2><h3 id="步骤-1：安装-NFS-服务器-NFS-kernel-server"><a href="#步骤-1：安装-NFS-服务器-NFS-kernel-server" class="headerlink" title="步骤 1：安装 NFS 服务器 (NFS kernel server)"></a>步骤 1：安装 NFS 服务器 (NFS kernel server)</h3><p>若要设置服务器机器，就必须在机器上安装 NFS 服务器。</p><ol><li>安装 NFS 服务器。<figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">yum -y install nfs-utils rpcbind<br></code></pre></td></tr></table></figure></li></ol><h3 id="步骤-2：创建输出目录"><a href="#步骤-2：创建输出目录" class="headerlink" title="步骤 2：创建输出目录"></a>步骤 2：创建输出目录</h3><p>NFS 客户端将在服务器机器上挂载一个目录，该目录已由 NFS 服务器输出。</p><ol><li>运行以下命令来指定挂载文件夹名称<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkdir -p /home/zjnfs<br>chmod -R a+w /home/zjnfs<br></code></pre></td></tr></table></figure></li></ol><h3 id="步骤-3：授予客户端机器访问-NFS-服务器的权限"><a href="#步骤-3：授予客户端机器访问-NFS-服务器的权限" class="headerlink" title="步骤 3：授予客户端机器访问 NFS 服务器的权限"></a>步骤 3：授予客户端机器访问 NFS 服务器的权限</h3><ol><li><p>运行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/exports<br></code></pre></td></tr></table></figure></li><li><p>将客户端信息添加到文件中。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/home/zjnfs *(rw,sync,no_root_squash)<br></code></pre></td></tr></table></figure></li></ol><h3 id="步骤4：启动服务"><a href="#步骤4：启动服务" class="headerlink" title="步骤4：启动服务"></a>步骤4：启动服务</h3><ol><li><p>启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start rpcbind<br>systemctl start nfs<br></code></pre></td></tr></table></figure></li></ol><h3 id="步骤-4：应用配置"><a href="#步骤-4：应用配置" class="headerlink" title="步骤 4：应用配置"></a>步骤 4：应用配置</h3><ol><li><p>运行以下命令输出共享目录。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">exportfs -arv<br></code></pre></td></tr></table></figure></li></ol><h3 id="使用showmount命令测试NFS输出目录状态"><a href="#使用showmount命令测试NFS输出目录状态" class="headerlink" title="使用showmount命令测试NFS输出目录状态"></a>使用showmount命令测试NFS输出目录状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">showmount -e<br><span class="hljs-comment"># 客户端测试</span><br>showmount -e [NFS服务器IP]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NFS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NFS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>maven常用操作</title>
    <link href="/2022/05/07/maven%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/07/maven%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="maven安装、配置"><a href="#maven安装、配置" class="headerlink" title="maven安装、配置"></a>maven安装、配置</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置MAVEN-HOME"><a href="#配置MAVEN-HOME" class="headerlink" title="配置MAVEN_HOME"></a>配置MAVEN_HOME</h4><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E9%85%8D%E7%BD%AE.png" alt="mvn配置"></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">C:\Users\Administrator&gt;mvn -v<br>Apache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-05T03:00:29+08:00)<br>Maven home: D:\develop\apache-maven-3.6.1\bin\..<br>Java version: 1.8.0_152, vendor: Oracle Corporation, runtime: D:\Java\jdk1.8.0_152\jre<br>Default locale: zh_CN, platform encoding: GBK<br>OS name: <span class="hljs-string">&quot;windows 10&quot;</span>, version: <span class="hljs-string">&quot;10.0&quot;</span>, arch: <span class="hljs-string">&quot;amd64&quot;</span>, family: <span class="hljs-string">&quot;windows&quot;</span><br></code></pre></td></tr></table></figure><p>看到此字样，即为成功。</p><h4 id="配置settings-conf，一般在maven根目录下的conf文件下"><a href="#配置settings-conf，一般在maven根目录下的conf文件下" class="headerlink" title="配置settings.conf，一般在maven根目录下的conf文件下"></a>配置settings.conf，一般在maven根目录下的conf文件下</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 配置jar包本地下载地址 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D:\my_maven\repository<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">pluginGroups</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">pluginGroup</span>&gt;</span>org.pentaho.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pluginGroup</span>&gt;</span>com.pentaho.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pluginGroup</span>&gt;</span>com.github.spotbugs<span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroup</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroups</span>&gt;</span><br><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">proxies</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">proxies</span>&gt;</span><br><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">servers</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">server</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>pentaho-public<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>devreaduser<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>&#123;zIMyJWfHKfoHiBJAVsAgW4E5BcJzR+nhTtgPy0J+/rs=&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">server</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 配置私服认证 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">server</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>ztgt-release<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>[username]<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>[password]<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">server</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">servers</span>&gt;</span><br><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 配置阿里仓库，加快下载 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>alimaven in central RELEASE.<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun Maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>xxx<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--  --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span>   <br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>ztgt-release<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span>   <br>      <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span>   <br>      <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://ip/repository/maven-ztgt/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span>   <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>pentaho<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">repositories</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>pentaho-public<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Pentaho Public<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">repositories</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">pluginRepositories</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">pluginRepository</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>pentaho-public<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Pentaho Public<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">pluginRepository</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">pluginRepositories</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="maven常用操作"><a href="#maven常用操作" class="headerlink" title="maven常用操作"></a>maven常用操作</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><code>mvn -Dmaven.test.skip=true clean package</code></p><p>-Dmaven.test.skip=true：跳过测试</p><p>clean：先进行清理</p><h3 id="安装jar"><a href="#安装jar" class="headerlink" title="安装jar"></a>安装jar</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">mvn install:install-file \ <span class="hljs-comment"># 操作</span><br>    -Dfile=[XXX.jar] \ <span class="hljs-comment"># jar包名称</span><br>    -DgroupId=[com.hmifo] \ <span class="hljs-comment"># groupid</span><br>    -DartifactId=[hm-core-tool] \ <span class="hljs-comment"># artifactid</span><br>    -Dversion=[1.0.0.RELEASE] \ <span class="hljs-comment"># 版本</span><br>    -Dpackaging=jar <span class="hljs-comment"># 格式</span><br></code></pre></td></tr></table></figure><p>需要和当前jar在同一级目录下执行</p><h3 id="上传jar到私服"><a href="#上传jar到私服" class="headerlink" title="上传jar到私服"></a>上传jar到私服</h3><ol><li>配置上传目标</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">distributionManagement</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>ztgt-release<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span> <span class="hljs-comment">&lt;!-- 这里和私服配置的id必须一致 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Release Repository<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://ip/repository/maven-ztgt/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">distributionManagement</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>上传</li></ol><ul><li>命令上传</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">mvn deploy:deploy-file \ <span class="hljs-comment"># 上传操作</span><br>    -DgroupId=[com.zhenai.dakehu] \ <span class="hljs-comment"># groupid</span><br>    -DartifactId=[dakehu-commons] \ <span class="hljs-comment"># artifactid</span><br>    -Dversion=[1.0.0-SNAPSHOT] \ <span class="hljs-comment"># 版本</span><br>    -Dpacckaging=jar \ <span class="hljs-comment"># 格式</span><br>    -Dfile=[dakehu-commons-1.0.0-SNAPSHOT.jar] \ <span class="hljs-comment"># 文件名称</span><br>    -DrepositoryId=[aven-snapshots] \ <span class="hljs-comment"># 仓库id，和私服配置的必须一致</span><br>    -Durl=p[ttp://112.124.33.150:8081/repository/maven-snapshots/ <span class="hljs-comment"># 私服地址</span><br></code></pre></td></tr></table></figure><ul><li>idea上传</li></ul><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvn%E4%B8%8A%E4%BC%A0.png" alt="mvn上传"></p><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ol><li><p>更新版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 更新版本号 -DgenerateBackupPoms=false  不生成备份文件</span><br>mvn versions:<span class="hljs-built_in">set</span> -DnewVersion=[1.0.2-SNAPSHOT]<br></code></pre></td></tr></table></figure></li><li><p>更新子模块版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn -N versions:update-child-modules<br></code></pre></td></tr></table></figure></li><li><p>版本回退</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 版本回滚，提交后就无法回滚了</span><br>mvn versions:revert<br></code></pre></td></tr></table></figure></li><li><p>版本提交</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn versions:commit<br></code></pre></td></tr></table></figure></li></ol><h2 id="maven制作archetype"><a href="#maven制作archetype" class="headerlink" title="maven制作archetype"></a>maven制作archetype</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Archetype是Maven工程的模板工具包。使用Archetype提供的方法可以快速的构建和组织一致化的工程，解决在工作过程中创建一个新项目时需一堆繁琐的配置工作等。</p><h3 id="基于maven项目制作archetype"><a href="#基于maven项目制作archetype" class="headerlink" title="基于maven项目制作archetype"></a>基于maven项目制作archetype</h3><ol><li><p>准备好maven项目，将无关代码全部删除，只保留最基础的项目和结构</p></li><li><p>在项目的根目录下的pom中添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>进入项目根目录，执行<code>mvn archetype:create-from-project</code>进行模板生成</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvncreatearchetype.png" alt="mvncreatearchetype"></p></li><li><p>进入项目的<font style="font-weight:bold;">/target/generated-sources/archetype</font>目录，执行<code>mvn clean install</code></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/mvninstallarchetypr.png" alt="mvninstallarchetypr"></p></li><li><p>idea使用自定义archetype</p><ol><li><p>建立自己的项目模板</p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype.png" alt="createproformarchetype"></p><p><img src="/img/maven%E6%93%8D%E4%BD%9C/createproformarchetype2.png" alt="createproformarchetype2"></p><blockquote><p>1.<font style="background:#EFDAA2">archetype-catalog.xml</font>一般在<font style="background:#EFDAA2">.m2</font>的目录下，默认为用户家目录</p><p>2.如果修改过maven的仓库保存路径的，一般就在修改过的目录下，可以找到a<font style="background:#EFDAA2">rchetype-catalog.xml</font>文件</p><p>3.为了正确执行生成操作，建议在用户家目录下新建<font style="background:#EFDAA2">.m2</font>文件夹，然后把maven的<font style="background:#EFDAA2">settings.xml</font>和<font style="background:#EFDAA2">archetype-catlog.xml</font>放进去</p></blockquote></li><li><p>填写自己项目的信息，即可进行生成</p></li></ol></li><li><p>删除自定义的archetype</p><p>一般在<font style="background:#EFDAA2">C:\Users\Administrator\AppData\Local\JetBrains\IntelliJIdea2020.1\Maven\Indices</font>或者<font style="background:#EFDAA2">C:\Users\Administrator.idea\Maven\Indices</font>文件夹下，找到<font style="background:#EFDAA2">UserArchetypes.xml</font>文件，去除想要删除archetype模板，重启idea即可</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>maven</category>
      
    </categories>
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下skywalking8.3实践，监控JAVA应用</title>
    <link href="/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/"/>
    <url>/2022/04/24/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前提：需要提前配置JDK，至少在1.8版本以上。</p><p>skywalking8.3-es7版本，下载地址：<a href="https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz">https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz</a></p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">wget https://archive.apache.org/dist/skywalking/8.3.0/apache-skywalking-apm-es7-8.3.0.tar.gz<br>tar -zxvf apache-skywalking-apm-es7-8.3.0.tar.gz<br>mv apache-skywalking-apm-es7-bin /usr/<span class="hljs-built_in">local</span>/skwalking-es7<br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/skywalking-es7<br>vi webapp/webapp.yml<br><span class="hljs-comment"># 修改端口号，如果端口没被占用，可以不修改</span><br>server:<br>  port: 8080 <span class="hljs-comment"># UI默认端口</span><br><br>collector:<br>  path: /graphql<br>  ribbon:<br>    ReadTimeout: 10000<br>    listOfServers: 172.16.214.41:12800 <span class="hljs-comment"># 这里改成自己电脑的IP</span><br>    <br>vi config/application.yml<br><span class="hljs-comment"># 主要修改存储为es7</span><br>storage:<br>  selector: <span class="hljs-variable">$&#123;SW_STORAGE:elasticsearch7&#125;</span> <span class="hljs-comment"># 修改后端存储</span><br>  elasticsearch7:<br>    nameSpace: <span class="hljs-variable">$&#123;SW_NAMESPACE:&quot;skywalking&quot;&#125;</span> <span class="hljs-comment"># 修改es中索引的前缀</span><br>    clusterNodes: <span class="hljs-variable">$&#123;SW_STORAGE_ES_CLUSTER_NODES:172.16.214.107:9200&#125;</span> <span class="hljs-comment"># 配置es的地址</span><br>    user: <span class="hljs-variable">$&#123;SW_ES_USER:&quot;elastic&quot;&#125;</span> <span class="hljs-comment"># es登录用户名，如果没有则为空</span><br>    password: <span class="hljs-variable">$&#123;SW_ES_PASSWORD:&quot;ccc7711866&quot;&#125;</span> <span class="hljs-comment"># es登录密码，如果没有则为空</span><br></code></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">bin/startup.sh<br>tail -f logs/skywalking-oap-server.log <span class="hljs-comment"># 可以看到启动情况</span><br><br>netstat -nlp|grep java<br><span class="hljs-comment"># 需要看到三个端口，8080为UI端口，11800为grpc通讯端口，12800为http通讯端口</span><br></code></pre></td></tr></table></figure><h3 id="监控JAVA应用"><a href="#监控JAVA应用" class="headerlink" title="监控JAVA应用"></a>监控JAVA应用</h3><h4 id="方式1，本地通过java的vm启动参数进行"><a href="#方式1，本地通过java的vm启动参数进行" class="headerlink" title="方式1，本地通过java的vm启动参数进行"></a>方式1，本地通过java的vm启动参数进行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">-Dskywalking.agent.service_name=blade-user-local \ # swywalking监控显示应用名称<br>-Dskywalking.collector.backend_service=192.168.186.66:11800 \ # skywalking后端地址<br>-jar XXXX.jar<br></code></pre></td></tr></table></figure><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-javavm.png" alt="sk-javavm"></p><h4 id="方式2，通过将skywalking-agent打入镜像包进行"><a href="#方式2，通过将skywalking-agent打入镜像包进行" class="headerlink" title="方式2，通过将skywalking-agent打入镜像包进行"></a>方式2，通过将skywalking-agent打入镜像包进行</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine-java:openjdk8-openj9<br><br><span class="hljs-keyword">ENV</span> LANG=C.UTF-<span class="hljs-number">8</span><br><br><span class="hljs-keyword">RUN</span><span class="bash"> <span class="hljs-built_in">set</span> -eux \</span><br><span class="bash">&amp;&amp; mkdir /biz \</span><br><span class="bash">&amp;&amp; mkdir /usr/skywalking/agent</span><br><br><span class="hljs-keyword">ADD</span><span class="bash"> ./*.jar ./app.jar</span><br><br><span class="hljs-keyword">ADD</span><span class="bash"> ./skywalking-agent /usr/skywalking/agent</span><br><br><span class="hljs-keyword">WORKDIR</span><span class="bash"> /biz</span><br><br><span class="hljs-keyword">ENTRYPOINT</span><span class="bash"> [<span class="hljs-string">&quot;java&quot;</span>, <span class="hljs-string">&quot;-javaagent:/usr/skywalking/agent/skywalking-agent.jar&quot;</span>, <span class="hljs-string">&quot;-Dskywalking.agent.service_name=blade-user-linux&quot;</span>, <span class="hljs-string">&quot;-Dskywalking.collector.backend_service=[skywalking-oap服务的地址]:11800&quot;</span>, <span class="hljs-string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>, <span class="hljs-string">&quot;-jar&quot;</span>, <span class="hljs-string">&quot;app.jar&quot;</span>]</span><br></code></pre></td></tr></table></figure><h4 id="方式3，通过Kubernetes的sidecar模式进行（推荐）"><a href="#方式3，通过Kubernetes的sidecar模式进行（推荐）" class="headerlink" title="方式3，通过Kubernetes的sidecar模式进行（推荐）"></a>方式3，通过Kubernetes的sidecar模式进行（推荐）</h4><p>方式1，通过参数输入方式只能在本地和不进行容器化的时候使用，而且服务器上必须有skywalking-agent的包；方式2，通过制作镜像时将skywalking相关文件集成进去，制作的业务镜像大小变大，而且没办法动态修改监控内容。采用sidecar模式，本身不需要改变原有镜像的打包方式，其次，对于业务开发来说透明，开发人员无需关系skywalking内容。</p><h5 id="1-制作自己的skywalking-agengt镜像"><a href="#1-制作自己的skywalking-agengt镜像" class="headerlink" title="1. 制作自己的skywalking-agengt镜像"></a>1. 制作自己的skywalking-agengt镜像</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> busybox:latest<br><br><span class="hljs-keyword">ENV</span> LANG=C.UTF-<span class="hljs-number">8</span><br><br><span class="hljs-keyword">RUN</span><span class="bash"> <span class="hljs-built_in">set</span> -eux \</span><br><span class="bash">&amp;&amp; mkdir -p /usr/skywalking/agent</span><br><br><span class="hljs-keyword">add</span><span class="bash"> ./skywalking-agent /usr/skywalking/agent</span><br><br><span class="hljs-keyword">WORKDIR</span><span class="bash"> /usr/skywalking/agent</span><br></code></pre></td></tr></table></figure><h5 id="2-在yaml文件中，通过initContainer方式进行集成"><a href="#2-在yaml文件中，通过initContainer方式进行集成" class="headerlink" title="2.在yaml文件中，通过initContainer方式进行集成"></a>2.在yaml文件中，通过initContainer方式进行集成</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">skywalk-demo-deploy</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">skywalk-demo</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">skywalk-demo</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">skywalk-demo</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">initContainers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sw-agent-sidecar</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.zt.net.cn/library/skywalking-agent-sidecar:8.3.0</span> <span class="hljs-comment"># 自己的agent镜像</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&quot;sh&quot;</span>]<br>          <span class="hljs-attr">args:</span><br>            [<br>              <span class="hljs-string">&quot;-c&quot;</span>,<br>              <span class="hljs-string">&quot;mkdir -p /skywalking/agent &amp;&amp; cp -r /usr/skywalking/agent/* /skywalking/agent&quot;</span><br>            ]<br>          <span class="hljs-attr">volumeMounts:</span> <span class="hljs-comment"># 文件挂在点</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/skywalking/agent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">sw-agent</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">skywalk-demo</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.zt.net.cn/bladex/skywalking-test-demo:v1</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">JAVA_TOOL_OPTIONS</span> <span class="hljs-comment"># 通过JAVA_TOOL_OPTIONS参数进行集成</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">-javaagent:/usr/skywalking/agent/skywalking-agent.jar</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">SW_AGENT_NAME</span> <span class="hljs-comment"># 应用在skywalking中的名称</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">skywalking-demo</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">SW_AGENT_COLLECTOR_BACKEND_SERVICES</span> <span class="hljs-comment"># skywalking的oap服务地址</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.186</span><span class="hljs-number">.34</span><span class="hljs-string">:11800</span><br>          <span class="hljs-attr">resources:</span><br>            <span class="hljs-attr">limits:</span><br>              <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;1000Mi&quot;</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;500m&quot;</span><br>          <span class="hljs-attr">ports:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">8080</span><br>          <span class="hljs-attr">volumeMounts:</span> <span class="hljs-comment"># 文件挂在点</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sw-agent</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/skywalking/agent</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sw-agent</span> <span class="hljs-comment"># 文件挂在点，这里给一个空文件</span><br>          <span class="hljs-attr">emptyDir:</span> &#123;&#125;<br>      <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Always</span><br>      <span class="hljs-attr">imagePullSecrets:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">harbor-secret</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">skywalk-demo</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">skywalk-demo-svc</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">web</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8080</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">skywalk-demo</span><br></code></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-apm.png" alt="sk-apm"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-db.png" alt="sk-db"></p><p><img src="/img/linux%E4%B8%8B%E9%83%A8%E7%BD%B2skywalking/sk-topology.png" alt="sk-topology"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>skywalking</category>
      
    </categories>
    
    
    <tags>
      
      <tag>skywalking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各种运维处理</title>
    <link href="/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/"/>
    <url>/2022/04/11/%E5%90%84%E7%A7%8D%E8%BF%90%E7%BB%B4%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="kubectl操作"><a href="#kubectl操作" class="headerlink" title="kubectl操作"></a>kubectl操作</h3><ol><li>批量操作<figure class="highlight vim"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs vim"># 批量删除kube-<span class="hljs-built_in">system</span>空间下状态为“驱逐”的pod<br>kubectl <span class="hljs-built_in">get</span> pod -n kube-<span class="hljs-built_in">system</span>|<span class="hljs-keyword">grep</span> Evicted|awk <span class="hljs-string">&#x27;&#123;print$1&#125;&#x27;</span>|xargs kubectl <span class="hljs-keyword">delete</span> pod -n kube-<span class="hljs-built_in">system</span><br></code></pre></td></tr></table></figure>批量操作说明，所有批量操作都可以采用此方案<br></li></ol><ul><li>使用命令查询出需要批量操作的内容</li><li>使用 <code>awk</code> 打印出内容的标识</li><li>使用 <code>xargs</code> 进行命令的拼接</li></ul><ol start="2"><li>产生集群管理员的密钥<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">adm_account</span>=<span class="hljs-string">&quot;k8s-dash-admin&quot;</span><br><br><span class="hljs-comment"># 产生sa</span><br>kubectl create serviceaccount <span class="hljs-variable">$&#123;adm_account&#125;</span> -n kube-system<br><br><span class="hljs-comment"># 产生集群角色绑定</span><br>kubectl create clusterrolebinding <span class="hljs-variable">$&#123;adm_account&#125;</span> <span class="hljs-attribute">--clusterrole</span>=cluster-admin <span class="hljs-attribute">--serviceaccount</span>=kube-system:$&#123;adm_account&#125;<br><br><span class="hljs-comment"># 查看密钥</span><br>kubectl -n kube-system describe secrets $(kubectl -n kube-system <span class="hljs-builtin-name">get</span><span class="hljs-built_in"> secret </span>| grep <span class="hljs-variable">$&#123;adm_account&#125;</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ol><h3 id="docker操作"><a href="#docker操作" class="headerlink" title="docker操作"></a>docker操作</h3><ol><li>解决overlay2空间越来越大问题<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 进入目录</span><br><span class="hljs-keyword">cd</span> <span class="hljs-keyword">cd</span> <span class="hljs-string">/var/lib/docker/overlay2</span><br><span class="hljs-comment"># 查看文件大小</span><br>du -h <span class="hljs-params">--max-depth=1</span><br><span class="hljs-comment"># 查看占用空间的pid，以及对应的容器名称</span><br>docker ps -q | xargs docker inspect <span class="hljs-params">--format</span> &#x27;&#123;&#123;<span class="hljs-string">.State.Pid</span>&#125;&#125;, &#123;&#123;<span class="hljs-string">.Name</span>&#125;&#125;, &#123;&#123;<span class="hljs-string">.GraphDriver.Data.WorkDir</span>&#125;&#125;&#x27; | grep <span class="hljs-string">&quot;[overlay2的文件名称]&quot;</span><br><span class="hljs-comment"># 解决方法（会删除对应的容器和对应镜像）</span><br>docker stop [容器名称] &amp;&amp; docker rm [容器名称] &amp;&amp; docker rmi [镜像id]<br></code></pre></td></tr></table></figure></li></ol><h3 id="curl操作"><a href="#curl操作" class="headerlink" title="curl操作"></a>curl操作</h3><ol><li>发送get请求<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">curl [-X <span class="hljs-builtin-name">GET</span>] <span class="hljs-string">&quot;http://127.0.0.1/api/ztgt-mdm/getMdmInfo/deptInfo&quot;</span><br></code></pre></td></tr></table></figure></li><li>发送post请求<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -H <span class="hljs-string">&quot;serviceCode: 1052125D01&quot;</span> -H <span class="hljs-string">&quot;sourceCode: 1052&quot;</span> -H <span class="hljs-string">&quot;requestId: fc7deb67-6168-4d70-9c22-cbdd16a99f28&quot;</span> -X POST -d &#x27;&#123;<span class="hljs-string">&quot;COMPID&quot;</span>:<span class="hljs-string">&quot;1339&quot;</span>,<span class="hljs-string">&quot;PROJECTNO&quot;</span>:<span class="hljs-string">&quot;NTGC20201015&quot;</span>,<span class="hljs-string">&quot;AMT&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-string">&quot;TYPE&quot;</span>:<span class="hljs-string">&quot;GC&quot;</span>,<span class="hljs-string">&quot;PROJECTNAME&quot;</span>:<span class="hljs-string">&quot;加油点（柴油）单元&quot;</span>&#125;&#x27; <span class="hljs-string">&quot;http://esb-pre.zt.net.cn:18080/esb/comm/api&quot;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="Linux防火墙操作"><a href="#Linux防火墙操作" class="headerlink" title="Linux防火墙操作"></a>Linux防火墙操作</h3><ol><li><p>firewalld的基本使用</p><table><thead><tr><th></th><th>操作</th><th align="left">命令</th></tr></thead><tbody><tr><td></td><td>启动</td><td align="left"><code>systemctl start firewalld</code></td></tr><tr><td></td><td>关闭</td><td align="left"><code>systemctl stop firewalld</code></td></tr><tr><td></td><td>查看状态</td><td align="left"><code>systemctl status firewalld</code></td></tr><tr><td></td><td>开机禁用</td><td align="left"><code>systemctl disable firewalld</code></td></tr><tr><td></td><td>开机启动</td><td align="left"><code>systemctl enable firewalld</code></td></tr></tbody></table></li><li><p>firewalld-cmd操作</p><table><thead><tr><th></th><th>操作</th><th>命令</th></tr></thead><tbody><tr><td></td><td>查看版本</td><td><code>firewall-cmd --version</code></td></tr><tr><td></td><td>显示状态</td><td><code>firewall-cmd --state</code></td></tr><tr><td></td><td>查看所有打开的端口</td><td><code>firewall-cmd --zone=public --list-ports</code></td></tr><tr><td></td><td>更新防火墙规则</td><td><code>firewall-cmd --reload</code></td></tr><tr><td></td><td>查看区域信息</td><td><code>firewall-cmd --get-active-zones</code></td></tr><tr><td></td><td>查看指定接口所属区域</td><td><code>firewall-cmd --get-zone-of-interface=eth0</code></td></tr><tr><td></td><td>拒绝所有包</td><td><code>firewall-cmd --panic-on</code></td></tr><tr><td></td><td>取消拒绝状态</td><td><code>firewall-cmd --panic-off</code></td></tr><tr><td></td><td>查看是否拒绝</td><td><code>firewall-cmd --query-panic</code></td></tr><tr><td></td><td>添加</td><td><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></td></tr><tr><td></td><td>删除</td><td><code>firewall-cmd --zone= public --remove-port=80/tcp --permanent</code></td></tr></tbody></table></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>kubectl</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装sonarqube-8.9.7</title>
    <link href="/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/"/>
    <url>/2022/03/31/%E5%AE%89%E8%A3%85sonarquber-8-9-7/</url>
    
    <content type="html"><![CDATA[<h3 id="下载sonarqube"><a href="#下载sonarqube" class="headerlink" title="下载sonarqube"></a>下载sonarqube</h3><p>社区版下载：<a href="https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip">https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.7.52159.zip</a></p><p>sonarqube从7.9开始已经不支持mysql了，所以需要提前安装jdk和pg。</p><p>本次环境前提：</p><table><thead><tr><th>序号</th><th>环境</th><th>版本</th></tr></thead><tbody><tr><td>1</td><td>jdk</td><td>14</td></tr><tr><td>2</td><td>postgresql</td><td>14</td></tr><tr><td>3</td><td>sonarqube</td><td>8.9.7</td></tr></tbody></table><h3 id="新建sqonarqube数据库"><a href="#新建sqonarqube数据库" class="headerlink" title="新建sqonarqube数据库"></a>新建sqonarqube数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#创建sonar数据库</span><br>create database sonar;<br><span class="hljs-comment">#创建sonar用户</span><br>create user sonar;<br><span class="hljs-comment">#设置sonar用户密码(否则会导致连不上数据库)</span><br>alter user sonar with password <span class="hljs-string">&#x27;postgres&#x27;</span>;<br><span class="hljs-comment">#给sonar授权</span><br>alter role sonar createdb;<br>alter role sonar superuser;<br>alter role sonar createrole;    <br><span class="hljs-comment">#更改sonar数据库拥有者(这一步是必须的，否则会sonarqube会连接失败)</span><br>alter database sonar owner to sonar；<br></code></pre></td></tr></table></figure><h3 id="修改系统配置"><a href="#修改系统配置" class="headerlink" title="修改系统配置"></a>修改系统配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/sysctl.conf<br><span class="hljs-comment"># 在文件末尾添加如下</span><br>vm.max_map_count=262144<br>fs.file-max=65536<br><span class="hljs-comment"># 生效</span><br>/sbin/sysctl -p<br><br>vi /etc/profile<br><span class="hljs-comment"># 在文件末尾添加如下</span><br><span class="hljs-built_in">ulimit</span> -n 65536<br><span class="hljs-comment"># 生效</span><br><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><h3 id="创建sonar用户"><a href="#创建sonar用户" class="headerlink" title="创建sonar用户"></a>创建sonar用户</h3><p>因为sonarquber无法使用<code>root</code>用户启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 添加用户</span><br>useradd sonar<br><span class="hljs-comment"># 设置密码</span><br>passwd sonar<br><span class="hljs-comment"># 分配权限</span><br>chown -R sonar:sonar /usr/<span class="hljs-built_in">local</span>/sonarqube-8.9.7<br></code></pre></td></tr></table></figure><h3 id="配置数据库连接和ES"><a href="#配置数据库连接和ES" class="headerlink" title="配置数据库连接和ES"></a>配置数据库连接和ES</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /usr/<span class="hljs-built_in">local</span>/sonarqube-8.9.7/conf/sonar.properties<br></code></pre></td></tr></table></figure><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonardb.png" alt="sonardb"></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarhost.png" alt="sonarhost"></p><p>默认情况下，Elasticsearch数据存储在$ SONARQUBE-HOME / data中，但不建议将其用于生产实例。相反，您应该将此数据存储在其他位置，最好是在具有快速I / O的专用卷中。除了保持可接受的性能外，这样做还可以简化SonarQube的升级</p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonares.png" alt="sonares"></p><h3 id="创建必要的目录、权限"><a href="#创建必要的目录、权限" class="headerlink" title="创建必要的目录、权限"></a>创建必要的目录、权限</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">mkdir</span> -p /<span class="hljs-class"><span class="hljs-keyword">data</span>/sonarqube/<span class="hljs-keyword">data</span></span><br><span class="hljs-title">mkdir</span> -p /<span class="hljs-class"><span class="hljs-keyword">data</span>/sonarqube/temp</span><br><span class="hljs-title">chown</span> -<span class="hljs-type">R</span> sonar:sonar /<span class="hljs-class"><span class="hljs-keyword">data</span>/sonarqube</span><br></code></pre></td></tr></table></figure><h3 id="安装sonar-scanner扫描器"><a href="#安装sonar-scanner扫描器" class="headerlink" title="安装sonar-scanner扫描器"></a>安装sonar-scanner扫描器</h3><p>下载地址：<a href="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip">https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 解压，放到/usr/local下</span><br>unzip sonar-scanner-cli-4.7.0.2747-linux.zip<br>vi /usr/<span class="hljs-built_in">local</span>/sonar-scanner-4.7.0.2747-linux/conf/sonar-scanner.properties<br></code></pre></td></tr></table></figure><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarscanner.png" alt="sonarscanner"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 创建软连接，将sonar-scanner改为全局即可使用</span><br>ln -s /usr/<span class="hljs-built_in">local</span>/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner /usr/bin/sonar-scanner<br></code></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p><font color='red' size='12px'>sonarqube必须以非<code>root</code>用户权限</font></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">su - sonar<br>/usr/<span class="hljs-built_in">local</span>/sonarqube-8.9.7/bin/linux-x86-64/sonar.sh start<br></code></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>登录<code>http://[IP]:9000</code>，看到登录页面即为成功。初始账密：<code>admin/admin</code></p><p><img src="/img/%E5%AE%89%E8%A3%85sonarquber/sonarsucc.png" alt="登陆页面"></p>]]></content>
    
    
    <categories>
      
      <category>sonarqube</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>sonarqube</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9离线安装postgresql的14版本</title>
    <link href="/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/"/>
    <url>/2022/03/31/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="下载必要安装包"><a href="#下载必要安装包" class="headerlink" title="下载必要安装包"></a>下载必要安装包</h3><table><thead><tr><th>序号</th><th>软件名称</th><th>下载地址</th></tr></thead><tbody><tr><td>1</td><td>libicu-50.2-4.el7_7.x86_64.rpm</td><td><a href="http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm">http://mirror.centos.org/centos/7/os/x86_64/Packages/libicu-50.2-4.el7_7.x86_64.rpm</a></td></tr><tr><td>2</td><td>postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>3</td><td>postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr><tr><td>4</td><td>postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</td><td><a href="https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm">https://yum.postgresql.org/14/redhat/rhel-7-x86_64/postgresql14-14.2-1PGDG.rhel7.x86_64.rpm</a></td></tr></tbody></table><h3 id="安装postgresql并启动"><a href="#安装postgresql并启动" class="headerlink" title="安装postgresql并启动"></a>安装postgresql并启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">rpm -ivh libicu-50.2-4.el7_7.x86_64.rpm<br>rpm -ivh postgresql14-libs-14.2-1PGDG.rhel7.x86_64.rpm<br>rpm -ivh postgresql14-14.2-1PGDG.rhel7.x86_64.rpm<br>rpm -ivh postgresql14-server-14.2-1PGDG.rhel7.x86_64.rpm<br><span class="hljs-comment"># 启动</span><br>/usr/pgsql-14/bin/postgresql-14-setup initdb<br><span class="hljs-comment"># 设置开机启动</span><br>systemctl <span class="hljs-built_in">enable</span> postgresql-14<br>systemctl start postgresql-14<br></code></pre></td></tr></table></figure><h3 id="配置postgresql"><a href="#配置postgresql" class="headerlink" title="配置postgresql"></a>配置postgresql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /var/lib/pgsql/14/data/postgresql.conf<br></code></pre></td></tr></table></figure><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgseting.png" alt="pgseting"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /var/lib/pgsql/14/data/pg_hba.conf<br></code></pre></td></tr></table></figure><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pghba.png" alt="pghba"></p><h3 id="重启postgresql"><a href="#重启postgresql" class="headerlink" title="重启postgresql"></a>重启postgresql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl restart postgresql-14<br></code></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>以上方式安装默认会创建<code>postgres</code>用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 切换用户</span><br>su - postgres<br>psql<br><span class="hljs-comment"># 创建数据库用户</span><br>create user pg password <span class="hljs-string">&#x27;pg&#x27;</span>;<br><span class="hljs-comment"># 赋予账号权限</span><br>alter user pg supperuser;<br><span class="hljs-comment"># 新建数据库</span><br>create database pg;<br><span class="hljs-built_in">exit</span><br><br><span class="hljs-comment"># 重新登录</span><br>su postgres<br>psql -U pg -h localhost -W<br><span class="hljs-comment"># 输入密码 pg</span><br><span class="hljs-comment"># 显示数据库</span><br>\l<br></code></pre></td></tr></table></figure><p><img src="/img/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85postgresql%E7%9A%8414%E7%89%88%E6%9C%AC/pgdb.png" alt="pghba"></p><p>到此，数据库成功。</p>]]></content>
    
    
    <categories>
      
      <category>postgresql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>postgresql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux7.9安装Mysql-5.7.21</title>
    <link href="/2022/03/31/mysql%E5%AE%89%E8%A3%85/"/>
    <url>/2022/03/31/mysql%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="解压到目录"><a href="#解压到目录" class="headerlink" title="解压到目录"></a>解压到目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 解压</span><br>tar -zxvf mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz<br><span class="hljs-comment"># 移动目录</span><br>mv mysql-5.7.21-linux-glibc2.12-x86_64 /usr/<span class="hljs-built_in">local</span>/mysql<br></code></pre></td></tr></table></figure><h3 id="新增用户、组和数据目录"><a href="#新增用户、组和数据目录" class="headerlink" title="新增用户、组和数据目录"></a>新增用户、组和数据目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 新增组</span><br>groupadd mysql<br><span class="hljs-comment"># 新增用户</span><br>useradd -r -g mysql mysql<br><span class="hljs-comment"># 创建目录</span><br>mkdir -p /data/mysql<br><span class="hljs-comment"># 分配权限</span><br>chown mysql:mysql -R /data/mysql<br></code></pre></td></tr></table></figure><h3 id="配置my-cnf"><a href="#配置my-cnf" class="headerlink" title="配置my.cnf"></a>配置my.cnf</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/my.cnf<br><br><span class="hljs-comment"># 可以采用这个</span><br>[mysqld]<br>bind-address=0.0.0.0<br>port=3306<br>user=mysql<br>basedir=/usr/<span class="hljs-built_in">local</span>/mysql<br>datadir=/data/mysql<br>socket=/tmp/mysql.sock<br>log-error=/data/mysql/mysql.err<br>pid-file=/data/mysql/mysql.pid<br><span class="hljs-comment">#character config</span><br>character_set_server=utf8mb4<br>symbolic-links=0<br>explicit_defaults_for_timestamp=<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 也可以采用这个</span><br>[mysql]<br><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br>default-character-set=utf8<br>socket=/tmp/mysql.sock<br>[mysqld]<br><span class="hljs-comment">#skip-name-resolve</span><br><span class="hljs-comment">#skip-grant-tables</span><br><span class="hljs-comment">#设置3306端口</span><br>port=3306<br>socket=/tmp/mysql.sock<br><span class="hljs-comment"># 设置mysql的真正的安装目录 （看自己的是在哪里)</span><br>basedir=/usr/<span class="hljs-built_in">local</span>/mysql<br><span class="hljs-comment"># 设置mysql数据库的数据的存放目录 （看自己的是在哪里)</span><br>datadir=/data/mysql<br><span class="hljs-comment"># 允许最大连接数</span><br>max_connections=200<br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符雿</span><br>character-set-server=utf8<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擿</span><br>default-storage-engine=INNODB<br><span class="hljs-comment">#lower_case_table_name=1</span><br>max_allowed_packet=16M<br></code></pre></td></tr></table></figure><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/mysql/bin<br>./mysqld --defaults-file=/etc/my.cnf --basedir=/usr/<span class="hljs-built_in">local</span>/mysql/ --datadir=/data/mysql/ --user=mysql --initialize<br><span class="hljs-comment"># 成功以后，查看密码</span><br>cat /data/mysql/mysql.err<br></code></pre></td></tr></table></figure><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">cp /usr/<span class="hljs-built_in">local</span>/mysql/support-files/mysql.server /etc/init.d/mysql<br>service start mysql<br></code></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -uroot -p<br><span class="hljs-comment"># 输入刚刚获得的密码</span><br><span class="hljs-comment"># 修改密码</span><br>SET PASSWORD = PASSWORD(<span class="hljs-string">&#x27;root&#x27;</span>);<br>ALTER USER <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> PASSWORD EXPIRE NEVER;<br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><h3 id="新增软连接"><a href="#新增软连接" class="headerlink" title="新增软连接"></a>新增软连接</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 不用每次都进入mysql目录运行命令</span><br>ln -s  <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysql    /u</span>sr/bin<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>调用ES的Rest Api</title>
    <link href="/2022/03/28/ES/"/>
    <url>/2022/03/28/ES/</url>
    
    <content type="html"><![CDATA[<h3 id="ES介绍"><a href="#ES介绍" class="headerlink" title="ES介绍"></a>ES介绍</h3><p><strong><a href="https://www.elastic.co/cn/elasticsearch/">Elasticsearch</a> 是一个分布式、高扩展、高实时的搜索与数据分析引擎。它能很方便的使大量数据具有搜索、分析和探索的能力。充分利用Elasticsearch的水平伸缩性，能使数据在生产环境变得更有价值。Elasticsearch 的实现原理主要分为以下几个步骤，首先用户将数据提交到Elasticsearch 数据库中，再通过分词控制器去将对应的语句分词，将其权重和分词结果一并存入数据，当用户搜索数据时候，再根据权重将结果排名，打分，再将返回结果呈现给用户。</strong></p><h3 id="Rest-Api使用"><a href="#Rest-Api使用" class="headerlink" title="Rest Api使用"></a>Rest Api使用</h3><ol><li><p>新建索引</p><p><strong>PUT</strong> <code>http://192.168.186.34:9200/[索引名称]?pretty</code></p><p>返回结果：</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;acknowledged&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">&quot;shards_acknowledged&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">&quot;index&quot;</span>: <span class="hljs-string">&quot;esb01&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>查询所有[指定索引名称]索引</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/_cat/indices/[指定查看索引名称]?v</code></p><p>返回结果：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tex">health status index          uuid                   pri rep docs.count docs.deleted store.size pri.store.size<br>yellow open   esb01          YGAh5h<span class="hljs-built_in">_</span>kRoCsPloXy-izxg   1   1          0            0       208b           208b<br>yellow open   esb1           oQKqdAQXShCJuMOzVdfs7A   1   1          2            0     11.6kb         11.6kb<br>yellow open   esb            -b6<span class="hljs-built_in">_</span>v24FRS2tp9y-ohdouw   1   1     156566            0     68.8mb         68.8mb<br>yellow open   esb-2022-03-28 PSwgzv8rR3iZcPOxbZuPTw   1   1         88            0    205.9kb        205.9kb<br>green  open   .kibana<span class="hljs-built_in">_</span>1      UF0<span class="hljs-built_in">_</span>tkz0QjChT-ToRowqUQ   1   0       1479           40    336.4kb        336.4kb<br>yellow open   t1             uXd6GoLyQpK82YkagbO<span class="hljs-built_in">_</span>ag   1   1          2            0     11.7kb         11.7kb<br>yellow open   t2             tvbutoedSNWYxmy6TTFhTw   1   1          2            0     11.7kb         11.7kb<br>yellow open   esb-2022-03-26 i8e4g<span class="hljs-built_in">_</span>0fTzqFtn-OYN27pA   1   1       4762            0      2.6mb          2.6mb<br>yellow open   esb-2022-03-27 wrm87nSJT-K-pRFG0oofXg   1   1        576            0    705.6kb        705.6kb<br>yellow open   t3             -nBkF1RzRxWUOlYVExZhTw   1   1          1            0      5.9kb          5.9kb<br><br></code></pre></td></tr></table></figure></li><li><p>查询索引默认索引配置</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称]/_mapping?pretty</code></p><p>返回结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;esb-2022-03-27&quot;</span>: &#123;<br><span class="hljs-attr">&quot;mappings&quot;</span>: &#123;<br><span class="hljs-attr">&quot;properties&quot;</span>: &#123;<br><span class="hljs-attr">&quot;data&quot;</span>: &#123;<br><span class="hljs-attr">&quot;properties&quot;</span>: &#123;<br><span class="hljs-attr">&quot;ACCTDATE&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br><span class="hljs-attr">&quot;fields&quot;</span>: &#123;<br><span class="hljs-attr">&quot;keyword&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span>,<br><span class="hljs-attr">&quot;ignore_above&quot;</span>: <span class="hljs-number">256</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-string">&quot;requestId&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br><span class="hljs-attr">&quot;fields&quot;</span>: &#123;<br><span class="hljs-attr">&quot;keyword&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span>,<br><span class="hljs-attr">&quot;ignore_above&quot;</span>: <span class="hljs-number">256</span><br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-attr">&quot;serviceCode&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br><span class="hljs-attr">&quot;fields&quot;</span>: &#123;<br><span class="hljs-attr">&quot;keyword&quot;</span>: &#123;<br><span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span>,<br><span class="hljs-attr">&quot;ignore_above&quot;</span>: <span class="hljs-number">256</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>新增数据</p><p><strong>POST</strong> <code>http://192.168.186.34:9200/[索引名称]/[type，一般为json/doc]?pretty</code></p><p>请求Body：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;transTime&quot;</span>: <span class="hljs-number">1648373786067</span>,<br><span class="hljs-attr">&quot;data&quot;</span>: &#123;<br><span class="hljs-attr">&quot;pass&quot;</span>: <span class="hljs-string">&quot;1111111111&quot;</span>,<br><span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;11111111&quot;</span><br>&#125;,<br><span class="hljs-attr">&quot;serviceCode&quot;</span>: <span class="hljs-string">&quot;1090109102&quot;</span>,<br><span class="hljs-attr">&quot;requestId&quot;</span>: <span class="hljs-string">&quot;aeb9adf2-618f-4c6b-a965-5bea4698e893&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>返回结果：（以json为例）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;_index&quot;</span>: <span class="hljs-string">&quot;esb-2022-03-27&quot;</span>,<br><span class="hljs-attr">&quot;_type&quot;</span>: <span class="hljs-string">&quot;json&quot;</span>,<br><span class="hljs-attr">&quot;_id&quot;</span>: <span class="hljs-string">&quot;h_XCyn8Bthbf_40jLeF_&quot;</span>,<br><span class="hljs-attr">&quot;_version&quot;</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">&quot;result&quot;</span>: <span class="hljs-string">&quot;created&quot;</span>,<br><span class="hljs-attr">&quot;_shards&quot;</span>: &#123;<br><span class="hljs-attr">&quot;total&quot;</span>: <span class="hljs-number">2</span>,<br><span class="hljs-attr">&quot;successful&quot;</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">&quot;failed&quot;</span>: <span class="hljs-number">0</span><br>&#125;,<br><span class="hljs-attr">&quot;_seq_no&quot;</span>: <span class="hljs-number">535</span>,<br><span class="hljs-attr">&quot;_primary_term&quot;</span>: <span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>查询数据</p><p><strong>GET</strong> <code>http://192.168.186.34:9200/[索引名称，支持通配符，可实现多个索引一起查询]/_search?pretty=true</code></p><p>请求Body：</p><ul><li>查询所有数据</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;query&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;match_all&quot;</span>:&#123;<br><br>        &#125;<br>    &#125;,<br>    <span class="hljs-attr">&quot;from&quot;</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">&quot;size&quot;</span>:<span class="hljs-number">20</span>,<br>    <span class="hljs-attr">&quot;sort&quot;</span>:[<br>        &#123;<br>            <span class="hljs-attr">&quot;_seq_no&quot;</span>:&#123;<br>                <span class="hljs-attr">&quot;order&quot;</span>:<span class="hljs-string">&quot;desc&quot;</span><br>            &#125;<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>根据某个字段查询（精确）</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;query&quot;</span>: &#123;<br><span class="hljs-attr">&quot;bool&quot;</span>: &#123;<br><span class="hljs-attr">&quot;must&quot;</span>: [&#123;<br>    <span class="hljs-attr">&quot;match_phrase[match]&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;[serviceCode，查询的某个字段]&quot;</span>:<span class="hljs-string">&quot;test001&quot;</span><br>    &#125;<br>&#125;]<br>&#125;<br>&#125;,<br><span class="hljs-attr">&quot;sort&quot;</span>: [<br>&#123;<br><span class="hljs-attr">&quot;_seq_no&quot;</span>: &#123;<br><span class="hljs-attr">&quot;order&quot;</span>: <span class="hljs-string">&quot;desc&quot;</span><br>&#125;<br>&#125;<br>],<br><span class="hljs-attr">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-attr">&quot;size&quot;</span>: <span class="hljs-number">20</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>查询某个字段是否存在</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;query&quot;</span>: &#123;<br><span class="hljs-attr">&quot;bool&quot;</span>: &#123;<br><span class="hljs-attr">&quot;must&quot;</span>: [&#123;<br>    <span class="hljs-attr">&quot;exists&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;field&quot;</span>:<span class="hljs-string">&quot;[字段名称]&quot;</span><br>    &#125;<br>&#125;]<br>&#125;<br>&#125;,<br><span class="hljs-attr">&quot;sort&quot;</span>: [<br>&#123;<br><span class="hljs-attr">&quot;_seq_no&quot;</span>: &#123;<br><span class="hljs-attr">&quot;order&quot;</span>: <span class="hljs-string">&quot;desc&quot;</span><br>&#125;<br>&#125;<br>],<br><span class="hljs-attr">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-attr">&quot;size&quot;</span>: <span class="hljs-number">20</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>检索某个值</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;query&quot;</span>: &#123;<br><span class="hljs-attr">&quot;simple_query_string&quot;</span>: &#123;<br><span class="hljs-attr">&quot;query&quot;</span>: <span class="hljs-string">&quot;[具体值]&quot;</span>,<br><span class="hljs-attr">&quot;default_operator&quot;</span>: <span class="hljs-string">&quot;and&quot;</span><br>&#125;<br>&#125;,<br><span class="hljs-attr">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-attr">&quot;size&quot;</span>: <span class="hljs-number">20</span>,<br><span class="hljs-attr">&quot;sort&quot;</span>: [<br>&#123;<br><span class="hljs-attr">&quot;_seq_no&quot;</span>: &#123;<br><span class="hljs-attr">&quot;order&quot;</span>: <span class="hljs-string">&quot;desc&quot;</span><br>&#125;<br>&#125;<br>]<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>多条件查询</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br><span class="hljs-attr">&quot;query&quot;</span>: &#123;<br><span class="hljs-attr">&quot;bool&quot;</span>: &#123;<br><span class="hljs-attr">&quot;must&quot;</span>: [<br>&#123;<br><span class="hljs-attr">&quot;match_phrase&quot;</span>: &#123;<br><span class="hljs-attr">&quot;serviceCode&quot;</span>: <span class="hljs-string">&quot;1090109102&quot;</span><br>&#125;<br>&#125;,<br>&#123;<br><span class="hljs-attr">&quot;exists&quot;</span>: &#123;<br><span class="hljs-attr">&quot;field&quot;</span>: <span class="hljs-string">&quot;data.name&quot;</span><br>&#125;<br>&#125;<br>]<br>&#125;<br>&#125;,<br><span class="hljs-attr">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-attr">&quot;size&quot;</span>: <span class="hljs-number">20</span>,<br><span class="hljs-attr">&quot;sort&quot;</span>: [<br>&#123;<br><span class="hljs-attr">&quot;_seq_no&quot;</span>: &#123;<br><span class="hljs-attr">&quot;order&quot;</span>: <span class="hljs-string">&quot;desc&quot;</span><br>&#125;<br>&#125;<br>]<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>范围查询</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;query&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;range&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;[transTime,范围字段]&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;gte&quot;</span>: <span class="hljs-number">1648426657334</span>,<br>        <span class="hljs-attr">&quot;lte&quot;</span>: <span class="hljs-number">1648430679534</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="实际应用示例，以ESB消息检索为例"><a href="#实际应用示例，以ESB消息检索为例" class="headerlink" title="实际应用示例，以ESB消息检索为例"></a>实际应用示例，以ESB消息检索为例</h3><p><img src="/img/ES/es%E6%B6%88%E6%81%AF%E6%A3%80%E7%B4%A2.png" alt="es消息检索"></p><ul><li><p>查询所有消息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">  <br></code></pre></td></tr></table></figure></li></ul><h3 id="ES报错处理"><a href="#ES报错处理" class="headerlink" title="ES报错处理"></a>ES报错处理</h3><ol><li><p><strong>==<font color="red">Limit of total fields [1000] has been exceeded</font>==</strong></p><p>原因：ES对mapping做了映射保护，防止mapping爆炸。</p><p>解决方法：<strong>index.mapping.total_fields.limit：</strong>本设置允许您限制可手动或动态创建的字段映射的数量，以防止错误的文档导致映射爆炸，索引中的最大字段数。默认值为1000。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -H &quot;Content-Type: application/json&quot; -XPUT http://192.168.186.34:9200/[索引名称]/_settings -d &#x27;&#123;&quot;index.mapping.total_fields.limit&quot;: [mapping数量,50000]&#125;&#x27;<br></code></pre></td></tr></table></figure></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>Elasticsearch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Http</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx常用配置</title>
    <link href="/2022/03/25/ngcfg/"/>
    <url>/2022/03/25/ngcfg/</url>
    
    <content type="html"><![CDATA[<h3 id="location匹配规则"><a href="#location匹配规则" class="headerlink" title="location匹配规则"></a>location匹配规则</h3><ol><li>= 表示精确匹配。只有请求的url路径与后面的字符串完全相等时，才会命中。</li><li>^~ 表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找。</li><li>~ 表示该规则是使用正则定义的，区分大小写。</li><li>~* 表示该规则是使用正则定义的，不区分大小写。<br>注意：nginx按照上面的顺序进行优先匹配，一旦匹配直接退出。</li></ol><p>剩下的匹配，会按照<strong>最长匹配长度优先级来匹配</strong>，就是谁匹配的多就用谁。</p><figure class="highlight nginx"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">server_name</span> website.com;<br>    <span class="hljs-attribute">location</span> /document &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">701</span>;<br>    &#125;<br>    <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* ^/docume.*$</span> &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">702</span>;<br>    &#125;<br>    <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* ^/document$</span> &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">703</span>;<br>    &#125;<br><br>&#125;<br><span class="hljs-attribute">curl</span> -I  website.com:<span class="hljs-number">8080</span>/document <span class="hljs-number">702</span><br><span class="hljs-comment"># 匹配702 因为正则的优先级更高,而且正则是一旦匹配到就直接退出 所以不会再匹配703</span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">server_name</span> website.com;<br>    <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* ^/docume.*$</span> &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">701</span>;<br>    &#125;<br><br>    <span class="hljs-attribute">location</span><span class="hljs-regexp"> ^~</span> /doc &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">702</span>;<br>    &#125;<br>    <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* ^/document$</span> &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">703</span>;<br>    &#125;<br>&#125;<br><span class="hljs-attribute">curl</span> http://website.com/document<br>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">702</span><br><span class="hljs-comment"># 匹配702 因为 ^~精确匹配的优先级比正则高 也是匹配到之后支持退出</span><br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">server &#123;<br>    server_name website.com;<br>    <span class="hljs-keyword">location</span> <span class="hljs-title">/doc</span> &#123;<br>        return <span class="hljs-number">702</span>;<br>    &#125;<br>    <span class="hljs-keyword">location</span> <span class="hljs-title">/docu</span> &#123;<br>        return <span class="hljs-number">701</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment"># 701 前缀匹配匹配是按照最长匹配，跟顺序无关</span><br></code></pre></td></tr></table></figure><h3 id="history模式、跨域、缓存、反向代理"><a href="#history模式、跨域、缓存、反向代理" class="headerlink" title="history模式、跨域、缓存、反向代理"></a>history模式、跨域、缓存、反向代理</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># html设置history模式</span><br><span class="hljs-attribute">location</span> / &#123;<br>    <span class="hljs-attribute">index</span> index.html index.htm;<br>    <span class="hljs-attribute">proxy_set_header</span> Host $host;<br>    <span class="hljs-comment"># history模式最重要就是这里</span><br>    <span class="hljs-attribute">try_files</span> $uri $uri/ /index.html;<br>    <span class="hljs-comment"># index.html文件不可以设置强缓存 设置协商缓存即可</span><br>    <span class="hljs-attribute">add_header</span> Cache-Control <span class="hljs-string">&#x27;no-cache, must-revalidate, proxy-revalidate, max-age=0&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment"># 接口反向代理</span><br><span class="hljs-attribute">location</span><span class="hljs-regexp"> ^~</span> /api/ &#123;<br>    <span class="hljs-comment"># 跨域处理 设置头部域名</span><br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Origin *;<br>    <span class="hljs-comment"># 跨域处理 设置头部方法</span><br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Methods <span class="hljs-string">&#x27;GET,POST,DELETE,OPTIONS,HEAD&#x27;</span>;<br>    <span class="hljs-comment"># 改写路径</span><br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^/api/(.*)$</span> /<span class="hljs-variable">$1</span> <span class="hljs-literal">break</span>;<br>    <span class="hljs-comment"># 反向代理</span><br>    <span class="hljs-attribute">proxy_pass</span> http://static_env;<br>    <span class="hljs-attribute">proxy_set_header</span> Host $http_host;<br>&#125;<br><br><span class="hljs-attribute">location</span> <span class="hljs-regexp">~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$</span> &#123;<br>    <span class="hljs-comment"># 静态资源设置七天强缓存</span><br>    <span class="hljs-attribute">expires</span> <span class="hljs-number">7d</span>;<br>    <span class="hljs-attribute">access_log</span> <span class="hljs-literal">off</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="以目录区分多个history单文件"><a href="#以目录区分多个history单文件" class="headerlink" title="以目录区分多个history单文件"></a>以目录区分多个history单文件</h3><p>因为不可能每一个项目开启一个域名，仅仅指向通过增加路径来划分多个网站，比如：</p><ol><li><strong>ntu820.top/abc/login</strong> 访问abc登录页</li><li><strong>ntu820.top/def/login</strong> 访问def登录页<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">server &#123;<br>    listen <span class="hljs-number">80</span>;<br>    server_name ntu820.top;<br>    index index.html index.htm;<br>    <span class="hljs-comment"># 通过正则来匹配捕获 [abc|def]中间的这个路径</span><br>    location ~ ^<span class="hljs-regexp">/([^\/]+)/</span>(.*)$ &#123;<br>        try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span><span class="hljs-regexp">/ /</span><span class="hljs-variable">$1</span><span class="hljs-regexp">/dist/i</span>ndex.html =<span class="hljs-number">404</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>基于upstream做负载均衡,中间会涉及一些相关的策略比如<strong>ip_hash、weight</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scss">upstream backserver&#123; <br>    # 哈希算法，自动定位到该服务器 保证唯一ip定位到同一部机器 用于解决session登录态的问题<br>    ip_hash; <br>    server 127<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1</span>:<span class="hljs-number">9090</span> down; (down 表示单前的server暂时不参与负载) <br>    server 127<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1</span>:<span class="hljs-number">8080</span> weight=<span class="hljs-number">2</span>; (weight 默认为<span class="hljs-number">1</span>.weight越大，负载的权重就越大) <br>    server 127<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1</span>:<span class="hljs-number">6060</span>; <br>    server 127<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1</span>:<span class="hljs-number">7070</span> backup; (其它所有的非backup机器down或者忙的时候，请求backup机器) <br>&#125; <br></code></pre></td></tr></table></figure><h3 id="灰度部署"><a href="#灰度部署" class="headerlink" title="灰度部署"></a>灰度部署</h3><p>获取头部值，在nginx中可以通过$http_xxx来获取变量，然后根据header值来进行回复发布</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">upstream</span> stable &#123;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br> &#125;<br><span class="hljs-attribute">upstream</span> canara &#123;<br>   <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>  xxx;<br>    <span class="hljs-comment"># 设置默认</span><br>    <span class="hljs-attribute">set</span> $group <span class="hljs-string">&quot;stable&quot;</span>;<br><br>    <span class="hljs-comment"># 根据cookie头部设置接入的服务</span><br>    <span class="hljs-attribute">if</span> ($http_cookie <span class="hljs-regexp">~* &quot;tts_version_id=canara&quot;)</span>&#123;<br>        <span class="hljs-attribute">set</span> $group canara;<br>    &#125;<br>    <span class="hljs-attribute">if</span> ($http_cookie <span class="hljs-regexp">~* &quot;tts_version_id=stable&quot;)</span>&#123;<br>        <span class="hljs-attribute">set</span> $group stable;<br>    &#125;<br>    <span class="hljs-attribute">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://$group;<br>        <span class="hljs-attribute">proxy_set_header</span>   Host             $host;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Real-IP        $remote_addr;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Forwarded-For $proxy_add_x_forwarded_for;<br>        <span class="hljs-attribute">index</span>  index.html index.htm;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优雅降级"><a href="#优雅降级" class="headerlink" title="优雅降级"></a>优雅降级</h3><p>常用于ssr的node服务挂了返回500错误码然后降级到csr的cos桶或者nginx中，优雅降级主要用<strong>error_page</strong>参数来进行降级指向备用地址。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">upstream</span> ssr &#123;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br> &#125;<br><span class="hljs-attribute">upstream</span> csr &#123;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br>    <span class="hljs-attribute">server</span> xxx max_fails=<span class="hljs-number">1</span> fail_timeout=<span class="hljs-number">60</span>;<br>&#125;<br><br><span class="hljs-attribute">location</span><span class="hljs-regexp"> ^~</span> /ssr/ &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://ssr;<br>    <span class="hljs-comment"># 开启自定义错误捕获 如果这里不设置为on的话 会走向nginx处理的默认错误页面</span><br>    <span class="hljs-attribute">proxy_intercept_errors</span> <span class="hljs-literal">on</span>;<br>    <span class="hljs-comment"># 捕获500系列错误 如果500错误的话降级为下面的csr渲染</span><br>    <span class="hljs-attribute">error_page</span> <span class="hljs-number">500</span> <span class="hljs-number">501</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span> = @csr_location<br><br>    <span class="hljs-comment"># error_page 500 501 502 503 504 = 200 @csr_location</span><br>    <span class="hljs-comment"># 注意这上面的区别 等号前面没有200 表示 最终返回的状态码已 @csr_location为准 加了200的话表示不管@csr_location返回啥都返回200状态码</span><br>&#125;<br><br>location @csr_location &#123;<br>    <span class="hljs-comment"># 这时候地址还是带着/ssr/的要去除</span><br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^/ssr/(.*)$</span> /<span class="hljs-variable">$1</span> <span class="hljs-literal">break</span>;<br>    <span class="hljs-attribute">proxy_pass</span> http://csr;<br>    <span class="hljs-attribute">rewrite_log</span> <span class="hljs-literal">on</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="webp根据浏览器自动降级为png"><a href="#webp根据浏览器自动降级为png" class="headerlink" title="webp根据浏览器自动降级为png"></a>webp根据浏览器自动降级为png</h3><p>这套方案不像常见的由nginx把png转为webp的方案，而是先经由图床系统（node服务）上传两份图片:</p><ol><li>一份是原图png</li><li>一份是png压缩为webp的图片（使用的是imagemin-webp)</li></ol><p>然后通过nginx检测头部是否支持webp来返回webp图片，不支持的话就返回原图即可。这其中还做了错误拦截，如果cos桶丢失webp图片及时浏览器支持webp也要降级为png。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs awk">http &#123;<br>  include       <span class="hljs-regexp">/etc/</span>nginx/mime.types;<br>  default_type  application/octet-stream;<br><br>  <span class="hljs-comment"># 设置日志格式</span><br>  log_format  main  <span class="hljs-string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>  <span class="hljs-string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>  <span class="hljs-string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span><br>  <span class="hljs-string">&#x27;&quot;$proxy_host&quot; &quot;$upstream_addr&quot;&#x27;</span>;<br><br>  access_log  <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span>access.log  main;<br><br>  sendfile        on;<br>  keepalive_timeout  <span class="hljs-number">65</span>;<br><br>  <span class="hljs-comment"># 开启gzip</span><br>  gzip on;<br>  gzip_vary on;<br>  gzip_proxied any;<br>  gzip_comp_level <span class="hljs-number">6</span>;<br>  gzip_types text<span class="hljs-regexp">/plain text/</span>css text<span class="hljs-regexp">/xml application/</span>json application<span class="hljs-regexp">/javascript application/</span>rss+xml application<span class="hljs-regexp">/atom+xml image/</span>svg+xml;<br><br>  <span class="hljs-comment"># 负载均衡 这里可以是多个cos桶地址即可</span><br>  upstream static_env &#123;<br>    server xxx;<br>    server xxx;<br>  &#125;<br><br>  <span class="hljs-comment"># map 设置变量映射 第一个变量指的是要通过映射的key值 Accpet 第二个值的是变量别名</span><br>  map <span class="hljs-variable">$http_accept</span> <span class="hljs-variable">$webp_suffix</span> &#123;<br>    <span class="hljs-comment"># 默认为 空字符串</span><br>    default   <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-comment"># 正则匹配如果Accep含有webp字段 设置为.webp值</span><br>    <span class="hljs-string">&quot;~*webp&quot;</span>  <span class="hljs-string">&quot;.webp&quot;</span>;<br>  &#125;<br>  server &#123;<br><br>    listen <span class="hljs-number">8888</span>;<br>    absolute_redirect off;    <span class="hljs-comment">#取消绝对路径的重定向</span><br>    <span class="hljs-comment">#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。</span><br>    root <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html;<br><br>    location / &#123;<br>      index index.html index.htm;<br>      proxy_set_header Host <span class="hljs-variable">$host</span>;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span><span class="hljs-regexp">/ /i</span>ndex.html;<br>      add_header Cache-Control <span class="hljs-string">&#x27;no-cache, max-age=0&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-comment"># favicon.ico</span><br>    location = /favicon.ico &#123;<br>      log_not_found off;<br>      access_log off;<br>    &#125;<br><br>    <span class="hljs-comment"># robots.txt</span><br>    location = /robots.txt &#123;<br>      log_not_found off;<br>      access_log off;<br>    &#125;<br><br>    <span class="hljs-comment"># </span><br>    location ~* \.(png|jpe?g)$ &#123;<br>      <span class="hljs-comment"># Pass WebP support header to backend</span><br>      <span class="hljs-comment"># 如果header头部中支持webp</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$webp_suffix</span> ~* webp) &#123;<br>        <span class="hljs-comment"># 先尝试找是否有webp格式图片</span><br>        rewrite ^<span class="hljs-regexp">/(.*)\.(png|jpe?g)$ /</span><span class="hljs-variable">$1</span>.webp <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment"># 找不到的话 这里捕获404错误 返回原始错误 注意这里的=号 代表最终返回的是@static_img的状态吗</span><br>        error_page <span class="hljs-number">404</span> = @static_img;<br>      &#125;<br>      proxy_intercept_errors on;<br>      add_header Vary Accept;<br>      proxy_pass http:<span class="hljs-regexp">//</span>static_env;<br>      proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>      expires <span class="hljs-number">7</span>d;<br>      access_log off;<br>    &#125;<br><br>    location @static_img &#123;<br>      <span class="hljs-comment">#set $complete $schema $server_addr $request_uri;</span><br>      rewrite ^/.+$ <span class="hljs-variable">$request_uri</span> <span class="hljs-keyword">break</span>;<br>      proxy_pass http:<span class="hljs-regexp">//</span>static_env;<br>      proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>      expires <span class="hljs-number">7</span>d;<br>    &#125;<br><br><br>    <span class="hljs-comment"># assets, media</span><br>    location ~* \.(?:css(\.map)?|js(\.map)?|gif|svg|jfif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ &#123;<br>      proxy_pass http:<span class="hljs-regexp">//</span>static_env;<br>      proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>      expires <span class="hljs-number">7</span>d;<br>      access_log off;<br>    &#125;<br><br><br>    error_page   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /<span class="hljs-number">50</span>x.html;<br>    location = /<span class="hljs-number">50</span>x.html &#123;<br>      root   <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>haproxy+keepalived实现高可用</title>
    <link href="/2022/01/30/keepha/"/>
    <url>/2022/01/30/keepha/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://www.keepalived.org/">Keepalived</a> 提供 VRPP 实现，并允许您配置 Linux 机器使负载均衡，预防单点故障。<a href="http://www.haproxy.org/">HAProxy</a> 提供可靠、高性能的负载均衡，能与 Keepalived 完美配合。</strong></p><p><img src="/img/keepha/%E6%9E%B6%E6%9E%84.jpg" alt="架构图"></p><p>安装规定组件</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">yum install keepalived haproxy psmisc -y<br></code></pre></td></tr></table></figure><h3 id="HAproxy"><a href="#HAproxy" class="headerlink" title="HAproxy"></a>HAproxy</h3><ol><li><p>编辑haproxy配置，（两台机器proxy配置一致）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/haproxy/haproxy.conf<br></code></pre></td></tr></table></figure></li><li><p>参考配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sh">global<br>    <span class="hljs-built_in">log</span>         /dev/<span class="hljs-built_in">log</span> local0 warning<br>    chroot      /var/lib/haproxy<br>    pidfile     /var/run/haproxy.pid<br>    maxconn     4000<br>    user        haproxy<br>    group       haproxy<br>    daemon<br><br>    stats socket /var/lib/haproxy/stats<br><br>defaults<br>    <span class="hljs-built_in">log</span>                     global<br>    option                  httplog<br>    option                  dontlognull<br>    timeout connect         5000<br>    timeout client          50000<br>    timeout server          50000<br><br>frontend kube-apiserver<br>    <span class="hljs-built_in">bind</span>                        *:6443<br>    mode                        tcp<br>    option                      tcplog<br>    default_backend             kube-apiserver<br><br>backend kube-apiserver<br>    mode        tcp<br>    option      tcplog<br>    option      tcp-check<br>    balance     roundrobin<br>    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100<br>    server  kube-apiserver-1 172.16.214.21:6443 check<br>    server  kube-apiserver-2 172.16.214.22:6443 check<br>    server  kube-apiserver-3 172.16.214.23:6443 check<br></code></pre></td></tr></table></figure></li></ol><h3 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h3><ol><li><p>两台机器都安装keepalived，但是配置略有不同</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/keepalived/keepalived.conf<br></code></pre></td></tr></table></figure></li><li><p>参考配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 主服务配置</span><br>global_defs &#123;<br>   notification_email &#123;<br>   &#125;<br>   router_id LVS_DEVEL01<br>   vrrp_skip_check_adv_addr<br>   vrrp_garp_interval 0<br>   vrrp_gna_interval 0<br>&#125;<br><br>vrrp_script chk_haproxy &#123;<br>   script <span class="hljs-string">&quot;killall -0 haproxy&quot;</span><br>   interval 2<br>   weight 2<br>&#125;<br><br>vrrp_instance haproxy-vip &#123;<br>    state MASTER<br>    interface eth0<br>    virtual_router_id 60<br>    priority 100<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    unicast_src_ip 172.16.214.31<br>    unicast_peer &#123;<br>        172.16.214.32<br>    &#125;<br><br>    virtual_ipaddress &#123;<br>        172.16.214.30/24<br>    &#125;<br><br>    track_script &#123;<br>        chk_haproxy<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"># 从服务配置</span><br>global_defs &#123;<br>   notification_email &#123;<br>   &#125;<br>   router_id LVS_DEVEL02<br>   vrrp_skip_check_adv_addr<br>   vrrp_garp_interval 0<br>   vrrp_gna_interval 0<br>&#125;<br><br>vrrp_script chk_haproxy &#123;<br>   script <span class="hljs-string">&quot;killall -0 haproxy&quot;</span><br>   interval 2<br>   weight 2<br>&#125;<br><br>vrrp_instance haproxy-vip &#123;<br>    state BACKUP<br>    interface eth0<br>    virtual_router_id 60<br>    priority 90<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    unicast_src_ip 172.16.214.32<br>    unicast_peer &#123;<br>        172.16.214.31<br>    &#125;<br><br>    virtual_ipaddress &#123;<br>        172.16.214.30/24<br>    &#125;<br><br>    track_script &#123;<br>        chk_haproxy<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ol><li><p>开启并开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl restart haproxy &amp;&amp; systemctl <span class="hljs-built_in">enable</span> haproxy<br>systemctl restart keepalived &amp;&amp; systemctl <span class="hljs-built_in">enable</span> keepalived<br></code></pre></td></tr></table></figure></li></ol><h3 id="验证高可用"><a href="#验证高可用" class="headerlink" title="验证高可用"></a>验证高可用</h3><ol><li>停止keepalived，查看vip是否会漂移。</li></ol>]]></content>
    
    
    <categories>
      
      <category>keepalived</category>
      
      <category>haproxy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>keepalived</tag>
      
      <tag>haproxy</tag>
      
      <tag>软负载</tag>
      
      <tag>高可用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>私有化部署yapi</title>
    <link href="/2022/01/30/yapi/"/>
    <url>/2022/01/30/yapi/</url>
    
    <content type="html"><![CDATA[<h4 id="安装nodejs环境"><a href="#安装nodejs环境" class="headerlink" title="安装nodejs环境"></a>安装nodejs环境</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 下载</span><br>wget https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz<br><br><span class="hljs-comment"># 解压</span><br>tar -xvf node-v10.16.0-linux-x64.tar.xz<br><br><span class="hljs-comment">#创建软连接</span><br>ln -s ~/node-v10.16.0-linux-x64/bin/node /usr/<span class="hljs-built_in">local</span>/bin/node<br>ln -s ~/node-v10.16.0-linux-x64/bin/npm /usr/<span class="hljs-built_in">local</span>/bin/npm<br><br><span class="hljs-comment"># 验证</span><br>node -v<br>npm -v<br><br><span class="hljs-comment"># 配置淘宝源</span><br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h4 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h4><p>在/etc/yum.repos.d/下，新建mongodb-org.repo，内容如下</p><p>[mongodb-org]<br>name=MongoDB Repository<br>baseurl=<a href="http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/">http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.2/x86_64/</a><br>gpgcheck=0<br>enabled=1</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装</span><br>yum install -y mongodb-org<br><br><span class="hljs-comment"># 启动</span><br>service mongod start<br><br><span class="hljs-comment"># 配置，如果mongo只应用本地，则无需修改，否则修改/etc/mongod.conf的bindIp，并重启</span><br></code></pre></td></tr></table></figure><h4 id="安装yapi"><a href="#安装yapi" class="headerlink" title="安装yapi"></a>安装yapi</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkdir yapi<br><br><span class="hljs-built_in">cd</span> yapi<br><br>git <span class="hljs-built_in">clone</span> https://github.com/YMFE/yapi.git vendor<br><br><span class="hljs-comment"># 或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 `git clone --depth=1 https://github.com/YMFE/yapi.git vendors` 命令减少，大概 10+ M）</span><br><br><br>cp vendors/config_example.json ./config.json <br><span class="hljs-comment"># 复制完成后请修改相关配置</span><br><span class="hljs-comment"># 需要把mongodb的用户名密码去除</span><br><br><span class="hljs-built_in">cd</span> vendors<br><br>npm install --production --registry https://registry.npm.taobao.org<br><br>npm run install-server <br><span class="hljs-comment"># 安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置</span><br><br>node server/app.js <br><span class="hljs-comment"># 启动服务器后，请访问 127.0.0.1:&#123;config.json配置的端口&#125;，初次运行会有个编译的过程，请耐心等候</span><br><br><span class="hljs-comment"># 初始化管理员账号成功,账号名：&quot;admin@admin.com&quot;，密码：&quot;ymfe.org&quot;</span><br></code></pre></td></tr></table></figure><h4 id="后台运行yapi"><a href="#后台运行yapi" class="headerlink" title="后台运行yapi"></a>后台运行yapi</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install -g pm2<br><br>ln -s ~/node-v10.16.0-linux-x64/lib/node_modules/pm2/bin/pm2 /usr/<span class="hljs-built_in">local</span>/bin/pm2<br><br>pm2 start server/app.js<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>yapi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在windows上部署docker实战</title>
    <link href="/2022/01/30/windocker/"/>
    <url>/2022/01/30/windocker/</url>
    
    <content type="html"><![CDATA[<p>目前在windows上部署docker方式有两种。第一：采用虚拟机进行部署；第二：采用Hyper-V虚拟技术进行部署。微软自windows server2016开始将docker集成进系统。目前支持docker in windows部署方式的系统有：win10、windwos server2016/2019。本文采用Hyper-V方式进行docker部署。</p><h4 id="主板开启虚拟化，系统安装Hyper-V的windows更新。"><a href="#主板开启虚拟化，系统安装Hyper-V的windows更新。" class="headerlink" title="主板开启虚拟化，系统安装Hyper-V的windows更新。"></a>主板开启虚拟化，系统安装Hyper-V的windows更新。</h4><p>打开windows更新。将Hyper-V全部选中。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%871.png" alt="hyper"></p><h4 id="安装docker-desktop"><a href="#安装docker-desktop" class="headerlink" title="安装docker desktop"></a>安装docker desktop</h4><p>下载地址：<a href="https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe">https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe</a><br><img src="/img/windocker/%E5%9B%BE%E7%89%872.png" alt="dockerdesktop"></p><p>出现此图标，代表docker安装成功。</p><h4 id="切换windows镜像模式"><a href="#切换windows镜像模式" class="headerlink" title="切换windows镜像模式"></a>切换windows镜像模式</h4><p>由于我们需要安装运行基于windows的容器与镜像，所有在安装完后，右击图标，将docker的运行方式改位“windows containers”。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%873.png" alt="windocker"></p><h4 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h4><p>对docker进行一些配置，以达到更好的效果。【如果能科学上网，请忽略此步】</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%874.png" alt="配置"></p><h4 id="拉取windowsserver的镜像"><a href="#拉取windowsserver的镜像" class="headerlink" title="拉取windowsserver的镜像"></a>拉取windowsserver的镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">docker pull mcr.microsoft.com/windows/servercore:ltsc2019<br>docker pull mcr.microsoft.com/windows/nanoserver:1903<br></code></pre></td></tr></table></figure><p>注意：windows的docker容器拉取镜像时，镜像的tag必须要osversion的版本必须与镜像版本对应。<br>查看系统版本信息：systeminfo</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%875.png" alt="系统版本"></p><p><img src="/img/windocker/%E5%9B%BE%E7%89%876.png" alt="找到对应镜像"></p><p>拉取的镜像比较大需要耐心等待。</p><p><img src="/img/windocker/%E5%9B%BE%E7%89%877.png" alt="拉取镜像"></p><h4 id="运行windows原生镜像"><a href="#运行windows原生镜像" class="headerlink" title="运行windows原生镜像"></a>运行windows原生镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -it mcr.microsoft.com/windows/nanoserver:1903 cmd.exe<br></code></pre></td></tr></table></figure><p>运行后会进入容器内部。盘符会进入C盘位置。退出后，使用docker ps会发现容器也退出了，此时，输入docker start 容器ID。重新启动容器，发现容器正常启动。</p><h4 id="测试镜像"><a href="#测试镜像" class="headerlink" title="测试镜像"></a>测试镜像</h4><p>在windwos容器中部署python环境</p><ul><li>首先停止windows容器，docker stop 容器ID</li><li>使用docker cp命令，将本地宿主机上的文件拷贝进windows容器中。由于容器中不包含GUI，所以这里直接将python的免安装文件复制进容器。<code>docker cp D:\develop\python37 容器ID:\C:\Users</code></li><li>docker start 容器ID</li><li>docker exec -it 容器ID cmd.exe 进入容器内部</li><li>进入C盘下面的Users文件夹。发现python文件夹已经拷贝进来。<img src="/img/windocker/%E5%9B%BE%E7%89%878.png" alt="python"></li><li>验证python环境，进入pyhon37文件夹，运行python命令，发现可以进入。<img src="/img/windocker/%E5%9B%BE%E7%89%879.png" alt="python"></li></ul>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>seata高可用部署</title>
    <link href="/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/01/30/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>部署nacos</li><li>部署mysql</li></ul><h4 id="部署server端"><a href="#部署server端" class="headerlink" title="部署server端"></a>部署server端</h4><ul><li><p>创建数据库（seata）及表,以mysql为例</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></div></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- -------------------------------- The script used when storeMode is &#x27;db&#x27; --------------------------------</span><br><span class="hljs-comment">-- the table to store GlobalSession data</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `global_table`<br>(<br>    `xid`                       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `transaction_id`            <span class="hljs-type">BIGINT</span>,<br>    `status`                    TINYINT      <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `application_id`            <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>),<br>    `transaction_service_group` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>),<br>    `transaction_name`          <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>),<br>    `timeout`                   <span class="hljs-type">INT</span>,<br>    `begin_time`                <span class="hljs-type">BIGINT</span>,<br>    `application_data`          <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">2000</span>),<br>    `gmt_create`                DATETIME,<br>    `gmt_modified`              DATETIME,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`xid`),<br>    KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),<br>    KEY `idx_transaction_id` (`transaction_id`)<br>) ENGINE <span class="hljs-operator">=</span> InnoDB<br>  <span class="hljs-keyword">DEFAULT</span> CHARSET <span class="hljs-operator">=</span> utf8;<br><br><span class="hljs-comment">-- the table to store BranchSession data</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `branch_table`<br>(<br>    `branch_id`         <span class="hljs-type">BIGINT</span>       <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `xid`               <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `transaction_id`    <span class="hljs-type">BIGINT</span>,<br>    `resource_group_id` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>),<br>    `resource_id`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">256</span>),<br>    `branch_type`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">8</span>),<br>    `status`            TINYINT,<br>    `client_id`         <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">64</span>),<br>    `application_data`  <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">2000</span>),<br>    `gmt_create`        DATETIME(<span class="hljs-number">6</span>),<br>    `gmt_modified`      DATETIME(<span class="hljs-number">6</span>),<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`branch_id`),<br>    KEY `idx_xid` (`xid`)<br>) ENGINE <span class="hljs-operator">=</span> InnoDB<br>  <span class="hljs-keyword">DEFAULT</span> CHARSET <span class="hljs-operator">=</span> utf8;<br><br><span class="hljs-comment">-- the table to store lock data</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `lock_table`<br>(<br>    `row_key`        <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `xid`            <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>),<br>    `transaction_id` <span class="hljs-type">BIGINT</span>,<br>    `branch_id`      <span class="hljs-type">BIGINT</span>       <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `resource_id`    <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">256</span>),<br>    `table_name`     <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>),<br>    `pk`             <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">36</span>),<br>    `gmt_create`     DATETIME,<br>    `gmt_modified`   DATETIME,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`row_key`),<br>    KEY `idx_branch_id` (`branch_id`)<br>) ENGINE <span class="hljs-operator">=</span> InnoDB<br>  <span class="hljs-keyword">DEFAULT</span> CHARSET <span class="hljs-operator">=</span> utf8;<br></code></pre></td></tr></table></figure></li><li><p>client端，业务数据库需要添加undo_log表，以mysql为例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- for AT mode you must to init this sql for you business database. the seata server not need it.</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `undo_log`<br>(<br>    `branch_id`     <span class="hljs-type">BIGINT</span>       <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;branch transaction id&#x27;</span>,<br>    `xid`           <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;global transaction id&#x27;</span>,<br>    `context`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;undo_log context,such as serialization&#x27;</span>,<br>    `rollback_info` LONGBLOB     <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;rollback info&#x27;</span>,<br>    `log_status`    <span class="hljs-type">INT</span>(<span class="hljs-number">11</span>)      <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;0normal status,1defense status&#x27;</span>,<br>    `log_created`   DATETIME(<span class="hljs-number">6</span>)  <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;create datetime&#x27;</span>,<br>    `log_modified`  DATETIME(<span class="hljs-number">6</span>)  <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;modify datetime&#x27;</span>,<br>    <span class="hljs-keyword">UNIQUE</span> KEY `ux_undo_log` (`xid`, `branch_id`)<br>) ENGINE <span class="hljs-operator">=</span> InnoDB<br>  AUTO_INCREMENT <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">DEFAULT</span> CHARSET <span class="hljs-operator">=</span> utf8 COMMENT <span class="hljs-operator">=</span><span class="hljs-string">&#x27;AT transaction mode undo table&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>添加配置到nacos配置中心，使用官方的的脚本将默认的配置文件导入nacos</p></li><li><p>修改配置，主要是数据库的连接配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">store.mode=db<br>store.db.datasource=druid<br>store.db.dbType=mysql<br>store.db.driverClassName=com.mysql.jdbc.Driver<br>store.db.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=true<br>store.db.user=root<br>store.db.password=123456<br></code></pre></td></tr></table></figure></li></ul><h4 id="部署到K8S"><a href="#部署到K8S" class="headerlink" title="部署到K8S"></a>部署到K8S</h4><ul><li><p>seata-ha-deploy.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">seata-ha-server</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">seata-ha-server</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">8091</span><br>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">http</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">seata-ha-server</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">StatefulSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">seata-ha-server</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">seata-ha-server</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">serviceName:</span> <span class="hljs-string">seata-ha-server</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">3</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">seata-ha-server</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">seata-ha-server</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">imagePullSecrets:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">default-harbor-secret</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">seata-ha-server</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.182</span><span class="hljs-number">.187</span><span class="hljs-string">:81/library/seata-server:1.4.2</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">SEATA_CONFIG_NAME</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">file:/root/seata-config/registry</span><br>          <span class="hljs-attr">ports:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">http</span><br>              <span class="hljs-attr">containerPort:</span> <span class="hljs-number">8091</span><br>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">seata-config</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/root/seata-config</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">seata-config</span><br>          <span class="hljs-attr">configMap:</span><br>            <span class="hljs-attr">name:</span> <span class="hljs-string">seata-ha-server-config</span><br><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">seata-ha-server-config</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">registry.conf:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    registry &#123;</span><br><span class="hljs-string">        type = &quot;nacos&quot;</span><br><span class="hljs-string">        nacos &#123;</span><br><span class="hljs-string">          application = &quot;seata-server&quot;</span><br><span class="hljs-string">          serverAddr = &quot;192.168.186.79:8849&quot;</span><br><span class="hljs-string">          group = &quot;SEATA_GROUP&quot;</span><br><span class="hljs-string">          namespace = &quot;87eb1383-a697-439a-a40f-52a071b4cc6b&quot;</span><br><span class="hljs-string">          cluster = &quot;default&quot;</span><br><span class="hljs-string">          username = &quot;nacos&quot;</span><br><span class="hljs-string">          password = &quot;nacos&quot;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    config &#123;</span><br><span class="hljs-string">      type = &quot;nacos&quot;</span><br><span class="hljs-string">      nacos &#123;</span><br><span class="hljs-string">        serverAddr = &quot;192.168.186.79:8849&quot;</span><br><span class="hljs-string">        namespace = &quot;87eb1383-a697-439a-a40f-52a071b4cc6b&quot;</span><br><span class="hljs-string">        group = &quot;SEATA_GROUP&quot;</span><br><span class="hljs-string">        username = &quot;nacos&quot;</span><br><span class="hljs-string">        password = &quot;nacos&quot;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure></li><li><p>查看部署情况</p><p>1、应该会有3个pod运行，查看日志，可以看到已经连接数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">25.586</span>  INFO --- [                     main] io.seata.server.Server                   : The server is running in container.<br><span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">25.599</span>  INFO --- [                     main] io.seata.config.FileConfiguration        : The file name of the operation is file:/root/seata-config/registry<br><span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">25.606</span>  INFO --- [                     main] io.seata.config.FileConfiguration        : The configuration file used is /root/seata-config/registry.conf<br><span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">27.127</span>  INFO --- [                     main] com.alibaba.druid.pool.DruidDataSource   : &#123;dataSource-<span class="hljs-number">1</span>&#125; inited<br><span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">27.367</span>  INFO --- [                     main] i.s.core.rpc.netty.NettyServerBootstrap  : Server started, listen port: <span class="hljs-number">8091</span><br></code></pre></td></tr></table></figure><p>2、去nacos中查看，应该会有3个服务。</p><p><img src="/img/seata%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/20210720193847.png" alt="seata"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>seata</category>
      
    </categories>
    
    
    <tags>
      
      <tag>seata</tag>
      
      <tag>分布式事务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nacos集群安装</title>
    <link href="/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/nacos%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h3 id="1-在线安装mysql5-7"><a href="#1-在线安装mysql5-7" class="headerlink" title="1. 在线安装mysql5.7"></a>1. 在线安装mysql5.7</h3><ul><li>安装步骤</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 获取mysql yum源</span><br>yum install -y wget &amp;&amp; wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm<br><span class="hljs-comment"># 安装yum源</span><br>rpm -ivh mysql57-community-release-el7-9.noarch.rpm<br><span class="hljs-comment"># 安装mysql</span><br>yum install mysql-community-server mysql-community-libs-compat mysql-community-libs mysql-community-embedded-devel mysql-community-embedded-compat mysql-community-embedded mysql-community-devel mysql-community-common mysql-community-client -y<br></code></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 启动mysql</span><br>systemctl start mysqld<br><span class="hljs-comment"># 开机启动</span><br>systemctl <span class="hljs-built_in">enable</span> mysqld<br><span class="hljs-comment"># 需要找到mysql初始化的密码，cat /var/log/mysqld.log|grep root</span><br></code></pre></td></tr></table></figure><ul><li>运行<code>mysql_secure_installation</code>进行一些初始化操作，主要是对更改密码、是否运行远程等</li></ul><h3 id="rpm包安装mysql5-7"><a href="#rpm包安装mysql5-7" class="headerlink" title="rpm包安装mysql5.7"></a>rpm包安装mysql5.7</h3><ul><li>下载rpm包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-common-5.7.23-1.el7.x86_64.rpm<br>https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-5.7.23-1.el7.x86_64.rpm<br>https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-client-5.7.23-1.el7.x86_64.rpm<br>https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.23-1.el7.x86_64.rpm<br>https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-devel-5.7.23-1.el7.x86_64.rpm<br></code></pre></td></tr></table></figure><ul><li>安装mysql</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 下载自带的mariadb</span><br>yum remove mariadb mariadb-server mariadb-devel mariadb-libs<br><span class="hljs-comment"># 安装</span><br>rpm -ivh mysql-community-common-5.7.23-1.el7.x86_64.rpm <br>rpm -ivh mysql-community-libs-5.7.23-1.el7.x86_64.rpm <br>rpm -ivh mysql-community-client-5.7.23-1.el7.x86_64.rpm <br>rpm -ivh mysql-community-server-5.7.23-1.el7.x86_64.rpm <br>rpm -ivh mysql-community-devel-5.7.23-1.el7.x86_64.rpm<br></code></pre></td></tr></table></figure><ul><li>新建主库文件夹</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkdir -p /data/mysql/&#123;data,<span class="hljs-built_in">log</span>,pid,binary&#125;<br>groupadd mysql<br>useradd -r -g mysql mysql<br>chown -R mysql.mysql  /data<br></code></pre></td></tr></table></figure><ul><li>配置主数据库，<code>vi /etc/my.cnf</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh">[mysqld]<br>datadir=/data/mysql/data<br>socket=/data/mysql/data/mysql.sock<br> <br>log-error=/data/mysql/<span class="hljs-built_in">log</span>/mysqld.log<br>pid-file=/data/mysql/pid/mysqld.pid<br> <br>user=mysql<br>server-id=1<br>port=3306<br> <br><span class="hljs-comment">##要给从机同步的库</span><br><span class="hljs-comment">#binlog-do-db=</span><br> <br><span class="hljs-comment">##不给从机同步的库(多个写多行)</span><br>binlog-ignore-db=mysql<br>binlog-ignore-db=information_schema<br>binlog-ignore-db=performance_schema<br>binlog-ignore-db=sys<br> <br><span class="hljs-comment">##开启二进制日志</span><br>log-bin=/data/mysql/binary/mysql1-bin<br> <br><span class="hljs-comment">##自动清理 7 天前的log文件,可根据需要修改</span><br>expire_logs_days=7<br> <br>[client]<br>socket=/data/mysql/data/mysql.sock<br></code></pre></td></tr></table></figure><ul><li>新建从库文件夹</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkdir -p /data/mysql/&#123;data,<span class="hljs-built_in">log</span>,pid&#125;<br>groupadd mysql<br>useradd -r -g mysql mysql<br>chown -R mysql.mysql  /data<br></code></pre></td></tr></table></figure><ul><li>配置从数据库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh">[mysqld]<br>datadir=/data/mysql/data<br>socket=/data/mysql/data/mysql.sock<br> <br><span class="hljs-comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br> <br>log-error=/data/mysql/<span class="hljs-built_in">log</span>/mysqld.log<br>pid-file=/data/mysql/pid/mysqld.pid<br> <br>user=mysql<br>server-id=2<br>port=3306<br> <br><span class="hljs-comment">##从库上的参数</span><br>read_only = 1<br>master_info_repository=TABLE<br>relay_log_info_repository=TABLE<br><span class="hljs-comment">#relay_log_recovery=1   #从机禁止写</span><br><span class="hljs-comment">#super_read_only=1      #从机禁止写</span><br> <br>[client]<br>socket=/data/mysql/data/mysql.sock<br></code></pre></td></tr></table></figure><ul><li>启动数据库并找出root密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start mysqld<br><br><span class="hljs-comment"># 查询密码</span><br>cat /data/mysql/<span class="hljs-built_in">log</span>/mysqld.log |grep root<br></code></pre></td></tr></table></figure><ul><li>登录并修改密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -uroot -p<br><br><span class="hljs-comment"># 修改密码</span><br>mysql-&gt; ALTER USER root@localhost identified by <span class="hljs-string">&#x27;admin123.X&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="配置主从"><a href="#配置主从" class="headerlink" title="配置主从"></a>配置主从</h3><ul><li>在主服务器上授权从服务器复制帐号</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -uroot -p<br>mysql-&gt; grant replication slave on *.* to slave@<span class="hljs-string">&#x27;192.168.%&#x27;</span> identified by <span class="hljs-string">&#x27;admin123.X&#x27;</span>;<br>mysql-&gt; show master status;<br></code></pre></td></tr></table></figure><ul><li>到从服务配置主数据库连接</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -uroot -p<br><br>mysql &gt; stop slave;<br>mysql &gt; change master to master_host=<span class="hljs-string">&#x27;192.168.153.162&#x27;</span>,master_port=3306,master_user=<span class="hljs-string">&#x27;slave&#x27;</span>,master_password=<span class="hljs-string">&#x27;admin123.X&#x27;</span>,master_log_file=<span class="hljs-string">&#x27;mysql1-bin.000093&#x27;</span>,master_log_pos=846;<br>mysql &gt; start slave;<br>mysql &gt; show slave status\G<br><span class="hljs-comment"># 必须看到两个YES</span><br><span class="hljs-comment"># Slave_IO_Running: Yes</span><br><span class="hljs-comment"># Slave_SQL_Running: Yes</span><br></code></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql &gt; CREATE DATABASE test_ab default charset utf8;<br>mysql &gt; CREATE TABLE test_ab.a1(id int(2),name varchar(20));<br>mysql &gt; INSERT INTO test_ab.a1(id,name) VALUES(1,<span class="hljs-string">&quot;测试1&quot;</span>);<br>mysql&gt; select * from test_ab.a1;<br></code></pre></td></tr></table></figure><h3 id="2-安装Nacos1-3"><a href="#2-安装Nacos1-3" class="headerlink" title="2. 安装Nacos1.3"></a>2. 安装Nacos1.3</h3><ul><li>配置JDK、Maven</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 解压缩</span><br>tar -zxvf jdk-8u261-linux-x64.tar.gz<br>mv jdk1.8.0_261 /usr/<span class="hljs-built_in">local</span>/bin/<br>tar -zxvf apache-maven-3.6.3-bin.tar.gz<br>mv apache-maven-3.6.3 /usr/<span class="hljs-built_in">local</span>/bin/<br><br><span class="hljs-comment"># 配置环境变量</span><br>vi /etc/profile<br><br><span class="hljs-comment"># 在最后添加</span><br><span class="hljs-built_in">export</span> MAVEN_HOME=/usr/<span class="hljs-built_in">local</span>/bin/apache-maven-3.6.3<br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/<span class="hljs-built_in">local</span>/bin/jdk1.8.0_261<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$MAVEN_HOME</span>/bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><br><span class="hljs-comment"># 配置生效</span><br><span class="hljs-built_in">source</span> /etc/profile<br><br><span class="hljs-comment"># 验证生效</span><br>java -version<br>mvn -v<br></code></pre></td></tr></table></figure><ul><li>为nacos创建数据库连接用户</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">create user nacos identified by <span class="hljs-string">&#x27;nacos123.X&#x27;</span>;<br><br>grant all privileges on *.* to <span class="hljs-string">&#x27;nacos&#x27;</span>@<span class="hljs-string">&#x27;192.168.%&#x27;</span> identified by <span class="hljs-string">&#x27;nacos123.X&#x27;</span> with grant option;<br><br>flush privileges;<br></code></pre></td></tr></table></figure><ul><li>解压nacos，并移动到安装目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -zxvf nacos-server-1.3.0.tar.gz<br>mv nacos /usr/<span class="hljs-built_in">local</span>/<br></code></pre></td></tr></table></figure><ul><li>初始化数据库脚本，找到 <code>nacos-mysql.sql</code> ，将其导入到数据库中</li><li>配置文件，<code>vi application.properties</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">spring.datasource.platform=mysql<br>db.num=1<br>db.url.0=jdbc:mysql://192.168.153.161:3306/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=<span class="hljs-literal">true</span><br>db.user=nacos<br>db.password=nacos123.X<br></code></pre></td></tr></table></figure><ul><li>把<code>cluster.conf.example 改名成 cluster.conf</code> ，并修改配置<code>vi cluster.conf</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#it is ip</span><br>10.0.0.1:8848<br>10.0.0.2:8848<br>10.0.0.3:8848<br></code></pre></td></tr></table></figure><ul><li>分别部署到服务器</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sh startup.sh<br></code></pre></td></tr></table></figure><ul><li>验证，访问不同主机的地址，查看是否可以正常访问</li></ul><h3 id="3-配置nginx反向代理"><a href="#3-配置nginx反向代理" class="headerlink" title="3. 配置nginx反向代理"></a>3. 配置nginx反向代理</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 下载nginx安装包</span><br>wget https://nginx.org/download/nginx-1.18.0.tar.gz<br><span class="hljs-comment"># 安装依赖</span><br>yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel<br><span class="hljs-comment"># 解压</span><br>mkdir -p /usr/<span class="hljs-built_in">local</span>/nginx<br>tar -zxvf nginx-1.18.0.tar.gz<br>mv nginx-1.18.0 /usr/<span class="hljs-built_in">local</span>/nginx/<br><span class="hljs-comment"># 执行configure</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/nginx/nginx-1.18.0<br>./configure<br>make<br>make install<br></code></pre></td></tr></table></figure><ul><li>配置nginx反向代理</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">upstream nacos &#123;<br>        server  192.168.153.161:8848;<br>        server  192.168.153.162:8848;<br>        server  192.168.153.163:8848;<br>    &#125;<br><br>server &#123;<br>        listen       80;<br>        server_name  192.168.153.163;<br><br>        location /nacos/ &#123;<br>            proxy_pass http://nacos/nacos/;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>启动nginx</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">/usr/<span class="hljs-built_in">local</span>/nginx/sbin/nginx -s reload<br><br><span class="hljs-comment"># 如果出现报错：nginx: [error] open() ＂/usr/local/nginx/logs/nginx.pid＂ failed</span><br>运行： `/usr/<span class="hljs-built_in">local</span>/nginx/sbin/nginx -c /usr/<span class="hljs-built_in">local</span>/nginx/conf/nginx.conf` 再次启动即可<br><br>ps -ef | grep nginx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nacos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>nacos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker启动各种服务</title>
    <link href="/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/01/30/docker%E5%90%AF%E5%8A%A8%E5%90%84%E7%A7%8D%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="启动activemq"><a href="#启动activemq" class="headerlink" title="启动activemq"></a>启动activemq</h3><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">docker run --name=<span class="hljs-string">&#x27;activemq&#x27;</span> -d \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_NAME=amqp-srv1&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_DEFAULTACCOUNT=false&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_ADMIN_LOGIN=admin&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_ADMIN_PASSWORD=your_password&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_USERS_myproducer=producerpassword&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_GROUPS_writes=myproducer&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_USERS_myconsumer=consumerpassword&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_GROUPS_reads=myconsumer&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_JMX_user1_role=readwrite&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_JMX_user1_password=jmx_password&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_JMX_user2_role=read&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_JMX_user2_password=jmx2_password&#x27;</span><br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_TOPICS_topic1=mytopic1&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_TOPICS_topic2=mytopic2&#x27;</span>  \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_QUEUES_queue1=myqueue1&#x27;</span> -e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_QUEUES_queue2=myqueue2&#x27;</span>  \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_MINMEMORY=1024&#x27;</span> -e  <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_MAXMEMORY=4096&#x27;</span> \<br>-e <span class="hljs-string">&#x27;ACTIVEMQ_CONFIG_SCHEDULERENABLED=true&#x27;</span> \<br>-v /data/activemq:/data \<br>-v /var/<span class="hljs-built_in">log</span>/activemq:/var/<span class="hljs-built_in">log</span>/activemq \<br>-p 8161:8161 \<br>-p 61616:61616 \<br>-p 61613:61613 \<br>webcenter/activemq:5.14.3<br></code></pre></td></tr></table></figure><p><code>docker run --name activemq-5.14 -d -e ACTIVEMQ_ADMIN_LOGIN=admin -e ACTIVEMQ_ADMIN_PASSWORD=admin@mq -v /home/activemq/data:/data -v /home/activemq/log:/var/log/activemq -p 8161:8161 -p 61616:61616 -p 61613:61613 webcenter/activemq:5.14.3</code></p><hr><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 简单启动</span><br>docker run -p 3306:3306 --name mysql -v <span class="hljs-variable">$PWD</span>/conf:/etc/mysql/conf.d -v <span class="hljs-variable">$PWD</span>/logs:/logs -v <span class="hljs-variable">$PWD</span>/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.23<br></code></pre></td></tr></table></figure><p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。<br>-v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。<br>-v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。<br>-v $PWD/data:/var/lib/mysql :将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。<br>-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。<br>-d 后台运行</p><hr><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --name nginx-1.16.1 -v /home/nginxdata/x-springboot-ui:/usr/share/nginx/html -v /home/nginxdata/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/nginxdata/conf.d:/etc/nginx/conf.d -v /home/nginxdata/logs:/var/<span class="hljs-built_in">log</span>/nginx -p 80:80 -d nginx:1.16.1<br></code></pre></td></tr></table></figure><p>1、配置nginx.conf，设置user为root用户<br>2、配置default.conf，开启目录浏览<br>        autoindex on; # 开启目录显示<br>        autoindex_exact_size off; # 显示出文件的确切大小.关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b<br>        autoindex_localtime on; # 显示的文件时间为文件的服务器时间<br>        charset utf-8,gbk; # 避免中文乱码</p><hr><h3 id="启动oracle-11g"><a href="#启动oracle-11g" class="headerlink" title="启动oracle 11g"></a>启动oracle 11g</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 一开始无法使用挂载，必须先启动后再使用</span><br>1、docker run --name oracle_11g -v /home/oracle:/home/oracle -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g:latest<br><br>docker run --name oracle11g -v /root/oracle_data/helowin:/home/oracle/app/oracle/oradata/helowin -p 1521:1521 -d registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g:latest<br><br>2、docker <span class="hljs-built_in">exec</span> -it oracle_11g bash<br><br>3、su root 【密码】：helowin<br><br>4、vi /etc/profile<br><br><span class="hljs-built_in">export</span> ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2<br><span class="hljs-built_in">export</span> ORACLE_SID=helowin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$ORACLE_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-built_in">source</span> /etc/profile --加载环境变量<br>ln -s <span class="hljs-variable">$ORACLE_HOME</span>/bin/sqlplus /usr/bin -- 软连接<br><br>5、su - oracle<br><br>6、sqlplus /nolog<br><br>7、conn /as sysdba<br><br>8、<br>alter user system identified by system; --修改system用户账号<br><br>alter user sys identified by system; --修改sys用户账号<br><br>create user db identified by dbzenith; --创建内部管理员账号，设备管理系统默认使用db用户<br><br>grant connect,resource,dba to db; --将dba权限授权给内部管理员账号<br><br>alter profile default <span class="hljs-built_in">limit</span> password_life_time unlimited; --修改密码规则策略为密码永不过期<br><br>alter system <span class="hljs-built_in">set</span> processes=1000 scope=spfile; --修改数据库最大连接数据<br><br>9、重启数据库<br><span class="hljs-built_in">exit</span> 退出当前操作<br>sqlplus /nolog<br>conn /as sysdba<br>shutdown immediate; --关闭数据库<br>startup; --启动数据库<br><br>10、退出，查看具体实例<br>lsnrctl status<br><br><br>11、删除用户操作<br>SELECT SID,SERIAL<span class="hljs-comment"># FROM V$SESSION WHERE USERNAME=&#x27;DEVUSER&#x27;;  -- 一定都要大写</span><br>ALTER  SYSTEM  KILL SESSION <span class="hljs-string">&#x27;137,41813&#x27;</span>;<br>drop  user sstest cascade;<br><br><br><span class="hljs-comment"># --删除oracle--</span><br>rm -rf /home/oracle/app/oracle/flash_recovery_area/helowin/control02.ctl<br></code></pre></td></tr></table></figure><hr><h3 id="启动portainer"><a href="#启动portainer" class="headerlink" title="启动portainer"></a>启动portainer</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --name portainer -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -d portainer/portainer:linux-amd64<br></code></pre></td></tr></table></figure><hr><h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 简单启动</span><br>docker run --name redis-5.0.7 -p 6379:6379 -d redis:5.0.7 --requirepass <span class="hljs-string">&quot;admin123&quot;</span><br><span class="hljs-comment"># 持久化</span><br>docker run --name redis -v /home/redis/data:/data -p 6379:6379 -d redis:5.0.7 --requirepass <span class="hljs-string">&quot;admin123&quot;</span> --appendonly yes<br></code></pre></td></tr></table></figure><p>–name redis-test #运行的docker容器名<br>-p 6379:6379 #宿主本地端口:docker端口(容器里的端口)<br>-d redis #daemonize模式运行，完整-d redis:版本号，默认为最新版本</p><hr><h3 id="启动sonarqube"><a href="#启动sonarqube" class="headerlink" title="启动sonarqube"></a>启动sonarqube</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 采用volume挂载方式，本地文件挂载有权限问题</span><br>docker run -d --name sonarqube --restart always \<br>-p 9000:9000 \<br>-v sonarqube_conf:/opt/sonarqube/conf \<br>-v sonarqube_extensions:/opt/sonarqube/extensions \<br>-v sonarqube_logs:/opt/sonarqube/logs \<br>-v sonarqube_data:/opt/sonarqube/data \<br>sonarqube:7.9.2-community<br><br><br><span class="hljs-comment">#分析项目</span><br><span class="hljs-comment">#1、需要先将项目打包运行</span><br><span class="hljs-comment">#2、运行分析代码</span><br>sonar-scanner -Dsonar.host.url=http://192.168.153.150:9000 \<br>              -Dsonar.projectKey=simple-java-maven-app \<br>              -Dsonar.projectName=simple-java-maven-app \<br>              -Dsonar.projectVersion=1.0 \<br>              -Dsonar.login=admin \<br>              -Dsonar.password=admin \<br>              -Dsonar.ws.timeout=30 \<br>              -Dsonar.projectDescription=<span class="hljs-string">&quot;my first project!&quot;</span> \<br>              -Dsonar.links.homepage=http://www.baidu.com \<br>              -Dsonar.sources=src \<br>              -Dsonar.sourceEncoding=UTF-8 \<br>              -Dsonar.java.binaries=target/classes \<br>              -Dsonar.java.test.binaries=target/test-classes \<br>              -Dsonar.java.surefire.report=target/surefire-reports<br></code></pre></td></tr></table></figure><hr><h3 id="启动sqlserver2017"><a href="#启动sqlserver2017" class="headerlink" title="启动sqlserver2017"></a>启动sqlserver2017</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --name sqlserver_2017 -v /home/sqlserver:/var/opt/mssql -e <span class="hljs-string">&#x27;ACCEPT_EULA=Y&#x27;</span> -e <span class="hljs-string">&#x27;SA_PASSWORD=admin123.X&#x27;</span> -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest<br></code></pre></td></tr></table></figure><p>使用sqlcmd创建数据库</p><p>进入容器 docker exec -it 容器名称 bash</p><p>创建数据库<br>/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P XXXX</p><hr><h3 id="启动rabbitmq"><a href="#启动rabbitmq" class="headerlink" title="启动rabbitmq"></a>启动rabbitmq</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -p 15672:15672 \<br>-p 5672:5672 \<br>-p 25672:25672 \<br>-p 15674:15674 \<br>-p 61613:61613 \<br>-v /home/yzh/Documents/Installed/docker/docker_repo/rabbitmq/:/var/lib/rabbitmq/mnesia \<br>--name rabbitmq3 \<br>--restart=always \<br>-d rabbitmq:3.7.8-management<br><br><span class="hljs-comment"># 启动rabbitmq的mqtt和stomp协议</span><br>docker run --name rabbitmq \<br>-p 15672:15672 \<br>-p 5672:5672 \<br>-p 15674:15674 \<br>-p 61613:61613 \<br>-p 15675:15675 \<br>-p 1883:1883 \<br>-d rabbitmq:3.8.14-management<br><br><span class="hljs-comment"># 进入容器内部</span><br><span class="hljs-comment"># rabbit开启stomp</span><br>rabbitmq-plugins <span class="hljs-built_in">enable</span> rabbitmq_stomp<br>rabbitmq-plugins <span class="hljs-built_in">enable</span> rabbitmq_web_stomp<br><br><span class="hljs-comment"># rabbit开启mqtt</span><br>rabbitmq-plugins <span class="hljs-built_in">enable</span> rabbitmq_mqtt<br>rabbitmq-plugins <span class="hljs-built_in">enable</span> rabbitmq_web_mqtt<br></code></pre></td></tr></table></figure><p>15672，rabbitmq的web页面端口</p><p>5672，amqp协议端口</p><p>25672，集群使用</p><p>15674，stomp的ws端口</p><p>61613，stomp的tcp端口</p><p>1883，mqtt的tcp协议端口</p><p>15675，mqtt的ws端口</p><hr><h3 id="启动traefik"><a href="#启动traefik" class="headerlink" title="启动traefik"></a>启动traefik</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --name traefik2 -d -p 8080:8080 -p 80:80 -v <span class="hljs-variable">$PWD</span>/traefik.yml:/etc/traefik/traefik.yml -v /var/run/docker.sock:/var/run/docker.sock traefik:v2.4.8<br></code></pre></td></tr></table></figure><h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --name mongo -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin -v /data/mongodb:/data/db -p 27017:27017 -d mongo:5.0<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.1&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mongo:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mongo</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MONGO_INITDB_ROOT_USERNAME:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">MONGO_INITDB_ROOT_PASSWORD:</span> <span class="hljs-string">example</span><br>  <span class="hljs-attr">mongo-express:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mongo-express</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8081</span><span class="hljs-string">:8081</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">ME_CONFIG_MONGODB_ADMINUSERNAME:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">ME_CONFIG_MONGODB_ADMINPASSWORD:</span> <span class="hljs-string">example</span><br>      <span class="hljs-attr">ME_CONFIG_MONGODB_URL:</span> <span class="hljs-string">mongodb://root:example@mongo:27017/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>container</tag>
      
      <tag>容器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-ce安装</title>
    <link href="/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/30/docker-ce%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="卸载原有docker及缓存"><a href="#卸载原有docker及缓存" class="headerlink" title="卸载原有docker及缓存"></a>卸载原有docker及缓存</h4><ol><li><p>卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine<br></code></pre></td></tr></table></figure></li><li><p>清缓存<br>将docker的缓存，包括镜像、图片、网络等删除。docker默认位置：/var/lib/docker</p></li></ol><h4 id="添加必要的包"><a href="#添加必要的包" class="headerlink" title="添加必要的包"></a>添加必要的包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure><h4 id="添加稳定版本仓库地址"><a href="#添加稳定版本仓库地址" class="headerlink" title="添加稳定版本仓库地址"></a>添加稳定版本仓库地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><h4 id="安装docker-ce-最新版本"><a href="#安装docker-ce-最新版本" class="headerlink" title="安装docker-ce(最新版本)"></a>安装docker-ce(最新版本)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p><strong>安装指定版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 查询版本</span><br>yum list docker-ce --showduplicates | sort -r<br><span class="hljs-meta">#</span><span class="bash"> 安装</span><br>yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io<br></code></pre></td></tr></table></figure><h4 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h4><ol><li>下载地址：<a href="https://download.docker.com/linux/static/stable/">https://download.docker.com/linux/static/stable/</a></li><li>安装步骤<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 解压包</span><br>tar xzvf /path/to/&lt;FILE&gt;.tar.gz<br><span class="hljs-meta">#</span><span class="bash"> 移动</span><br>sudo cp docker/* /usr/bin/<br><span class="hljs-meta">#</span><span class="bash"> 启动docker</span><br>sudo dockerd &amp;<br><span class="hljs-meta">#</span><span class="bash"> 验证</span><br>sudo docker run hello-world<br></code></pre></td></tr></table></figure></li></ol><h3 id="添加镜像加速"><a href="#添加镜像加速" class="headerlink" title="添加镜像加速"></a>添加镜像加速</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/docker/daemon.json<br><span class="hljs-meta">#</span><span class="bash"> 配置阿里镜像加速</span><br>&quot;registry-mirrors&quot;: [&quot;https://j54517kd.mirror.aliyuncs.com&quot;]<br></code></pre></td></tr></table></figure><p><strong>自动安装docker脚本</strong></p><p><a href="/img/docker-ce%E5%AE%89%E8%A3%85/install-docker.sh" title=":include :type=code">install-docker.sh</a></p>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis6集群安装</title>
    <link href="/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
    <url>/2022/01/29/redis6%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="redis6-集群安装"><a href="#redis6-集群安装" class="headerlink" title="redis6 集群安装"></a>redis6 集群安装</h2><h3 id="gcc升级"><a href="#gcc升级" class="headerlink" title="gcc升级"></a>gcc升级</h3><p>安装redis6最主要的一点是要用GCC5以上，而CentOS6.9的GCC版本为4.8.x, 所以安装之前必须升级GCC。</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">yum -y install gcc tcl<br>yum -y install centos-release-scl<br>yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils<br></code></pre></td></tr></table></figure><p>启用gcc</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt; /etc/profile<br><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><h3 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /opt<br>wget https://download.redis.io/releases/redis-6.2.6.tar.gz<br>tar -xvf redis-6.2.6.tar.gz<br><span class="hljs-built_in">cd</span> redis-6.2.6<br>make MALLOC=libc<br>make install PREFIX=/usr/<span class="hljs-built_in">local</span>/redis<br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkdir -p /usr/<span class="hljs-built_in">local</span>/redis/run<br>mkdir -p /usr/<span class="hljs-built_in">local</span>/redis/<span class="hljs-built_in">log</span><br>mkdir -p /usr/<span class="hljs-built_in">local</span>/redis/data/7000<br>mkdir -p /usr/<span class="hljs-built_in">local</span>/redis/conf<br></code></pre></td></tr></table></figure><p>设置redis配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">cp /opt/redis-6.0.9/redis.conf /usr/<span class="hljs-built_in">local</span>/redis/conf/redis_7000.conf<br>vi /usr/<span class="hljs-built_in">local</span>/redis/conf/redis_7000.conf<br></code></pre></td></tr></table></figure><p>文件配置内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">bind</span> 192.168.146.199   <span class="hljs-comment">#添加本机的ip</span><br>port 7000  <span class="hljs-comment">#端口　　</span><br>pidfile /usr/<span class="hljs-built_in">local</span>/redis/run/redis_7000.pid   <span class="hljs-comment">#pid存储目录</span><br>logfile /usr/<span class="hljs-built_in">local</span>/redis/<span class="hljs-built_in">log</span>/redis_7000.log   <span class="hljs-comment">#日志存储目录</span><br>dir /usr/<span class="hljs-built_in">local</span>/redis/data/7000                <span class="hljs-comment">#数据存储目录，目录要提前创建好</span><br>cluster-enabled yes  <span class="hljs-comment">#开启集群</span><br>cluster-config-file nodes-7000.conf   <span class="hljs-comment">#集群节点配置文件，这个文件是不能手动编辑的。确保每一个集群节点的配置文件不通</span><br>cluster-node-timeout 15000   <span class="hljs-comment">#集群节点的超时时间，单位：ms，超时后集群会认为该节点失败</span><br>appendonly yes  <span class="hljs-comment">#持久化</span><br>daemonize yes   <span class="hljs-comment">#守护进程</span><br></code></pre></td></tr></table></figure><h3 id="建立不通的端口实例"><a href="#建立不通的端口实例" class="headerlink" title="建立不通的端口实例"></a>建立不通的端口实例</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">cp /usr/<span class="hljs-built_in">local</span>/redis/conf/redis_7000.conf /usr/<span class="hljs-built_in">local</span>/redis/conf/redis_7001.conf<br>mkdir -p /usr/<span class="hljs-built_in">local</span>/redis/data/7001<br>vi /usr/<span class="hljs-built_in">local</span>/redis/conf/redis_7001.conf <span class="hljs-comment"># 配置文件和上述一样，只是端口不同</span><br></code></pre></td></tr></table></figure><h3 id="制作启动文件"><a href="#制作启动文件" class="headerlink" title="制作启动文件"></a>制作启动文件</h3><p>启动脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi cluster_start.sh<br>./redis-server ../conf/redis_7000.conf<br>./redis-server ../conf/redis_7001.conf<br>chmod +x cluster_start.sh<br></code></pre></td></tr></table></figure><p>关闭脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi cluster_shutdown.sh<br>pgrep redis-server | xargs -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">kill</span> -9<br>chmod +x cluster_shutdown.sh<br></code></pre></td></tr></table></figure><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>建立集群前需先启动各个节点的redis服务，并在其中一个redis服务器中执行以下指令建立集群。在5.0之后，可以直接使用redis-cli直接创建集群。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">redis-cli --cluster create 192.168.146.199:7000 192.168.146.200:7000 192.168.146.201:7000 192.168.146.199:7001 192.168.146.200:7001 192.168.146.201:7001 --cluster-replicas 1<br></code></pre></td></tr></table></figure><p>–cluster-replicas 1 参数表示希望每个主服务器都有一个从服务器，这里则代表3主3从，前3个代表3个master，后3个代表3个slave。</p><p>通过该方式创建的带有从节点的机器不能够自己手动指定主节点，redis集群会尽量把主从服务器分配在不同机器上。</p><h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">redis-cli -c -h 192.168.146.199 -p 7000 cluster info<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7安装nginx</title>
    <link href="/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/"/>
    <url>/2022/01/29/centos7%E5%AE%89%E8%A3%85nginx/</url>
    
    <content type="html"><![CDATA[<h3 id="Centos7安装nginx"><a href="#Centos7安装nginx" class="headerlink" title="Centos7安装nginx"></a>Centos7安装nginx</h3><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">yum install -y gcc automake autoconf libtool make<br>yum install -y gcc-c++<br>yum install -y pcre pcre-devel<br>yum install -y zlib zlib-devel<br>yum install -y openssl openssl-devel<br></code></pre></td></tr></table></figure><h4 id="下载nginx安装包"><a href="#下载nginx安装包" class="headerlink" title="下载nginx安装包"></a>下载nginx安装包</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget http://nginx.org/download/nginx-1.20.1.tar.gz<br></code></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -zxvf  nginx-1.20.1.tar.gz<br><span class="hljs-built_in">cd</span> nginx-1.20.1<br>./configure<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 切换到nginx默认安装目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/nginx/sbin<br><span class="hljs-comment"># 启动</span><br>./nginx<br><span class="hljs-comment"># 查看nginx启动情况</span><br>netstat -nlp|grep 80<br></code></pre></td></tr></table></figure><h4 id="配置及开机自启动"><a href="#配置及开机自启动" class="headerlink" title="配置及开机自启动"></a>配置及开机自启动</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 配置nginx命令</span><br>ln -s /usr/<span class="hljs-built_in">local</span>/nginx/sbin/nginx /usr/<span class="hljs-built_in">local</span>/bin/nginx<br><span class="hljs-comment"># 开机自启</span><br>systemctl status rc-local <span class="hljs-comment"># 查看自启文件，centos一般默认为 /etc/rc.d/rc.local</span><br>vi /etc/rc.d/rc.local<br><span class="hljs-comment"># 在最后一行添加nginx启动</span><br>/usr/<span class="hljs-built_in">local</span>/nginx/sbin/nginx<br><span class="hljs-comment"># 赋予可执行权限</span><br>chmod +x /etc/rc.d/ec.local<br><span class="hljs-comment"># 重新加载，需要先停止nginx服务，否付会出现端口已经占用的错误</span><br>systemctl reload rc-local<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更新kubeadm证书</title>
    <link href="/2022/01/29/%E6%9B%B4%E6%96%B0kubeadm%E8%AF%81%E4%B9%A6/"/>
    <url>/2022/01/29/%E6%9B%B4%E6%96%B0kubeadm%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<h3 id="1-续期k8s证书"><a href="#1-续期k8s证书" class="headerlink" title="1. 续期k8s证书"></a>1. 续期k8s证书</h3><p>使用kubeadm搭建的k8s集群默认的kubectl只有一年有效期。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>备份当前k8s证书<figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">cp -r /etc/kubernetes /etc/kubernetes.bak<br></code></pre></td></tr></table></figure></li><li>查看过期时间<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubeadm alpha certs check-expiration<br></code></pre></td></tr></table></figure></li><li>更新证书<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubeadm alpha certs renew all<br><br>systemctl restart kubelet<br><br>cp -a /etc/kubernetes/admin.conf /root/.kube/config<br></code></pre></td></tr></table></figure></li></ol><h3 id="2-需要更改文件"><a href="#2-需要更改文件" class="headerlink" title="2. 需要更改文件"></a>2. 需要更改文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs txt">└─etc<br>    └─kubernetes<br>        │  admin.conf<br>        │  config<br>        │  controller-manager.conf<br>        │  scheduler.conf<br>        │  <br>        ├─etcd<br>        │   healthcheck-client.crt<br>        │   healthcheck-client.key<br>        │   peer.crt<br>        │   peer.key<br>        │   server.crt<br>        │   server.key<br>        │      <br>        └─pki<br>            apiserver-etcd-client.crt<br>            apiserver-etcd-client.key<br>            apiserver-kubelet-client.crt<br>            apiserver-kubelet-client.key<br>            apiserver.crt<br>            apiserver.key<br>            front-proxy-client.crt<br>            front-proxy-client.key<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
      <tag>kubeadm</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
